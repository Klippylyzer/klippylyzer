{"mappings":"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","sources":["src/Routes/Moonraker/History.tsx","src/types/index.ts","src/types/moonraker.ts"],"sourcesContent":["import { produce } from \"immer\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { BsCheckCircle, BsClock, BsXCircle } from \"react-icons/bs\";\r\nimport { TbAlertTriangle } from \"react-icons/tb\";\r\nimport cx from \"ts-classnames\";\r\n\r\nimport useMoonraker from \"../../Context/Moonraker\";\r\nimport { JobStatus, MoonrakerHistoryTotals, MoonrakerJob } from \"../../types\";\r\nimport { useRpcHandler } from \"../../utils/jsonrpc\";\r\n\r\nfunction ApproxLength({ length }: { length: number }) {\r\n  return (\r\n    <span>\r\n      {length > 100000\r\n        ? `${(length / 100000).toFixed(1)} km`\r\n        : length > 100\r\n        ? `${(length / 1000).toFixed(1)} m`\r\n        : length > 10\r\n        ? `${(length / 10).toFixed(1)}cm`\r\n        : `${length.toFixed(1)}mm`}\r\n    </span>\r\n  );\r\n}\r\nfunction ApproxDuration({ duration }: { duration: number }) {\r\n  return (\r\n    <span>\r\n      {duration > 3600 * 48\r\n        ? `${(duration / (3600 * 24)).toFixed(1)} days`\r\n        : duration > 3600\r\n        ? `${(duration / 3600).toFixed(1)} h`\r\n        : duration > 60\r\n        ? `${(duration / 60).toFixed(1)} min`\r\n        : `${duration.toFixed(1)}s`}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default function History() {\r\n  const { rpc } = useMoonraker();\r\n  const [history, setHistory] = useState<Array<MoonrakerJob>>([]);\r\n  const [totals, setTotals] = useState<null | MoonrakerHistoryTotals>(null);\r\n\r\n  useEffect(() => {\r\n    if (!rpc) return;\r\n\r\n    rpc.call(\"server.history.totals\").then(({ job_totals }) => {\r\n      setTotals(job_totals);\r\n    });\r\n    rpc.call(\"server.history.list\").then(({ count, jobs }) => {\r\n      setHistory(jobs);\r\n      console.log(count, jobs.length);\r\n    });\r\n  }, [rpc, setHistory, setTotals]);\r\n\r\n  useRpcHandler(rpc, \"notify_history_changed\", ([{ action, job }]) => {\r\n    console.log(action, job);\r\n\r\n    setHistory(\r\n      produce((draft) => {\r\n        draft.unshift(job);\r\n      })\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <h2 className={cx(\"text-xl\")}>History</h2>\r\n\r\n      <article className={cx(\"flex\", \"flex-row\")}>\r\n        {totals && (\r\n          <>\r\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\r\n              <div className={cx(\"card-body\")}>\r\n                <h2 className={cx(\"card-title\")}>Longest Job</h2>\r\n                <ApproxDuration duration={totals.longest_job} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\r\n              <div className={cx(\"card-body\")}>\r\n                <h2 className={cx(\"card-title\")}>Longest Print</h2>\r\n                <ApproxDuration duration={totals.longest_print} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\r\n              <div className={cx(\"card-body\")}>\r\n                <h2 className={cx(\"card-title\")}>Filament Used</h2>\r\n                <ApproxLength length={totals.total_filament_used} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\r\n              <div className={cx(\"card-body\")}>\r\n                <h2 className={cx(\"card-title\")}>Total Jobs</h2>\r\n                {totals.total_jobs}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\r\n              <div className={cx(\"card-body\")}>\r\n                <h2 className={cx(\"card-title\")}>Print Time</h2>\r\n                <ApproxDuration duration={totals.total_print_time} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\r\n              <div className={cx(\"card-body\")}>\r\n                <h2 className={cx(\"card-title\")}>Total Time</h2>\r\n                <ApproxDuration duration={totals.total_time} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </article>\r\n      <table className={cx(\"table\", \"table-compact\", \"text-sm\")}>\r\n        <thead>\r\n          <tr>\r\n            <th>Filename</th>\r\n            <th>Start</th>\r\n            <th>Status</th>\r\n            <th>Total Time</th>\r\n            <th>Print Time</th>\r\n            <th>Filament Used</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className={cx(\"text-sm\")}>\r\n          {history.map((job) => (\r\n            <tr key={job.job_id}>\r\n              <td className={cx(\"line-clamp-1\")}>{job.filename}</td>\r\n              <td>{new Date(job.start_time * 1000).toLocaleString()}</td>\r\n              <td title={job.status}>\r\n                {(() => {\r\n                  switch (job.status) {\r\n                    case JobStatus.Printing:\r\n                    case JobStatus.InProgress:\r\n                      return <BsClock size=\"1.5rem\" className={cx(\"fill-primary\", \"-m-0.5\")} />;\r\n                    case JobStatus.Completed:\r\n                      return <BsCheckCircle size=\"1.5rem\" className={cx(\"fill-success\", \"-m-0.5\")} />;\r\n                    case JobStatus.Cancelled:\r\n                      return <BsXCircle size=\"1.5rem\" className={cx(\"fill-info\", \"-m-0.5\")} />;\r\n                    case JobStatus.Error:\r\n                    case JobStatus.Server_Exit:\r\n                    case JobStatus.Klippy_Shutdown:\r\n                    case JobStatus.Klippy_Disconnect:\r\n                      return <TbAlertTriangle size=\"1.5rem\" className={cx(\"fill-error\", \"-m-0.5\")} />;\r\n                  }\r\n                })()}\r\n              </td>\r\n              <td>\r\n                <ApproxDuration duration={job.total_duration} />\r\n              </td>\r\n              <td>\r\n                <ApproxDuration duration={job.print_duration} />\r\n              </td>\r\n              <td>\r\n                <ApproxLength length={job.filament_used} />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n","export type Temps = { time: number; temps: { [key: string]: number } };\r\nexport type Stats = {\r\n  time: number;\r\n  values: Record<string, Record<string, number>>;\r\n};\r\n\r\nexport type KlippyLog = {\r\n  epoch: number;\r\n  raw: string;\r\n  config: string;\r\n  stats: Stats[];\r\n};\r\n\r\nexport * from \"./basic\";\r\nexport * from \"./moonraker\";\r\nexport * from \"./rpc\";\r\nexport * from \"./worker\";\r\n","import { PointTuple, PositionTuple } from \"./basic\";\r\n\r\nexport type MoonrakerUpdateStatus = {\r\n  [key: string]: unknown;\r\n};\r\n\r\n// TODO: Missing fade details\r\nexport interface BedMeshStatus {\r\n  profile_name: string;\r\n  mesh_min: PointTuple;\r\n  mesh_max: PointTuple;\r\n  probed_matrix: Array<Array<number>>; // Actual probed points\r\n  mesh_matrix: Array<Array<number>>; // Interpolated matrix\r\n  profiles: {\r\n    [profile_name: string]: {\r\n      points: Array<Array<number>>;\r\n      mesh_params: {\r\n        min_x: number;\r\n        max_x: number;\r\n        min_y: number;\r\n        max_y: number;\r\n        x_count: number;\r\n        y_count: number;\r\n        mesh_x_pps: number;\r\n        mesh_y_pps: number;\r\n        algo: \"lagrange\" | \"bicubic\";\r\n        tension: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ProbeStatus {\r\n  last_query: boolean;\r\n  last_z_result: number;\r\n}\r\nexport interface ZCalibrationStatus {\r\n  last_query: boolean;\r\n  last_z_offset: number;\r\n}\r\n\r\nexport interface MotionReport {\r\n  live_position: PositionTuple;\r\n  live_velocity: number;\r\n  live_extruder_velocity: number;\r\n  steppers: string[];\r\n  trapq: string[];\r\n}\r\n\r\nexport interface Toolhead {\r\n  homed_axes: \"\" | \"x\" | \"y\" | \"z\" | \"xy\" | \"xz\" | \"yz\" | \"xyz\";\r\n  axis_minimum: PositionTuple;\r\n  axis_maximum: PositionTuple;\r\n  print_time: number;\r\n  stalls: number;\r\n  estimated_print_time: number;\r\n  extruder: string;\r\n  position: PositionTuple;\r\n  max_velocity: number;\r\n  max_accel: number;\r\n  max_accel_to_decel: number;\r\n  square_corner_velocity: number;\r\n}\r\n\r\nexport interface Extruder {\r\n  temperature: number;\r\n  target: number;\r\n  power: number;\r\n  can_extrude: boolean;\r\n  pressure_advance: number;\r\n  smooth_time: number;\r\n}\r\n\r\nexport interface MCU {\r\n  mcu_version: string;\r\n  mcu_build_versions: string;\r\n  mcu_constants: { [key: string]: string | number };\r\n  last_stats: {\r\n    mcu_awake: number;\r\n    mcu_task_avg: number;\r\n    mcu_task_stddev: number;\r\n    bytes_write: number;\r\n    bytes_read: number;\r\n    bytes_retransmit: number;\r\n    bytes_invalid: number;\r\n    send_seq: number;\r\n    receive_seq: number;\r\n    retransmit_seq: number;\r\n    srtt: number;\r\n    rttvar: number;\r\n    rto: number;\r\n    ready_bytes: number;\r\n    stalled_bytes: number;\r\n    freq: number;\r\n  };\r\n}\r\nexport interface MachineSystemInfo {\r\n  python: {\r\n    version: [number, number, number, string, number];\r\n    version_string: string;\r\n  };\r\n  cpu_info: {\r\n    cpu_count: number; // 4\r\n    bits: string; // \"64bit\"\r\n    processor: string; // \"aarch64\"\r\n    cpu_desc: string; // \"\"\r\n    serial_number: string; // \"10000000195cf705\"\r\n    hardware_desc: string; // \"BCM2835\"\r\n    model: string; // \"Raspberry Pi 4 Model B Rev 1.4\"\r\n    total_memory: number; // 3705688\r\n    memory_units: string; // \"kB\"\r\n  };\r\n  sd_info?: {\r\n    manufacturer_id: string; // \"03\"\r\n    manufacturer: string; // \"Sandisk\"\r\n    oem_id: string; // \"5344\"\r\n    product_name: string; // \"SN128\"\r\n    product_revision: string; // \"8.0\"\r\n    serial_number: string; // \"711addbe\"\r\n    manufacturer_date: string; // \"4/2021\"\r\n    capacity: string; // \"119.1 GiB\"\r\n    total_bytes: number; // 127865454592\r\n  };\r\n  distribution?: {\r\n    name: string; // \"Debian GNU/Linux 11 (bullseye)\";\r\n    id: string; // \"debian\";\r\n    version: string; // \"11\";\r\n    version_parts: {\r\n      major: string; //  \"11\"\r\n      minor: string; //  \"\"\r\n      build_number: string; //  \"\"\r\n    };\r\n    like: string; // \"\"\r\n    codename: string; // \"bullseye\"\r\n    release_info: unknown; // {}\r\n  };\r\n  virtualization: {\r\n    virt_type: \"none\" | string;\r\n    virt_identifier: \"none\" | string;\r\n  };\r\n  network: {\r\n    [device: string]: {\r\n      mac_address: string;\r\n      ip_addresses: Array<{\r\n        family: \"ipv4\" | \"ipv6\";\r\n        address: string;\r\n        is_link_local: boolean;\r\n      }>;\r\n    };\r\n  };\r\n  // TODO: Add more known values\r\n  available_services: \"moonraker\" | \"webcamd\" | \"klipper_mcu\" | \"klipper\" | \"KlipperScreen\" | string;\r\n  service_state: Array<{\r\n    [service: string]: {\r\n      // TODO: Add more known values\r\n      active_state: \"active\" | string;\r\n      // TODO: Add more known values\r\n      sub_state: \"running\" | string;\r\n    };\r\n  }>;\r\n}\r\n\r\nexport type MoonrakerPrinterInfo = {\r\n  state: string;\r\n  state_message: string;\r\n  hostname: string;\r\n  software_version: string;\r\n  cpu_info: string;\r\n  klipper_path: string;\r\n  python_path: string;\r\n  log_file: string;\r\n  config_file: string;\r\n};\r\n\r\nexport type MoonrakerServerInfo = {\r\n  klippy_connected: boolean;\r\n  klippy_state: string;\r\n  components: string[];\r\n  failed_components: string[];\r\n  registered_directories: string[];\r\n  warnings: string[];\r\n  websocket_count: number;\r\n  moonraker_version: string;\r\n  api_version: [number, number, number];\r\n  api_version_string: string;\r\n};\r\n\r\nexport type MoonrakerAnnouncement = {\r\n  entry_id: string;\r\n  url: string;\r\n  title: string;\r\n  description: string;\r\n  priority: string;\r\n  date: number;\r\n  dismissed: boolean;\r\n  date_dismissed?: null | number;\r\n  dismiss_wake?: unknown;\r\n  source: string;\r\n  feed: string;\r\n};\r\n\r\nexport enum JobStatus {\r\n  Completed = \"completed\",\r\n  Cancelled = \"cancelled\",\r\n  Error = \"error\",\r\n  Printing = \"printing\",\r\n  InProgress = \"in_progress\",\r\n  Server_Exit = \"server_exit\",\r\n  Klippy_Shutdown = \"klippy_shutdown\",\r\n  Klippy_Disconnect = \"klippy_disconnect\",\r\n}\r\n\r\nexport type MoonrakerJob = {\r\n  job_id: string;\r\n  exists: boolean;\r\n  end_time: number;\r\n  filament_used: number;\r\n  filename: string;\r\n  metadata: { [key: string]: unknown };\r\n  print_duration: number;\r\n  status: JobStatus;\r\n  start_time: number;\r\n  total_duration: number;\r\n};\r\n\r\nexport type MoonrakerExcludeObjectStatus = {\r\n  objects: Array<{\r\n    name: string;\r\n    center: PointTuple;\r\n    polygon: Array<PointTuple>;\r\n  }>;\r\n  excluded_objects: Array<string>;\r\n  current_object: null | string;\r\n};\r\n\r\nexport type MoonrakerProcStats = {\r\n  cpu_temp: number;\r\n  moonraker_stats: {\r\n    time: number;\r\n    cpu_usage: number;\r\n    memory: number;\r\n    mem_units: string;\r\n  };\r\n  throttled_state?: {\r\n    bits: number;\r\n    flags: string[];\r\n  };\r\n  network: {\r\n    [device_name: string]: {\r\n      rx_bytes: number;\r\n      tx_bytes: number;\r\n      bandwidth: number;\r\n    };\r\n  };\r\n  system_cpu_usage: { [key: string]: number };\r\n  system_memory: {\r\n    total: number;\r\n    available: number;\r\n    used: number;\r\n  };\r\n  websocket_connections: number;\r\n};\r\n\r\nexport type MoonrakerHistoryTotals = {\r\n  total_jobs: number;\r\n  total_time: number;\r\n  total_print_time: number;\r\n  total_filament_used: number;\r\n  longest_job: number;\r\n  longest_print: number;\r\n};\r\n"],"names":["$bbzbN","parcelRequire","$e17abf666379c831$var$ApproxLength","length","jsx","toFixed","$e17abf666379c831$var$ApproxDuration","duration","$e17abf666379c831$export$2e2bcd8739ae039","rpc","$euEFD","default","history","setHistory","$7fPBF","useState","totals","setTotals","useEffect","call","then","job_totals","count","jobs","console","log","$jmYrh","useRpcHandler","action","job","$9GPfD","produce","draft","unshift","jsxs","className","$parcel$interopDefault","$UBbba","Fragment","longest_job","longest_print","total_filament_used","total_jobs","total_print_time","total_time","map","filename","Date","start_time","toLocaleString","title","status","$c6PTv","JobStatus","Printing","InProgress","$8bTKe","BsClock","size","Completed","BsCheckCircle","Cancelled","BsXCircle","Error","Server_Exit","Klippy_Shutdown","Klippy_Disconnect","$frKfJ","TbAlertTriangle","total_duration","print_duration","filament_used","job_id","$3f31e48691400712$export$132cc870506ec32"],"version":3,"file":"History.236f499a.js.map"}