{"version":3,"file":"Analysis.b4ab851c.js","sources":["../../src/utils/analysis.ts","../../src/Routes/KlippyLog/Analysis.tsx"],"sourcesContent":["import { KlippyLog, Temps } from \"../types\";\nimport { statsToTemps } from \".\";\n\nfunction calculateRunningAverages(allTemps: Temps[]) {\n  const averages: Temps[] = [];\n\n  let runningTemps: Temps[] = [];\n  for (const temps of allTemps) {\n    runningTemps = runningTemps.slice(1, 5).concat(temps);\n    const average: Temps = { time: temps.time, temps: {} };\n\n    runningTemps.forEach((temps) =>\n      Object.entries(temps.temps).forEach(([key, value]) => {\n        average.temps[key] = (average.temps[key] || 0) + value;\n      })\n    );\n\n    averages.push({\n      time: average.time,\n      temps: Object.fromEntries(\n        Object.entries(average.temps).map(([key, value]) => [key, value / runningTemps.length])\n      ),\n    });\n  }\n\n  return averages;\n}\nexport function searchForAbnormalTemperatureSpikes(log: KlippyLog) {\n  const allTemps = statsToTemps(log.stats);\n  const averages = calculateRunningAverages(allTemps);\n\n  const anomalies = [];\n  let lastAverage = averages[0];\n  for (const average of averages.slice(1)) {\n    for (const [key, value] of Object.entries(average)) {\n      if (lastAverage.temps[key] > 0 && value > lastAverage.temps[key] * 1.2) {\n        anomalies.push({\n          time: average.time,\n          name: key,\n          previousAverage: lastAverage.temps[key],\n          value,\n        });\n      }\n    }\n    lastAverage = average;\n  }\n\n  return anomalies;\n}\n","\nimport { KlippyLog } from \"../../types\";\nimport { searchForAbnormalTemperatureSpikes } from \"../../utils/analysis\";\nimport cx from \"../../utils/cx\";\n\ninterface Props {\n  klippyLog: KlippyLog;\n}\n\nexport default function Analysis({ klippyLog }: Props) {\n  return (\n    <div className={cx()}>\n      <h2>General Analysis</h2>\n      {klippyLog.stats.length.toLocaleString()} stats entries\n      <h2>Temperature Analysis</h2>\n      {JSON.stringify(searchForAbnormalTemperatureSpikes(klippyLog))}\n    </div>\n  );\n}\n"],"names":["klippyLog","cx","_jsx","stats","length","toLocaleString","JSON","stringify","searchForAbnormalTemperatureSpikes"],"mappings":"6DAGA,WAAkC,EAAmB,CACnD,KAAM,GAAoB,CAAA,EAE1B,GAAI,GAAwB,CAAA,EAC5B,SAAW,KAAS,GAAU,CAC5B,EAAe,EAAa,MAAM,EAAG,CAAC,EAAE,OAAO,CAAK,EACpD,KAAM,GAAiB,CAAE,KAAM,EAAM,KAAM,MAAO,CAAA,GAElD,EAAa,QAAQ,AAAC,GACpB,OAAO,QAAQ,EAAM,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAK,KAAW,CACpD,EAAQ,MAAM,GAAgB,GAAA,MAAM,IAAQ,GAAK,CAClD,CAAA,CACH,EAEA,EAAS,KAAK,CACZ,KAAM,EAAQ,KACd,MAAO,OAAO,YACZ,OAAO,QAAQ,EAAQ,KAAK,EAAE,IAAI,CAAC,CAAC,EAAK,KAAW,CAAC,EAAK,EAAQ,EAAa,MAAM,CAAC,CACxF,CAAA,CACD,CACH,CAEO,MAAA,EACT,CACO,WAA4C,EAAgB,CAC3D,KAAA,GAAW,EAAa,EAAI,KAAK,EACjC,EAAW,EAAyB,CAAQ,EAE5C,EAAY,CAAA,EAClB,GAAI,GAAc,EAAS,GAC3B,SAAW,KAAW,GAAS,MAAM,CAAC,EAAG,CACvC,SAAW,CAAC,EAAK,IAAU,QAAO,QAAQ,CAAO,EAC3C,AAAA,EAAY,MAAM,GAAO,GAAK,EAAQ,EAAY,MAAM,GAAO,KACjE,EAAU,KAAK,CACb,KAAM,EAAQ,KACd,KAAM,EACN,gBAAiB,EAAY,MAAM,GACnC,OAAA,CACD,EAGS,EAAA,CAChB,CAEO,MAAA,EACT,CCvCiC,WAAA,CAAEA,aAAoB,CACrD,SACE,MAAA,CAAK,UAAWC,EAAhB,EAAA,SACE,CAAAC,EAAA,KAAA,CAAA,SAAA,kBAAA,CADF,EAEGF,EAAUG,MAAMC,OAAOC,eAAvB,EACD,iBAAAH,EAAA,KAAA,CAAA,SAAA,sBAHF,CAAA,EAIGI,KAAKC,UAAUC,EAAmCR,CAAD,CAAjD,CAJH,CAAA,CADF,CAQD"}