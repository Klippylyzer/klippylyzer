{"version":3,"file":"ConfigFile.b51a73b8.js","sources":["../../src/utils/KlipperConfigParser.ts","../../src/Routes/KlippyLog/ConfigFile.tsx"],"sourcesContent":["export type Section = {\n  [key: string]: string | number | boolean | string[] | number[] | Section;\n};\nexport type ConfigFile = { [key: string]: Section };\n\nexport default class KlipperConfigParser {\n  parse(text: string): ConfigFile {\n    const config: ConfigFile = {};\n    let current_section_path: string[] = [];\n    let current_section: ConfigFile | Section = config;\n    let current_multi_line_key: null | string = null;\n\n    for (const line of text.split(\"\\n\")) {\n      if (line.startsWith(\"[\")) {\n        current_section_path = line.slice(line.indexOf(\"[\") + 1, line.lastIndexOf(\"]\")).split(\" \");\n\n        // Populate\n        current_section = config;\n        for (const section of current_section_path) {\n          if (!current_section[section]) {\n            current_section[section] = {};\n          }\n          current_section = current_section[section] as Section;\n        }\n      } else if (current_multi_line_key && line.startsWith(\"\\t\")) {\n        if (!current_section[current_multi_line_key]) {\n          current_section[current_multi_line_key] = line.slice(1);\n        } else {\n          current_section[current_multi_line_key] += \"\\n\" + line.slice(1);\n        }\n      } else {\n        if (current_multi_line_key) {\n          current_multi_line_key = null;\n        }\n\n        const [key, value] = line.split(\"=\", 2).map((s) => s.trim());\n        current_multi_line_key = key;\n\n        if (value) {\n          current_section[key.trim()] =\n            value.toLocaleLowerCase() === \"true\"\n              ? true\n              : value.toLowerCase() === \"false\"\n              ? false\n              : /^\\d+$/.test(value)\n              ? parseInt(value)\n              : /^\\d+\\.\\d+$/.test(value)\n              ? parseFloat(value)\n              : value;\n        }\n      }\n    }\n\n    return config;\n  }\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { BsArrowUp, BsDownload, BsLink } from \"react-icons/bs\";\n\nimport Button from \"../../Components/Buttons\";\nimport { KlippyLog } from \"../../types\";\nimport cx from \"../../utils/cx\";\nimport KlipperConfigParser, { ConfigFile, Section } from \"../../utils/KlipperConfigParser\";\n\ntype Props = {\n  klippyLog: KlippyLog;\n};\nexport default function ConfigFileViewer({ klippyLog }: Props) {\n  const config = useMemo(() => {\n    const parser = new KlipperConfigParser();\n    try {\n      return parser.parse(klippyLog.config);\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }, [klippyLog]);\n\n  const downloadConfig = useCallback(() => {\n    if (!klippyLog) return;\n\n    const blob = new Blob([klippyLog.config], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"printer.cfg\";\n    a.click();\n  }, [klippyLog]);\n\n  return (\n    <section>\n      <h2 className={cx(\"flex\", \"flex-row\", \"justify-between\")}>\n        <span className={cx(\"text-xl\")}>Klipper Config</span>\n        <Button btn=\"Light\" onClick={downloadConfig} className={cx(\"flex\", \"flex-row\")}>\n          <BsDownload /> download\n        </Button>\n      </h2>\n\n      {config && (\n        <div className={cx(\"sticky\", \"top-4\", \"float-right\")}>\n          <ul>\n            <li className={cx(\"text-lg\", \"flex\", \"justify-between\", \"items-center\")}>\n              TOC\n              <a href=\"#\" onClick={() => window.scrollTo({ top: 0 })}>\n                <BsArrowUp />\n              </a>\n            </li>\n            {Object.entries(config).map(([key]) => (\n              <li key={key}>\n                <a href={\"#\" + [\"config\", key].join(\"--\")} className={cx(\"text-gray-800\", \"dark:text-gray-200\")}>\n                  {key}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <code>{config && <RecursiveObject object={config} />}</code>\n    </section>\n  );\n}\n\nfunction RecursiveObject({ object, path = [] }: { object: ConfigFile | Section; path?: string[] }) {\n  return (\n    <>\n      {Object.entries(object).map(([key, value]) => (\n        <div className={cx(\"pl-4\")} key={key}>\n          <div\n            id={[\"config\", path.join(\"-\"), key].filter(Boolean).join(\"--\")}\n            className={cx(\"font-bold\", \"flex\", \"align-top\", \"gap-2\")}\n          >\n            <a\n              className={cx(\"group\", \"focus:text-blue-300\", \"dark:focus:text-blue-300\")}\n              href={\"#\" + [\"config\", path.join(\"-\"), key].filter(Boolean).join(\"--\")}\n            >\n              <BsLink className={cx(\"inline-block\", \"mr-1\", \"invisible\", \"group-hover:visible\")} />\n              {path.length === 0 ? `[${key}]` : key}\n            </a>\n\n            {typeof value === \"number\" || typeof value === \"boolean\" ? (\n              ` = ${value}`\n            ) : typeof value === \"string\" ? (\n              <>\n                {\" \"}\n                = <pre className={\"inline-block\"}>{value}</pre>\n              </>\n            ) : null}\n          </div>\n          <div className={cx()}>\n            {typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            typeof value === \"string\" ? null : value instanceof Array ? (\n              <ul>\n                {value.map((o, i) => (\n                  <li key={i}>{o}</li>\n                ))}\n              </ul>\n            ) : value instanceof Object ? (\n              <RecursiveObject path={[...path, key]} object={value} />\n            ) : (\n              \"ERROR\"\n            )}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n"],"names":["klippyLog","config","useMemo","parser","KlipperConfigParser","parse","e","console","error","downloadConfig","useCallback","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","_jsxs","cx","_jsx","window","scrollTo","top","Object","entries","map","key","join","object","path","_Fragment","value","filter","Boolean","length","Array","o","i"],"mappings":"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"}