{"mappings":"ydAAA,IAAAA,EAAAC,EAAA,S,8EAOe,SAAAC,IACb,IAAMC,EAAeC,EAAAC,YAAbF,SACFG,EAAKC,EAAAC,UAEiBC,EAA8BT,EAAAU,cAA9BC,EAAAC,WAA8B,GAAnDC,EAAqBJ,EAA8B,GAA3CK,EAAaL,EAA8B,GACpBM,EAA+Bf,EAAAU,cAA/BC,EAAAC,SAA4B,IAAG,GAA9DI,EAA+BD,EAA+B,GAAjDE,EAAkBF,EAA+B,GAgCrE,OA9BAJ,EAAAO,WACE,WACOf,GAELG,EAAGa,IAAI,SAAUC,SAASjB,IAAWkB,MAAK,SAACC,G,OAAWR,EAAUQ,QAElE,CAACnB,EAAUG,IAGbK,EAAAO,WACE,W,IAQsBK,EAA4BC,EAPhD,GAAKX,EAAL,CAEA,IAAMY,EAAgBZ,EAAOa,MAAMC,KAAI,SAACC,G,OAASA,EAAKC,MAEtDvB,EAAGwB,gBACD,aACA,QACAC,YAAYC,OAAMT,EAAAU,MAAKC,IAALC,MAAAZ,EAASvB,EAAAoC,kBAAGX,KAAgBD,EAAAS,MAAKI,IAALF,MAAAX,EAASxB,EAAAoC,kBAAGX,MAC1DJ,MAAK,SAACK,G,OACNT,EACES,EAAMY,QACJ,SAACC,G,OAAqF,IAAtE1B,EAAOa,MAAMC,KAAI,SAAAa,G,OAAKA,EAAFX,MAAaY,QAAQF,EAAWV,cAK5E,CAAChB,EAAQP,IAGPO,EAEA6B,EAAAC,KAAC,MAAG,C,UACFD,EAAAE,IAAC,KAAE,CAACC,UAAWC,EAAAC,EAAA,CAAG,UAAW,e,SAC3BL,EAAAC,KAAC,KAAE,C,UACDD,EAAAE,IAAC,KAAE,C,SACDF,EAAAE,IAACxC,EAAA4C,QAAO,CAACC,GAAG,qBAAqBJ,UAAWC,EAAAC,EAAA,CAAG,gBAAiB,sB,SAAuB,cAIzFL,EAAAE,IAAC,KAAE,C,SAAE/B,EAAOqC,YAIhBR,EAAAC,KAAC,QAAK,C,UACJD,EAAAE,IAAC,QAAK,C,SACJF,EAAAC,KAAC,KAAE,C,UACDD,EAAAE,IAAC,KAAE,C,SAAC,aACJF,EAAAE,IAAC,KAAE,C,SAAC,SACJF,EAAAE,IAAC,KAAE,C,SAAC,uBAGRF,EAAAE,IAAC,QAAK,C,SACH5B,EAAYW,KAAI,SAACY,G,OAChBG,EAAAC,KAAC,KAAE,C,UACDD,EAAAE,IAAC,KAAE,C,SACDF,EAAAE,IAACxC,EAAA4C,QAAO,CAACC,GAAI,QAAwBE,OAAhBZ,EAAWa,M,SAASb,EAAWa,SAEtDV,EAAAE,IAAC,KAAE,C,SAAES,EAAAC,UAAUf,EAAWgB,QAC1Bb,EAAAE,IAAC,KAAE,C,SAAE,IAAIY,KAAKjB,EAAWkB,UAAUC,mBACnChB,EAAAE,IAAC,KAAE,eAMXF,EAAAE,IAACxC,EAAAuD,OAAM,OAIJ,S","sources":["src/Routes/Backups/Backup.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { NavLink, Outlet, useParams } from \"react-router-dom\";\r\nimport cx from \"ts-classnames\";\r\n\r\nimport useDb, { Backup, BackupFile } from \"../../Context/Database\";\r\nimport { humanSize } from \"../../utils\";\r\n\r\nexport default function Backup() {\r\n  const { backupId } = useParams<{ backupId: string }>();\r\n  const db = useDb();\r\n\r\n  const [backup, setBackup] = useState<undefined | Backup>();\r\n  const [backupFiles, setBackupFiles] = useState<Array<BackupFile>>([]);\r\n\r\n  useEffect(\r\n    function () {\r\n      if (!backupId) return undefined;\r\n\r\n      db.get(\"backup\", parseInt(backupId)).then((backup) => setBackup(backup as Backup));\r\n    },\r\n    [backupId, db]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      if (!backup) return;\r\n\r\n      const backupFileIds = backup.files.map((file) => file.id) as number[];\r\n\r\n      db.getAllFromIndex(\r\n        \"backupFile\",\r\n        \"by-id\",\r\n        IDBKeyRange.bound(Math.min(...backupFileIds), Math.max(...backupFileIds))\r\n      ).then((files) =>\r\n        setBackupFiles(\r\n          files.filter(\r\n            (backupFile) => backup.files.map(({ id }) => id).indexOf(backupFile.id as number) !== -1\r\n          ) as Array<BackupFile>\r\n        )\r\n      );\r\n    },\r\n    [backup, db]\r\n  );\r\n\r\n  if (backup) {\r\n    return (\r\n      <div>\r\n        <h3 className={cx(\"text-lg\", \"breadcrumbs\")}>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/moonraker/backups\" className={cx(\"text-gray-600\", \"dark:text-gray-400\")}>\r\n                Backups\r\n              </NavLink>\r\n            </li>\r\n            <li>{backup.name}</li>\r\n          </ul>\r\n        </h3>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Filename</th>\r\n              <th>Size</th>\r\n              <th>Last Modified</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backupFiles.map((backupFile) => (\r\n              <tr>\r\n                <td>\r\n                  <NavLink to={`file/${backupFile.path}`}>{backupFile.path}</NavLink>\r\n                </td>\r\n                <td>{humanSize(backupFile.size)}</td>\r\n                <td>{new Date(backupFile.modified).toLocaleString()}</td>\r\n                <td></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <Outlet />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n"],"names":["$5Sbbl","parcelRequire","$56d15bd2fe09369e$export$2e2bcd8739ae039","backupId","$6nKfz","useParams","db","$fdLR5","default","ref","slicedToArray","$6cds3","useState","backup1","setBackup","ref1","backupFiles","setBackupFiles","useEffect","get","parseInt","then","backup","_Math","_Math1","backupFileIds","files","map","file","id","getAllFromIndex","IDBKeyRange","bound","Math","min","apply","toConsumableArray","max","filter","backupFile","param","indexOf","$lBpE3","jsxs","jsx","className","$parcel$interopDefault","$kOpwP","NavLink","to","name","concat","path","$dHI7O","humanSize","size","Date","modified","toLocaleString","Outlet"],"version":3,"file":"Backup.e0283e01.js.map"}