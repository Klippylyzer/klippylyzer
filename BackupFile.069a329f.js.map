{"mappings":"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","sources":["src/Routes/Backups/BackupFile.tsx","node_modules/react-syntax-highlighter/dist/esm/languages/prism/ini.js","node_modules/refractor/lang/ini.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\nimport { BsDownload } from \"react-icons/bs\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { PrismLight } from \"react-syntax-highlighter\";\r\nimport PrismLanguageIni from \"react-syntax-highlighter/dist/esm/languages/prism/ini\";\r\nimport PrismThemeTomorrow from \"react-syntax-highlighter/dist/esm/styles/prism/tomorrow\";\r\nimport cx from \"ts-classnames\";\r\n\r\nimport useDb, { Backup, BackupFile } from \"../../Context/Database\";\r\n\r\nPrismLight.registerLanguage(\"ini\", PrismLanguageIni);\r\n\r\nexport default function BackupFile() {\r\n  const { backupId, \"*\": filePath } = useParams<{ backupId: string; \"*\": string }>();\r\n\r\n  const db = useDb();\r\n  const [backup, setBackup] = useState<undefined | Backup>(undefined);\r\n  const [backupFile, setBackupFile] = useState<undefined | BackupFile>(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!(backupId && filePath)) return;\r\n\r\n    db.get(\"backup\", parseInt(backupId)).then((backup) => {\r\n      if (!backup) return;\r\n\r\n      setBackup(backup as Backup);\r\n\r\n      const fileId = backup.files.find(({ name }) => name === filePath)?.id;\r\n      if (!fileId) return;\r\n      db.get(\"backupFile\", fileId).then((file) => {\r\n        setBackupFile(file as BackupFile);\r\n      });\r\n    });\r\n  }, [db, backupId, filePath]);\r\n\r\n  const textContent = useMemo<string>(() => {\r\n    if (!backupFile) return \"Loading...\";\r\n\r\n    const dec = new TextDecoder(\"utf-8\");\r\n\r\n    return dec.decode(backupFile.contents);\r\n  }, [backupFile]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className={cx(\"text-lg\", \"breadcrumbs\")}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/moonraker/backups\" className={cx(\"text-gray-600\", \"dark:text-gray-400\")}>\r\n              Backups\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            {\" \"}\r\n            <NavLink to={`/moonraker/backups/${backupId}`} className={cx(\"text-gray-600\", \"dark:text-gray-400\")}>\r\n              {backup?.name}\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            {filePath}{\" \"}\r\n            {backupFile && (\r\n              <a\r\n                download={backupFile.path.slice(backupFile.path.lastIndexOf(\"/\") + 1)}\r\n                href={URL.createObjectURL(new Blob([backupFile.contents]))}\r\n                className={cx(\"pl-2\")}\r\n              >\r\n                <BsDownload size=\"1.5rem\" className={cx(\"inline-block\")} />\r\n              </a>\r\n            )}\r\n          </li>\r\n        </ul>\r\n\r\n        <small className={cx(\"float-right\", \"text-gray-600\", \"dark:text-gray-400\")}>\r\n          last modified {backupFile ? new Date(backupFile.modified * 1000).toLocaleString() : \"...\"}\r\n        </small>\r\n      </h3>\r\n\r\n      <PrismLight language=\"log\" style={PrismThemeTomorrow}>\r\n        {textContent}\r\n      </PrismLight>\r\n    </div>\r\n  );\r\n}\r\n","import ini from \"refractor/lang/ini.js\";\n;\nexport default ini;","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n"],"names":["$5Sbbl","parcelRequire","$2d464e41e305d127$export$2e2bcd8739ae039","ref3","$6nKfz","useParams","backupId","filePath","db","$fdLR5","default","ref1","slicedToArray","$6cds3","useState","undefined","backup1","setBackup","ref2","backupFile","setBackupFile","useEffect","get","parseInt","then","backup","ref","fileId","files","find","param","name","id","file","textContent","useMemo","TextDecoder","decode","contents","$lBpE3","jsxs","className","$parcel$interopDefault","$kOpwP","jsx","NavLink","to","concat","download","path","slice","lastIndexOf","href","URL","createObjectURL","Blob","$42PEG","BsDownload","size","Date","modified","toLocaleString","$jwq1C","PrismLight","language","style","$5yKqG","registerLanguage","$dotJn","$9c04943327548ba9$export$2e2bcd8739ae039","$02497be874477e51$var$ini","Prism","languages","ini","comment","pattern","lookbehind","section","inside","alias","punctuation","key","value","module","exports","displayName","aliases"],"version":3,"file":"BackupFile.069a329f.js.map"}