{"mappings":"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","sources":["src/Routes/KlippyLog/ConfigFile.tsx","src/utils/KlipperConfigParser.ts","<<jsx-config-pragma.js>>"],"sourcesContent":["import React, { useCallback, useMemo } from \"react\";\r\nimport { BsArrowUp, BsDownload, BsLink } from \"react-icons/bs\";\r\nimport cx from \"ts-classnames\";\r\n\r\nimport Button from \"../../Components/Buttons\";\r\nimport { KlippyLog } from \"../../types\";\r\nimport KlipperConfigParser, { ConfigFile, Section } from \"../../utils/KlipperConfigParser\";\r\n\r\ntype Props = {\r\n  klippyLog: KlippyLog;\r\n};\r\nexport default function ConfigFile({ klippyLog }: Props) {\r\n  const config = useMemo(() => {\r\n    const parser = new KlipperConfigParser();\r\n    try {\r\n      return parser.parse(klippyLog.config);\r\n    } catch (e) {\r\n      console.error(e);\r\n      return null;\r\n    }\r\n  }, [klippyLog]);\r\n\r\n  const downloadConfig = useCallback(() => {\r\n    if (!klippyLog) return;\r\n\r\n    const blob = new Blob([klippyLog.config], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"printer.cfg\";\r\n    a.click();\r\n  }, [klippyLog]);\r\n\r\n  return (\r\n    <section>\r\n      <h2 className={cx(\"flex\", \"flex-row\", \"justify-between\")}>\r\n        <span className={cx(\"text-xl\")}>Klipper Config</span>\r\n        <Button btn=\"Light\" onClick={downloadConfig} className={cx(\"flex\", \"flex-row\")}>\r\n          <BsDownload /> download\r\n        </Button>\r\n      </h2>\r\n\r\n      {config && (\r\n        <div className={cx(\"sticky\", \"top-4\", \"float-right\")}>\r\n          <ul>\r\n            <li className={cx(\"text-lg\", \"flex\", \"justify-between\", \"items-center\")}>\r\n              TOC\r\n              <a href=\"#\" onClick={() => window.scrollTo({ top: 0 })}>\r\n                <BsArrowUp />\r\n              </a>\r\n            </li>\r\n            {Object.entries(config).map(([key]) => (\r\n              <li key={key}>\r\n                <a href={\"#\" + [\"config\", key].join(\"--\")} className={cx(\"text-gray-800\", \"dark:text-gray-200\")}>\r\n                  {key}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <code>{config && <RecursiveObject object={config} />}</code>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction RecursiveObject({ object, path = [] }: { object: ConfigFile | Section; path?: string[] }) {\r\n  return (\r\n    <>\r\n      {Object.entries(object).map(([key, value]) => (\r\n        <div className={cx(\"pl-4\")} key={key}>\r\n          <div\r\n            id={[\"config\", path.join(\"-\"), key].filter(Boolean).join(\"--\")}\r\n            className={cx(\"font-bold\", \"flex\", \"align-top\", \"gap-2\")}\r\n          >\r\n            <a\r\n              className={cx(\"group\", \"focus:text-blue-300\", \"dark:focus:text-blue-300\")}\r\n              href={\"#\" + [\"config\", path.join(\"-\"), key].filter(Boolean).join(\"--\")}\r\n            >\r\n              <BsLink className={cx(\"inline-block\", \"mr-1\", \"invisible\", \"group-hover:visible\")} />\r\n              {path.length === 0 ? `[${key}]` : key}\r\n            </a>\r\n\r\n            {typeof value === \"number\" || typeof value === \"boolean\" ? (\r\n              ` = ${value}`\r\n            ) : typeof value === \"string\" ? (\r\n              <>\r\n                {\" \"}\r\n                = <pre className={\"inline-block\"}>{value}</pre>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div className={cx()}>\r\n            {typeof value === \"number\" ||\r\n            typeof value === \"boolean\" ||\r\n            typeof value === \"string\" ? null : value instanceof Array ? (\r\n              <ul>\r\n                {value.map((o, i) => (\r\n                  <li key={i}>{o}</li>\r\n                ))}\r\n              </ul>\r\n            ) : value instanceof Object ? (\r\n              <RecursiveObject path={[...path, key]} object={value} />\r\n            ) : (\r\n              \"ERROR\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","export type Section = {\r\n  [key: string]: string | number | boolean | string[] | number[] | Section;\r\n};\r\nexport type ConfigFile = { [key: string]: Section };\r\n\r\nexport default class KlipperConfigParser {\r\n  parse(text: string): ConfigFile {\r\n    const config: ConfigFile = {};\r\n    let current_section_path: string[] = [];\r\n    let current_section: ConfigFile | Section = config;\r\n    let current_multi_line_key: null | string = null;\r\n\r\n    for (const line of text.split(\"\\n\")) {\r\n      if (line.startsWith(\"[\")) {\r\n        current_section_path = line\r\n          .slice(line.indexOf(\"[\") + 1, line.lastIndexOf(\"]\"))\r\n          .split(\" \");\r\n\r\n        // Populate\r\n        current_section = config;\r\n        for (const section of current_section_path) {\r\n          if (!current_section[section]) {\r\n            current_section[section] = {};\r\n          }\r\n          current_section = current_section[section] as Section;\r\n        }\r\n      } else if (current_multi_line_key && line.startsWith(\"\\t\")) {\r\n        if (!current_section[current_multi_line_key]) {\r\n          current_section[current_multi_line_key] = line.slice(1);\r\n        } else {\r\n          current_section[current_multi_line_key] += \"\\n\" + line.slice(1);\r\n        }\r\n      } else {\r\n        if (current_multi_line_key) {\r\n          current_multi_line_key = null;\r\n        }\r\n\r\n        const [key, value] = line.split(\"=\", 2).map((s) => s.trim());\r\n        current_multi_line_key = key;\r\n\r\n        if (value) {\r\n          current_section[key.trim()] =\r\n            value.toLocaleLowerCase() === \"true\"\r\n              ? true\r\n              : value.toLowerCase() === \"false\"\r\n              ? false\r\n              : /^\\d+$/.test(value)\r\n              ? parseInt(value)\r\n              : /^\\d+\\.\\d+$/.test(value)\r\n              ? parseFloat(value)\r\n              : value;\r\n        }\r\n      }\r\n    }\r\n\r\n    return config;\r\n  }\r\n}\r\n",null],"names":["$5Sbbl","parcelRequire","$5459b7bfec6185c9$export$2e2bcd8739ae039","param1","klippyLog","config","$6cds3","useMemo","parser","$h0o3R","default","parse","e","console","error","downloadConfig","useCallback","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","$lBpE3","jsxs","className","$parcel$interopDefault","$kOpwP","jsx","$ftCLc","btn","onClick","$42PEG","BsDownload","window","scrollTo","top","BsArrowUp","Object","entries","map","param","key","join","$5459b7bfec6185c9$var$RecursiveObject","object","param2","_path","path","Fragment","_param","value","id","filter","Boolean","BsLink","length","concat","Array","o","i","toConsumableArray","$2b4e49ef7e54c1ab$export$2e2bcd8739ae039","text","current_section_path","current_section","current_multi_line_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","split","Symbol","iterator","next","done","line","startsWith","slice","indexOf","lastIndexOf","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","section","err","return","ref","slicedToArray","s","trim","toLocaleLowerCase","toLowerCase","test","parseInt","parseFloat"],"version":3,"file":"ConfigFile.c087fd4f.js.map"}