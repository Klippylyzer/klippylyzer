{"mappings":"6cAAA,IAAAA,EAAAC,EAAA,S,iEAOe,SAAAC,IACb,MARFC,SAQUA,GAAaC,EAAAC,YACfC,EAAKC,EAAAC,WAEJC,EAAQC,GAAaC,EAAAC,YACrBC,EAAaC,GAAkBH,EAAAC,SAA4B,IAgClE,OA9BAD,EAAAI,WACE,WACOZ,GAELG,EAAGU,IAAI,SAAUC,SAASd,IAAWe,MAAMC,GAAWT,EAAUS,OAElE,CAAChB,EAAUG,IAGbK,EAAAI,WACE,WACE,IAAKN,EAAQ,OAEb,MAAMW,EAAgBX,EAAOY,MAAMC,KAAKC,GAASA,EAAKC,KAEtDlB,EAAGmB,gBACD,aACA,QACAC,YAAYC,MAAMC,KAAKC,OAAOT,GAAgBQ,KAAKE,OAAOV,KAC1DF,MAAMG,GACNP,EACEO,EAAMU,QACHC,IAAqF,IAAtEvB,EAAOY,MAAMC,KAAI,EApC7CE,GAoCgDA,KAASA,IAAIS,QAAQD,EAAWR,WAK5E,CAACf,EAAQH,IAGPG,EAEAT,EAAAkC,KAAC,MAAG,C,UACFlC,EAAAmC,IAAC,KAAE,CAACC,UAAWC,EAAAC,EAAA,CAAG,UAAW,e,SAC3BtC,EAAAkC,KAAC,KAAE,C,UACDlC,EAAAmC,IAAC,KAAE,C,SACDnC,EAAAmC,IAAC/B,EAAAmC,QAAO,CAACC,GAAG,qBAAqBJ,UAAWC,EAAAC,EAAA,CAAG,gBAAiB,sB,SAAuB,cAIzFtC,EAAAmC,IAAC,KAAE,C,SAAE1B,EAAOgC,YAIhBzC,EAAAkC,KAAC,QAAK,C,UACJlC,EAAAmC,IAAC,QAAK,C,SACJnC,EAAAkC,KAAC,KAAE,C,UACDlC,EAAAmC,IAAC,KAAE,C,SAAC,aACJnC,EAAAmC,IAAC,KAAE,C,SAAC,SACJnC,EAAAmC,IAAC,KAAE,C,SAAC,uBAGRnC,EAAAmC,IAAC,QAAK,C,SACHtB,EAAYS,KAAKU,GAChBhC,EAAAkC,KAAC,KAAE,C,UACDlC,EAAAmC,IAAC,KAAE,C,SACDnC,EAAAmC,IAAC/B,EAAAmC,QAAO,CAACC,GAAI,QAAQR,EAAWU,O,SAASV,EAAWU,SAEtD1C,EAAAmC,IAAC,KAAE,C,SAAEQ,EAAAC,UAAUZ,EAAWa,QAC1B7C,EAAAmC,IAAC,KAAE,C,SAAE,IAAIW,KAAKd,EAAWe,UAAUC,mBACnChD,EAAAmC,IAAC,KAAE,MANIH,EAAWR,WAY1BxB,EAAAmC,IAAC/B,EAAA6C,OAAM,OAIJ","sources":["src/Routes/Backups/Backup.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { NavLink, Outlet, useParams } from \"react-router-dom\";\r\nimport cx from \"ts-classnames\";\r\n\r\nimport useDb, { Backup, BackupFile } from \"../../Context/Database\";\r\nimport { humanSize } from \"../../utils\";\r\n\r\nexport default function Backup() {\r\n  const { backupId } = useParams<{ backupId: string }>();\r\n  const db = useDb();\r\n\r\n  const [backup, setBackup] = useState<undefined | Backup>();\r\n  const [backupFiles, setBackupFiles] = useState<Array<BackupFile>>([]);\r\n\r\n  useEffect(\r\n    function () {\r\n      if (!backupId) return undefined;\r\n\r\n      db.get(\"backup\", parseInt(backupId)).then((backup) => setBackup(backup as Backup));\r\n    },\r\n    [backupId, db]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      if (!backup) return;\r\n\r\n      const backupFileIds = backup.files.map((file) => file.id) as number[];\r\n\r\n      db.getAllFromIndex(\r\n        \"backupFile\",\r\n        \"by-id\",\r\n        IDBKeyRange.bound(Math.min(...backupFileIds), Math.max(...backupFileIds))\r\n      ).then((files) =>\r\n        setBackupFiles(\r\n          files.filter(\r\n            (backupFile) => backup.files.map(({ id }) => id).indexOf(backupFile.id as number) !== -1\r\n          ) as Array<BackupFile>\r\n        )\r\n      );\r\n    },\r\n    [backup, db]\r\n  );\r\n\r\n  if (backup) {\r\n    return (\r\n      <div>\r\n        <h3 className={cx(\"text-lg\", \"breadcrumbs\")}>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/moonraker/backups\" className={cx(\"text-gray-600\", \"dark:text-gray-400\")}>\r\n                Backups\r\n              </NavLink>\r\n            </li>\r\n            <li>{backup.name}</li>\r\n          </ul>\r\n        </h3>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Filename</th>\r\n              <th>Size</th>\r\n              <th>Last Modified</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backupFiles.map((backupFile) => (\r\n              <tr key={backupFile.id}>\r\n                <td>\r\n                  <NavLink to={`file/${backupFile.path}`}>{backupFile.path}</NavLink>\r\n                </td>\r\n                <td>{humanSize(backupFile.size)}</td>\r\n                <td>{new Date(backupFile.modified).toLocaleString()}</td>\r\n                <td></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <Outlet />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n"],"names":["$bbzbN","parcelRequire","$3cfdf885a9a517c1$export$2e2bcd8739ae039","backupId","$2ffQE","useParams","db","$apk6Z","default","backup1","setBackup","$7fPBF","useState","backupFiles","setBackupFiles","useEffect","get","parseInt","then","backup","backupFileIds","files","map","file","id","getAllFromIndex","IDBKeyRange","bound","Math","min","max","filter","backupFile","indexOf","jsxs","jsx","className","$parcel$interopDefault","$UBbba","NavLink","to","name","path","$3qM3Y","humanSize","size","Date","modified","toLocaleString","Outlet"],"version":3,"file":"Backup.3d84f3d1.js.map"}