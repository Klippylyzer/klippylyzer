{"mappings":"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","sources":["src/Routes/Moonraker/BedMesh.tsx","node_modules/echarts-gl/lib/chart/surface/install.js","node_modules/echarts-gl/lib/echarts-gl.js","node_modules/echarts/lib/echarts.js","node_modules/echarts-gl/lib/core/LayerGL.js","node_modules/claygl/src/Renderer.js","node_modules/claygl/src/core/Base.js","node_modules/claygl/src/core/mixin/extend.js","node_modules/claygl/src/core/mixin/notifier.js","node_modules/claygl/src/core/util.js","node_modules/claygl/src/core/GLInfo.js","node_modules/claygl/src/core/glenum.js","node_modules/claygl/src/core/vendor.js","node_modules/claygl/src/core/request.js","node_modules/claygl/src/Material.js","node_modules/claygl/src/core/color.js","node_modules/claygl/src/core/LRU.js","node_modules/claygl/src/core/LinkedList.js","node_modules/claygl/src/math/Vector2.js","node_modules/claygl/src/glmatrix/vec2.js","node_modules/claygl/src/glmatrix/common.js","node_modules/claygl/src/gpu/ProgramManager.js","node_modules/claygl/src/gpu/GLProgram.js","node_modules/claygl/src/Shader.js","node_modules/claygl/src/shader/source/prez.glsl.js","node_modules/claygl/src/glmatrix/mat4.js","node_modules/claygl/src/glmatrix/vec3.js","node_modules/claygl/src/picking/RayPicking.js","node_modules/claygl/src/math/Ray.js","node_modules/claygl/src/math/Vector3.js","node_modules/claygl/src/math/Matrix4.js","node_modules/claygl/src/glmatrix/quat.js","node_modules/claygl/src/glmatrix/vec4.js","node_modules/claygl/src/glmatrix/mat3.js","node_modules/claygl/src/Renderable.js","node_modules/claygl/src/Node.js","node_modules/claygl/src/math/Quaternion.js","node_modules/claygl/src/math/BoundingBox.js","node_modules/claygl/src/Texture.js","node_modules/claygl/src/core/Cache.js","node_modules/echarts-gl/lib/util/graphicGL.js","node_modules/claygl/src/Mesh.js","node_modules/claygl/src/Texture2D.js","node_modules/claygl/src/math/util.js","node_modules/claygl/src/Geometry.js","node_modules/claygl/src/GeometryBase.js","node_modules/claygl/src/Scene.js","node_modules/claygl/src/Light.js","node_modules/claygl/src/shader/source/header/light.js","node_modules/claygl/src/shader/source/header/calcAmbientSHLight.glsl.js","node_modules/claygl/src/Camera.js","node_modules/claygl/src/math/Frustum.js","node_modules/claygl/src/math/Plane.js","node_modules/claygl/src/util/texture.js","node_modules/claygl/src/TextureCube.js","node_modules/claygl/src/prePass/EnvironmentMap.js","node_modules/claygl/src/camera/Perspective.js","node_modules/claygl/src/FrameBuffer.js","node_modules/claygl/src/plugin/Skydome.js","node_modules/claygl/src/plugin/Skybox.js","node_modules/claygl/src/geometry/Cube.js","node_modules/claygl/src/geometry/Plane.js","node_modules/claygl/src/shader/source/skybox.glsl.js","node_modules/claygl/src/util/dds.js","node_modules/claygl/src/util/hdr.js","node_modules/echarts-gl/lib/util/EChartsSurface.js","node_modules/claygl/src/light/AmbientCubemap.js","node_modules/claygl/src/util/cubemap.js","node_modules/claygl/src/compositor/Pass.js","node_modules/claygl/src/camera/Orthographic.js","node_modules/claygl/src/shader/source/compositor/vertex.glsl.js","node_modules/claygl/src/util/shader/integrateBRDF.glsl.js","node_modules/claygl/src/util/shader/prefilter.glsl.js","node_modules/claygl/src/light/AmbientSH.js","node_modules/claygl/src/util/sh.js","node_modules/claygl/src/util/shader/projectEnvMap.glsl.js","node_modules/echarts-gl/lib/util/retrieve.js","node_modules/claygl/src/geometry/Sphere.js","node_modules/claygl/src/light/Ambient.js","node_modules/claygl/src/light/Directional.js","node_modules/claygl/src/light/Point.js","node_modules/claygl/src/light/Spot.js","node_modules/claygl/src/math/Vector4.js","node_modules/claygl/src/math/Matrix2.js","node_modules/claygl/src/glmatrix/mat2.js","node_modules/claygl/src/math/Matrix2d.js","node_modules/claygl/src/glmatrix/mat2d.js","node_modules/claygl/src/math/Matrix3.js","node_modules/echarts-gl/lib/util/animatableMixin.js","node_modules/claygl/src/shader/source/util.glsl.js","node_modules/echarts-gl/lib/util/shader/common.glsl.js","node_modules/echarts-gl/lib/util/shader/color.glsl.js","node_modules/echarts-gl/lib/util/shader/lambert.glsl.js","node_modules/echarts-gl/lib/util/shader/realistic.glsl.js","node_modules/echarts-gl/lib/util/shader/hatching.glsl.js","node_modules/echarts-gl/lib/util/shader/shadow.glsl.js","node_modules/echarts-gl/lib/preprocessor/backwardCompat.js","node_modules/echarts-gl/lib/chart/surface/SurfaceSeries.js","node_modules/echarts-gl/lib/component/common/componentShadingMixin.js","node_modules/echarts-gl/lib/chart/common/formatTooltip.js","node_modules/echarts-gl/lib/util/visual.js","node_modules/echarts-gl/lib/chart/common/createList.js","node_modules/echarts-gl/lib/chart/surface/SurfaceView.js","node_modules/claygl/src/dep/glmatrix.js","node_modules/claygl/src/glmatrix/index.js","node_modules/echarts-gl/lib/util/geometry/trianglesSortMixin.js","node_modules/echarts-gl/lib/util/ProgressiveQuickSort.js","node_modules/echarts-gl/lib/component/grid3D/install.js","node_modules/echarts-gl/lib/component/grid3D/Grid3DModel.js","node_modules/echarts-gl/lib/component/common/componentViewControlMixin.js","node_modules/echarts-gl/lib/component/common/componentPostEffectMixin.js","node_modules/echarts-gl/lib/component/common/componentLightMixin.js","node_modules/echarts-gl/lib/component/grid3D/Grid3DView.js","node_modules/echarts-gl/lib/util/OrbitControl.js","node_modules/echarts-gl/lib/util/geometry/Lines3D.js","node_modules/echarts-gl/lib/util/geometry/dynamicConvertMixin.js","node_modules/echarts-gl/lib/util/ZRTextureAtlasSurface.js","node_modules/echarts-gl/lib/component/common/SceneHelper.js","node_modules/echarts-gl/lib/component/grid3D/Grid3DFace.js","node_modules/echarts-gl/lib/util/geometry/Quads.js","node_modules/echarts-gl/lib/component/grid3D/Grid3DAxis.js","node_modules/echarts-gl/lib/util/mesh/LabelsMesh.js","node_modules/echarts-gl/lib/util/geometry/Sprites.js","node_modules/echarts-gl/lib/util/shader/labels.glsl.js","node_modules/echarts-gl/lib/util/shader/lines3D.glsl.js","node_modules/echarts-gl/lib/coord/grid3DCreator.js","node_modules/echarts-gl/lib/coord/grid3D/Cartesian3D.js","node_modules/echarts-gl/lib/coord/grid3D/Axis3D.js","node_modules/echarts-gl/lib/core/ViewGL.js","node_modules/claygl/src/prePass/ShadowMap.js","node_modules/claygl/src/compositor/TexturePool.js","node_modules/claygl/src/shader/source/shadowmap.glsl.js","node_modules/echarts-gl/lib/effect/EffectCompositor.js","node_modules/claygl/src/compositor/createCompositor.js","node_modules/claygl/src/createCompositor.js","node_modules/claygl/src/compositor/Compositor.js","node_modules/claygl/src/compositor/Graph.js","node_modules/claygl/src/compositor/CompositorNode.js","node_modules/claygl/src/compositor/SceneNode.js","node_modules/claygl/src/compositor/TextureNode.js","node_modules/claygl/src/compositor/FilterNode.js","node_modules/claygl/src/shader/registerBuiltinCompositor.js","node_modules/claygl/src/shader/source/compositor/coloradjust.glsl.js","node_modules/claygl/src/shader/source/compositor/blur.glsl.js","node_modules/claygl/src/shader/source/compositor/lum.glsl.js","node_modules/claygl/src/shader/source/compositor/lut.glsl.js","node_modules/claygl/src/shader/source/compositor/vignette.glsl.js","node_modules/claygl/src/shader/source/compositor/output.glsl.js","node_modules/claygl/src/shader/source/compositor/bright.glsl.js","node_modules/claygl/src/shader/source/compositor/downsample.glsl.js","node_modules/claygl/src/shader/source/compositor/upsample.glsl.js","node_modules/claygl/src/shader/source/compositor/hdr.glsl.js","node_modules/claygl/src/shader/source/compositor/lensflare.glsl.js","node_modules/claygl/src/shader/source/compositor/blend.glsl.js","node_modules/claygl/src/shader/source/compositor/fxaa.glsl.js","node_modules/echarts-gl/lib/effect/SSAOPass.js","node_modules/echarts-gl/lib/effect/halton.js","node_modules/echarts-gl/lib/effect/SSAO.glsl.js","node_modules/echarts-gl/lib/effect/SSRPass.js","node_modules/echarts-gl/lib/effect/SSR.glsl.js","node_modules/echarts-gl/lib/effect/poissonKernel.js","node_modules/echarts-gl/lib/effect/NormalPass.js","node_modules/echarts-gl/lib/util/shader/normal.glsl.js","node_modules/echarts-gl/lib/effect/EdgePass.js","node_modules/echarts-gl/lib/effect/composite.js","node_modules/echarts-gl/lib/effect/DOF.glsl.js","node_modules/echarts-gl/lib/effect/edge.glsl.js","node_modules/echarts-gl/lib/effect/TemporalSuperSampling.js","node_modules/echarts-gl/lib/component/grid3D/Axis3DModel.js","node_modules/echarts-gl/lib/component/grid3D/createAxis3DModel.js","node_modules/echarts-gl/lib/component/grid3D/axis3DDefault.js"],"sourcesContent":["import { Property } from \"csstype\";\r\nimport { LineChart, LinesChart } from \"echarts/charts\";\r\nimport {\r\n  DatasetComponent,\r\n  DataZoomComponent,\r\n  DataZoomInsideComponent,\r\n  DataZoomSliderComponent,\r\n  GridComponent,\r\n  LegendComponent,\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n} from \"echarts/components\";\r\nimport * as echarts from \"echarts/core\";\r\nimport {\r\n  CanvasRenderer,\r\n  // SVGRenderer,\r\n} from \"echarts/renderers\";\r\nimport ECharts from \"echarts-for-react/lib/core\";\r\nimport { SurfaceChart } from \"echarts-gl/charts\";\r\nimport { Grid3DComponent } from \"echarts-gl/components\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport cx from \"ts-classnames\";\r\n\r\nimport useMoonraker from \"../../Context/Moonraker\";\r\nimport { BedMeshStatus } from \"../../types\";\r\nimport { useRpcHandler } from \"../../utils/jsonrpc\";\r\n\r\n// TOOD: Reduce\r\necharts.use([\r\n  SurfaceChart,\r\n  Grid3DComponent,\r\n  CanvasRenderer,\r\n  DatasetComponent,\r\n  DataZoomComponent,\r\n  DataZoomInsideComponent,\r\n  DataZoomSliderComponent,\r\n  GridComponent,\r\n  LegendComponent,\r\n  LineChart,\r\n  LinesChart,\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n]);\r\n\r\nfunction bedMeshToSeries(mesh: number[][], meshSize: { min_x: number; min_y: number; max_x: number; max_y: number }) {\r\n  const series = [];\r\n\r\n  for (let iy = 0; iy < mesh.length; iy++) {\r\n    const row = mesh[iy];\r\n    for (let ix = 0; ix < row.length; ix++) {\r\n      const value = row[ix];\r\n\r\n      series.push([\r\n        (meshSize.max_x - meshSize.min_x) * (ix / row.length) + meshSize.min_x,\r\n        (meshSize.max_y - meshSize.min_y) * (iy / mesh.length) + meshSize.min_y,\r\n        value,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  return series;\r\n}\r\n\r\nexport default function BedMesh() {\r\n  const { rpc } = useMoonraker();\r\n  const [bedMesh, setBedMesh] = useState<null | Partial<BedMeshStatus>>(null);\r\n  const [bedSize, setBedSize] = useState<null | { min_x: number; min_y: number; max_x: number; max_y: number }>(null);\r\n  const [meshType, setMeshType] = useState<\"probed\" | \"interpolated\" | \"both\">(\"interpolated\");\r\n  const [scale, setScale] = useState(1);\r\n  const chart = useRef<ECharts>(null);\r\n\r\n  useEffect(() => {\r\n    if (!rpc) return;\r\n\r\n    rpc\r\n      .call(\"printer.objects.subscribe\", { objects: { bed_mesh: null, toolhead: null } })\r\n      .then(({ status: { bed_mesh, toolhead } }) => {\r\n        if (bed_mesh) {\r\n          setBedMesh(bed_mesh);\r\n        }\r\n        if (toolhead) {\r\n          setBedSize({\r\n            min_x: toolhead.axis_minimum[0],\r\n            max_x: toolhead.axis_maximum[0],\r\n            min_y: toolhead.axis_minimum[1],\r\n            max_y: toolhead.axis_maximum[1],\r\n          });\r\n        }\r\n      });\r\n  }, [rpc]);\r\n\r\n  useRpcHandler(rpc, \"notify_status_update\", (params) => {\r\n    const [{ bed_mesh }] = params;\r\n    if (!bed_mesh) return;\r\n\r\n    console.log(\"got mesh update\", bed_mesh);\r\n    setBedMesh(bedMesh ? { ...bedMesh, ...bed_mesh } : bed_mesh);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!(bedMesh?.profiles && bedSize && chart.current)) return;\r\n\r\n    const meshSize = bedMesh?.profiles[bedMesh?.profile_name || \"\"]?.mesh_params;\r\n    const series = [];\r\n\r\n    if (bedMesh?.probed_matrix && (meshType === \"probed\" || meshType === \"both\")) {\r\n      series.push({\r\n        type: \"surface\",\r\n        data: bedMeshToSeries(bedMesh.probed_matrix, meshSize),\r\n      });\r\n    }\r\n\r\n    if (bedMesh?.mesh_matrix && (meshType === \"interpolated\" || meshType === \"both\")) {\r\n      series.push({\r\n        type: \"surface\",\r\n        data: bedMeshToSeries(bedMesh.mesh_matrix, bedSize),\r\n      });\r\n    }\r\n\r\n    chart.current.getEchartsInstance().setOption({ series });\r\n  }, [bedMesh, bedSize, meshType, chart]);\r\n\r\n  useEffect(() => {\r\n    if (!chart.current) return;\r\n\r\n    chart.current.getEchartsInstance().setOption({ zAxis3D: { type: \"value\", min: -scale, max: scale } });\r\n  }, [scale, chart]);\r\n\r\n  return (\r\n    <section>\r\n      <h3>Bed Mesh</h3>\r\n\r\n      <div className={cx(\"flex\", \"flex-row\")}>\r\n        <div style={{ width: \"60px\", height: \"600px\" }}>\r\n          <input\r\n            type=\"range\"\r\n            min={bedMesh ? bedMesh.mesh_matrix?.reduce((a, b) => Math.min(a, Math.min(...b)), 0) : 0.5}\r\n            max={10}\r\n            step={0.5}\r\n            value={scale}\r\n            onChange={(evt) => setScale(parseFloat(evt.target.value))}\r\n            // Hack for Firefox vertical slider\r\n            {...{ orient: \"vertical\" }}\r\n            style={{\r\n              height: \"500px\",\r\n              width: \"22px\",\r\n              // Hack for IE vertical slider\r\n              writingMode: \"bt-lr\" as Property.WritingMode,\r\n              WebkitAppearance: \"slider-vertical\",\r\n            }}\r\n          />\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"meshType\"\r\n              onChange={() => setMeshType(\"probed\")}\r\n              checked={meshType === \"probed\"}\r\n            />{\" \"}\r\n            Probed\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"meshType\"\r\n              onChange={() => setMeshType(\"interpolated\")}\r\n              checked={meshType === \"interpolated\"}\r\n            />{\" \"}\r\n            Interpolated\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" name=\"meshType\" onChange={() => setMeshType(\"both\")} checked={meshType === \"both\"} />{\" \"}\r\n            Both\r\n          </label>\r\n        </div>\r\n\r\n        <ECharts\r\n          ref={chart}\r\n          echarts={echarts}\r\n          style={{ height: \"600px\", width: \"100%\" }}\r\n          option={{\r\n            darkMode: true,\r\n            textStyle: { color: \"rgb(229, 231, 235)\" },\r\n            visualMap: {\r\n              show: false,\r\n              dimension: 2,\r\n              inRange: {\r\n                color: [\r\n                  \"#313695\",\r\n                  \"#4575b4\",\r\n                  \"#74add1\",\r\n                  \"#abd9e9\",\r\n                  \"#e0f3f8\",\r\n                  \"#ffffbf\",\r\n                  \"#fee090\",\r\n                  \"#fdae61\",\r\n                  \"#f46d43\",\r\n                  \"#d73027\",\r\n                  \"#a50026\",\r\n                ],\r\n              },\r\n            },\r\n            xAxis3D: { type: \"value\" },\r\n            yAxis3D: { type: \"value\" },\r\n            zAxis3D: { type: \"value\", min: -1, max: 1 },\r\n            grid3D: {\r\n              viewControl: {\r\n                // projection: \"orthographic\",\r\n              },\r\n            },\r\n            series: [],\r\n          }}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport SurfaceSeries from './SurfaceSeries';\nimport SurfaceView from './SurfaceView';\nexport function install(registers) {\n  registers.registerChartView(SurfaceView);\n  registers.registerSeriesModel(SurfaceSeries);\n  registers.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('surface', function (surfaceModel) {\n      var cartesian = surfaceModel.coordinateSystem;\n\n      if (!cartesian || cartesian.type !== 'cartesian3D') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Surface chart only support cartesian3D coordinateSystem');\n        }\n      }\n\n      var data = surfaceModel.getData();\n      var points = new Float32Array(3 * data.count());\n      var nanPoint = [NaN, NaN, NaN];\n\n      if (cartesian && cartesian.type === 'cartesian3D') {\n        var coordDims = cartesian.dimensions;\n        var dims = coordDims.map(function (coordDim) {\n          return surfaceModel.coordDimToDataDim(coordDim)[0];\n        });\n        data.each(dims, function (x, y, z, idx) {\n          var pt;\n\n          if (!data.hasValue(idx)) {\n            pt = nanPoint;\n          } else {\n            pt = cartesian.dataToPoint([x, y, z]);\n          }\n\n          points[idx * 3] = pt[0];\n          points[idx * 3 + 1] = pt[1];\n          points[idx * 3 + 2] = pt[2];\n        });\n      }\n\n      data.setLayout('points', points);\n    });\n  });\n}","/**\n * echarts-gl\n * Extension pack of ECharts providing 3d plots and globe visualization\n *\n * Copyright (c) 2014, echarts-gl\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport LayerGL from './core/LayerGL';\nimport backwardCompat from './preprocessor/backwardCompat';\n\nfunction EChartsGL(zr) {\n  this._layers = {};\n  this._zr = zr;\n}\n\nEChartsGL.prototype.update = function (ecModel, api) {\n  var self = this;\n  var zr = api.getZr();\n\n  if (!zr.getWidth() || !zr.getHeight()) {\n    console.warn('Dom has no width or height');\n    return;\n  }\n\n  function getLayerGL(model) {\n    // Disable auto sleep in gl layer.\n    zr.setSleepAfterStill(0);\n    var zlevel; // Host on coordinate system.\n\n    if (model.coordinateSystem && model.coordinateSystem.model) {\n      zlevel = model.get('zlevel');\n    } else {\n      zlevel = model.get('zlevel');\n    }\n\n    var layers = self._layers;\n    var layerGL = layers[zlevel];\n\n    if (!layerGL) {\n      layerGL = layers[zlevel] = new LayerGL('gl-' + zlevel, zr);\n\n      if (zr.painter.isSingleCanvas()) {\n        layerGL.virtual = true; // If container is canvas, use image to represent LayerGL\n        // FIXME Performance\n\n        var img = new echarts.graphic.Image({\n          z: 1e4,\n          style: {\n            image: layerGL.renderer.canvas\n          },\n          silent: true\n        });\n        layerGL.__hostImage = img;\n        zr.add(img);\n      }\n\n      zr.painter.insertLayer(zlevel, layerGL);\n    }\n\n    if (layerGL.__hostImage) {\n      layerGL.__hostImage.setStyle({\n        width: layerGL.renderer.getWidth(),\n        height: layerGL.renderer.getHeight()\n      });\n    }\n\n    return layerGL;\n  }\n\n  function setSilent(groupGL, silent) {\n    if (groupGL) {\n      groupGL.traverse(function (mesh) {\n        if (mesh.isRenderable && mesh.isRenderable()) {\n          mesh.ignorePicking = mesh.$ignorePicking != null ? mesh.$ignorePicking : silent;\n        }\n      });\n    }\n  }\n\n  for (var zlevel in this._layers) {\n    this._layers[zlevel].removeViewsAll();\n  }\n\n  ecModel.eachComponent(function (componentType, componentModel) {\n    if (componentType !== 'series') {\n      var view = api.getViewOfComponentModel(componentModel);\n      var coordSys = componentModel.coordinateSystem; // View with __ecgl__ flag is a echarts-gl component.\n\n      if (view.__ecgl__) {\n        var viewGL;\n\n        if (coordSys) {\n          if (!coordSys.viewGL) {\n            console.error('Can\\'t find viewGL in coordinateSystem of component ' + componentModel.id);\n            return;\n          }\n\n          viewGL = coordSys.viewGL;\n        } else {\n          if (!componentModel.viewGL) {\n            console.error('Can\\'t find viewGL of component ' + componentModel.id);\n            return;\n          }\n\n          viewGL = coordSys.viewGL;\n        }\n\n        var viewGL = coordSys.viewGL;\n        var layerGL = getLayerGL(componentModel);\n        layerGL.addView(viewGL);\n        view.afterRender && view.afterRender(componentModel, ecModel, api, layerGL);\n        setSilent(view.groupGL, componentModel.get('silent'));\n      }\n    }\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = api.getViewOfSeriesModel(seriesModel);\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (chartView.__ecgl__) {\n      if (coordSys && !coordSys.viewGL && !chartView.viewGL) {\n        console.error('Can\\'t find viewGL of series ' + chartView.id);\n        return;\n      }\n\n      var viewGL = coordSys && coordSys.viewGL || chartView.viewGL; // TODO Check zlevel not same with component of coordinate system ?\n\n      var layerGL = getLayerGL(seriesModel);\n      layerGL.addView(viewGL);\n      chartView.afterRender && chartView.afterRender(seriesModel, ecModel, api, layerGL);\n      setSilent(chartView.groupGL, seriesModel.get('silent'));\n    }\n  });\n}; // Hack original getRenderedCanvas. Will removed after new echarts released\n// TODO\n\n\necharts.registerPostInit(function (chart) {\n  var zr = chart.getZr();\n  var oldDispose = zr.painter.dispose;\n\n  zr.painter.dispose = function () {\n    if (typeof this.eachOtherLayer === 'function') {\n      this.eachOtherLayer(function (layer) {\n        if (layer instanceof LayerGL) {\n          layer.dispose();\n        }\n      });\n    }\n\n    oldDispose.call(this);\n  };\n\n  zr.painter.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var canvas = document.createElement('canvas');\n    var dpr = opts.pixelRatio || this.dpr;\n    canvas.width = this.getWidth() * dpr;\n    canvas.height = this.getHeight() * dpr;\n    var ctx = canvas.getContext('2d');\n    ctx.dpr = dpr;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (opts.backgroundColor) {\n      ctx.fillStyle = opts.backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        ctx.save();\n        intermediateLayer.renderToCanvas(ctx);\n        ctx.restore();\n      }\n    }\n\n    var layer = {\n      ctx: ctx\n    };\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, layer, true, null, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return canvas;\n  };\n});\necharts.registerPostUpdate(function (ecModel, api) {\n  var zr = api.getZr();\n  var egl = zr.__egl = zr.__egl || new EChartsGL(zr);\n  egl.update(ecModel, api);\n});\necharts.registerPreprocessor(backwardCompat);\nexport default EChartsGL;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nexport * from './export/core.js';\nimport { use } from './extension.js';\nimport { init } from './core/echarts.js';\nimport { install as CanvasRenderer } from './renderer/installCanvasRenderer.js';\nimport { install as DatasetComponent } from './component/dataset/install.js'; // Default to have canvas renderer and dataset for compitatble reason.\n\nuse([CanvasRenderer, DatasetComponent]); // TODO: Compatitable with the following code\n// import echarts from 'echarts/lib/echarts.js'\n\nexport default {\n  init: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable-next-line */\n      console.error(\"\\\"import echarts from 'echarts/lib/echarts.js'\\\" is not supported anymore. Use \\\"import * as echarts from 'echarts/lib/echarts.js'\\\" instead;\");\n    } // @ts-ignore\n\n\n    return init.apply(null, arguments);\n  }\n}; // Import label layout by default.\n// TODO remove\n\nimport { installLabelLayout } from './label/installLabelLayout.js';\nuse(installLabelLayout);","/**\n * Provide WebGL layer to zrender. Which is rendered on top of clay.\n *\n *\n * Relationship between zrender, LayerGL(renderer) and ViewGL(Scene, Camera, Viewport)\n *           zrender\n *           /     \\\n *      LayerGL   LayerGL\n *    (renderer) (renderer)\n *      /     \\\n *  ViewGL   ViewGL\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Renderer from 'claygl/src/Renderer';\nimport RayPicking from 'claygl/src/picking/RayPicking';\nimport Texture from 'claygl/src/Texture';\nimport graphicGL from '../util/graphicGL'; // PENDING, clay. notifier is same with zrender Eventful\n\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport requestAnimationFrame from 'zrender/lib/animation/requestAnimationFrame';\n/**\n * @constructor\n * @alias module:echarts-gl/core/LayerGL\n * @param {string} id Layer ID\n * @param {module:zrender/ZRender} zr\n */\n\nvar LayerGL = function (id, zr) {\n  /**\n   * Layer ID\n   * @type {string}\n   */\n  this.id = id;\n  /**\n   * @type {module:zrender/ZRender}\n   */\n\n  this.zr = zr;\n  /**\n   * @type {clay.Renderer}\n   */\n\n  try {\n    this.renderer = new Renderer({\n      clearBit: 0,\n      devicePixelRatio: zr.painter.dpr,\n      preserveDrawingBuffer: true,\n      // PENDING\n      premultipliedAlpha: true\n    });\n    this.renderer.resize(zr.painter.getWidth(), zr.painter.getHeight());\n  } catch (e) {\n    this.renderer = null;\n    this.dom = document.createElement('div');\n    this.dom.style.cssText = 'position:absolute; left: 0; top: 0; right: 0; bottom: 0;';\n    this.dom.className = 'ecgl-nowebgl';\n    this.dom.innerHTML = 'Sorry, your browser does not support WebGL';\n    console.error(e);\n    return;\n  }\n\n  this.onglobalout = this.onglobalout.bind(this);\n  zr.on('globalout', this.onglobalout);\n  /**\n   * Canvas dom for webgl rendering\n   * @type {HTMLCanvasElement}\n   */\n\n  this.dom = this.renderer.canvas;\n  var style = this.dom.style;\n  style.position = 'absolute';\n  style.left = '0';\n  style.top = '0';\n  /**\n   * @type {Array.<clay.Scene>}\n   */\n\n  this.views = [];\n  this._picking = new RayPicking({\n    renderer: this.renderer\n  });\n  this._viewsToDispose = [];\n  /**\n   * Current accumulating id.\n   */\n\n  this._accumulatingId = 0;\n  this._zrEventProxy = new echarts.graphic.Rect({\n    shape: {\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2\n    },\n    // FIXME Better solution.\n    __isGLToZRProxy: true\n  });\n  this._backgroundColor = null;\n  this._disposed = false;\n};\n\nLayerGL.prototype.setUnpainted = function () {};\n/**\n * @param {module:echarts-gl/core/ViewGL} view\n */\n\n\nLayerGL.prototype.addView = function (view) {\n  if (view.layer === this) {\n    return;\n  } // If needs to dispose in this layer. unmark it.\n\n\n  var idx = this._viewsToDispose.indexOf(view);\n\n  if (idx >= 0) {\n    this._viewsToDispose.splice(idx, 1);\n  }\n\n  this.views.push(view);\n  view.layer = this;\n  var zr = this.zr;\n  view.scene.traverse(function (node) {\n    node.__zr = zr;\n\n    if (node.addAnimatorsToZr) {\n      node.addAnimatorsToZr(zr);\n    }\n  });\n};\n\nfunction removeFromZr(node) {\n  var zr = node.__zr;\n  node.__zr = null;\n\n  if (zr && node.removeAnimatorsFromZr) {\n    node.removeAnimatorsFromZr(zr);\n  }\n}\n/**\n * @param {module:echarts-gl/core/ViewGL} view\n */\n\n\nLayerGL.prototype.removeView = function (view) {\n  if (view.layer !== this) {\n    return;\n  }\n\n  var idx = this.views.indexOf(view);\n\n  if (idx >= 0) {\n    this.views.splice(idx, 1);\n    view.scene.traverse(removeFromZr, this);\n    view.layer = null; // Mark to dispose in this layer.\n\n    this._viewsToDispose.push(view);\n  }\n};\n/**\n * Remove all views\n */\n\n\nLayerGL.prototype.removeViewsAll = function () {\n  this.views.forEach(function (view) {\n    view.scene.traverse(removeFromZr, this);\n    view.layer = null; // Mark to dispose in this layer.\n\n    this._viewsToDispose.push(view);\n  }, this);\n  this.views.length = 0;\n};\n/**\n * Resize the canvas and viewport, will be invoked by zrender\n * @param  {number} width\n * @param  {number} height\n */\n\n\nLayerGL.prototype.resize = function (width, height) {\n  var renderer = this.renderer;\n  renderer.resize(width, height);\n};\n/**\n * Clear color and depth\n * @return {[type]} [description]\n */\n\n\nLayerGL.prototype.clear = function () {\n  var gl = this.renderer.gl;\n  var clearColor = this._backgroundColor || [0, 0, 0, 0];\n  gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n  gl.depthMask(true);\n  gl.colorMask(true, true, true, true);\n  gl.clear(gl.DEPTH_BUFFER_BIT | gl.COLOR_BUFFER_BIT);\n};\n/**\n * Clear depth\n */\n\n\nLayerGL.prototype.clearDepth = function () {\n  var gl = this.renderer.gl;\n  gl.clear(gl.DEPTH_BUFFER_BIT);\n};\n/**\n * Clear color\n */\n\n\nLayerGL.prototype.clearColor = function () {\n  var gl = this.renderer.gl;\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n};\n/**\n * Mark layer to refresh next tick\n */\n\n\nLayerGL.prototype.needsRefresh = function () {\n  this.zr.refresh();\n};\n/**\n * Refresh the layer, will be invoked by zrender\n */\n\n\nLayerGL.prototype.refresh = function (bgColor) {\n  this._backgroundColor = bgColor ? graphicGL.parseColor(bgColor) : [0, 0, 0, 0];\n  this.renderer.clearColor = this._backgroundColor;\n\n  for (var i = 0; i < this.views.length; i++) {\n    this.views[i].prepareRender(this.renderer);\n  }\n\n  this._doRender(false); // Auto dispose unused resources on GPU, like program(shader), texture, geometry(buffers)\n\n\n  this._trackAndClean(); // Dispose trashed views\n\n\n  for (var i = 0; i < this._viewsToDispose.length; i++) {\n    this._viewsToDispose[i].dispose(this.renderer);\n  }\n\n  this._viewsToDispose.length = 0;\n\n  this._startAccumulating();\n};\n\nLayerGL.prototype.renderToCanvas = function (ctx) {\n  // PENDING will block the page\n  this._startAccumulating(true);\n\n  ctx.drawImage(this.dom, 0, 0, ctx.canvas.width, ctx.canvas.height);\n};\n\nLayerGL.prototype._doRender = function (accumulating) {\n  this.clear();\n  this.renderer.saveViewport();\n\n  for (var i = 0; i < this.views.length; i++) {\n    this.views[i].render(this.renderer, accumulating);\n  }\n\n  this.renderer.restoreViewport();\n};\n/**\n * Stop accumulating\n */\n\n\nLayerGL.prototype._stopAccumulating = function () {\n  this._accumulatingId = 0;\n  clearTimeout(this._accumulatingTimeout);\n};\n\nvar accumulatingId = 1;\n/**\n * Start accumulating all the views.\n * Accumulating is for antialising and have more sampling in SSAO\n * @private\n */\n\nLayerGL.prototype._startAccumulating = function (immediate) {\n  var self = this;\n\n  this._stopAccumulating();\n\n  var needsAccumulate = false;\n\n  for (var i = 0; i < this.views.length; i++) {\n    needsAccumulate = this.views[i].needsAccumulate() || needsAccumulate;\n  }\n\n  if (!needsAccumulate) {\n    return;\n  }\n\n  function accumulate(id) {\n    if (!self._accumulatingId || id !== self._accumulatingId) {\n      return;\n    }\n\n    var isFinished = true;\n\n    for (var i = 0; i < self.views.length; i++) {\n      isFinished = self.views[i].isAccumulateFinished() && needsAccumulate;\n    }\n\n    if (!isFinished) {\n      self._doRender(true);\n\n      if (immediate) {\n        accumulate(id);\n      } else {\n        requestAnimationFrame(function () {\n          accumulate(id);\n        });\n      }\n    }\n  }\n\n  this._accumulatingId = accumulatingId++;\n\n  if (immediate) {\n    accumulate(self._accumulatingId);\n  } else {\n    this._accumulatingTimeout = setTimeout(function () {\n      accumulate(self._accumulatingId);\n    }, 50);\n  }\n};\n\nLayerGL.prototype._trackAndClean = function () {\n  var textureList = [];\n  var geometriesList = []; // Mark all resources unused;\n\n  if (this._textureList) {\n    markUnused(this._textureList);\n    markUnused(this._geometriesList);\n  }\n\n  for (var i = 0; i < this.views.length; i++) {\n    collectResources(this.views[i].scene, textureList, geometriesList);\n  } // Dispose those unsed resources.\n\n\n  if (this._textureList) {\n    checkAndDispose(this.renderer, this._textureList);\n    checkAndDispose(this.renderer, this._geometriesList);\n  }\n\n  this._textureList = textureList;\n  this._geometriesList = geometriesList;\n};\n\nfunction markUnused(resourceList) {\n  for (var i = 0; i < resourceList.length; i++) {\n    resourceList[i].__used__ = 0;\n  }\n}\n\nfunction checkAndDispose(renderer, resourceList) {\n  for (var i = 0; i < resourceList.length; i++) {\n    if (!resourceList[i].__used__) {\n      resourceList[i].dispose(renderer);\n    }\n  }\n}\n\nfunction updateUsed(resource, list) {\n  resource.__used__ = resource.__used__ || 0;\n  resource.__used__++;\n\n  if (resource.__used__ === 1) {\n    // Don't push to the list twice.\n    list.push(resource);\n  }\n}\n\nfunction collectResources(scene, textureResourceList, geometryResourceList) {\n  var prevMaterial;\n  var prevGeometry;\n  scene.traverse(function (renderable) {\n    if (renderable.isRenderable()) {\n      var geometry = renderable.geometry;\n      var material = renderable.material; // TODO optimize!!\n\n      if (material !== prevMaterial) {\n        var textureUniforms = material.getTextureUniforms();\n\n        for (var u = 0; u < textureUniforms.length; u++) {\n          var uniformName = textureUniforms[u];\n          var val = material.uniforms[uniformName].value;\n\n          if (!val) {\n            continue;\n          }\n\n          if (val instanceof Texture) {\n            updateUsed(val, textureResourceList);\n          } else if (val instanceof Array) {\n            for (var k = 0; k < val.length; k++) {\n              if (val[k] instanceof Texture) {\n                updateUsed(val[k], textureResourceList);\n              }\n            }\n          }\n        }\n      }\n\n      if (geometry !== prevGeometry) {\n        updateUsed(geometry, geometryResourceList);\n      }\n\n      prevMaterial = material;\n      prevGeometry = geometry;\n    }\n  });\n\n  for (var k = 0; k < scene.lights.length; k++) {\n    // Track AmbientCubemap\n    if (scene.lights[k].cubemap) {\n      updateUsed(scene.lights[k].cubemap, textureResourceList);\n    }\n  }\n}\n/**\n * Dispose the layer\n */\n\n\nLayerGL.prototype.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._stopAccumulating();\n\n  if (this._textureList) {\n    markUnused(this._textureList);\n    markUnused(this._geometriesList);\n    checkAndDispose(this.renderer, this._textureList);\n    checkAndDispose(this.renderer, this._geometriesList);\n  }\n\n  this.zr.off('globalout', this.onglobalout);\n  this._disposed = true;\n}; // Event handlers\n\n\nLayerGL.prototype.onmousedown = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n\n  if (obj) {\n    this._dispatchEvent('mousedown', e, obj);\n\n    this._dispatchDataEvent('mousedown', e, obj);\n  }\n\n  this._downX = e.offsetX;\n  this._downY = e.offsetY;\n};\n\nLayerGL.prototype.onmousemove = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n  var target = obj && obj.target;\n  var lastHovered = this._hovered;\n  this._hovered = obj;\n\n  if (lastHovered && target !== lastHovered.target) {\n    lastHovered.relatedTarget = target;\n\n    this._dispatchEvent('mouseout', e, lastHovered); // this._dispatchDataEvent('mouseout', e, lastHovered);\n\n\n    this.zr.setCursorStyle('default');\n  }\n\n  this._dispatchEvent('mousemove', e, obj);\n\n  if (obj) {\n    this.zr.setCursorStyle('pointer');\n\n    if (!lastHovered || target !== lastHovered.target) {\n      this._dispatchEvent('mouseover', e, obj); // this._dispatchDataEvent('mouseover', e, obj);\n\n    }\n  }\n\n  this._dispatchDataEvent('mousemove', e, obj);\n};\n\nLayerGL.prototype.onmouseup = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n\n  if (obj) {\n    this._dispatchEvent('mouseup', e, obj);\n\n    this._dispatchDataEvent('mouseup', e, obj);\n  }\n\n  this._upX = e.offsetX;\n  this._upY = e.offsetY;\n};\n\nLayerGL.prototype.onclick = LayerGL.prototype.dblclick = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  } // Ignore click event if mouse moved\n\n\n  var dx = this._upX - this._downX;\n  var dy = this._upY - this._downY;\n\n  if (Math.sqrt(dx * dx + dy * dy) > 20) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n\n  if (obj) {\n    this._dispatchEvent(e.type, e, obj);\n\n    this._dispatchDataEvent(e.type, e, obj);\n  } // Try set depth of field onclick\n\n\n  var result = this._clickToSetFocusPoint(e);\n\n  if (result) {\n    var success = result.view.setDOFFocusOnPoint(result.distance);\n\n    if (success) {\n      this.zr.refresh();\n    }\n  }\n};\n\nLayerGL.prototype._clickToSetFocusPoint = function (e) {\n  var renderer = this.renderer;\n  var oldViewport = renderer.viewport;\n\n  for (var i = this.views.length - 1; i >= 0; i--) {\n    var viewGL = this.views[i];\n\n    if (viewGL.hasDOF() && viewGL.containPoint(e.offsetX, e.offsetY)) {\n      this._picking.scene = viewGL.scene;\n      this._picking.camera = viewGL.camera; // Only used for picking, renderer.setViewport will also invoke gl.viewport.\n      // Set directly, PENDING.\n\n      renderer.viewport = viewGL.viewport;\n\n      var result = this._picking.pick(e.offsetX, e.offsetY, true);\n\n      if (result) {\n        result.view = viewGL;\n        return result;\n      }\n    }\n  }\n\n  renderer.viewport = oldViewport;\n};\n\nLayerGL.prototype.onglobalout = function (e) {\n  var lastHovered = this._hovered;\n\n  if (lastHovered) {\n    this._dispatchEvent('mouseout', e, {\n      target: lastHovered.target\n    });\n  }\n};\n\nLayerGL.prototype.pickObject = function (x, y) {\n  var output = [];\n  var renderer = this.renderer;\n  var oldViewport = renderer.viewport;\n\n  for (var i = 0; i < this.views.length; i++) {\n    var viewGL = this.views[i];\n\n    if (viewGL.containPoint(x, y)) {\n      this._picking.scene = viewGL.scene;\n      this._picking.camera = viewGL.camera; // Only used for picking, renderer.setViewport will also invoke gl.viewport.\n      // Set directly, PENDING.\n\n      renderer.viewport = viewGL.viewport;\n\n      this._picking.pickAll(x, y, output);\n    }\n  }\n\n  renderer.viewport = oldViewport;\n  output.sort(function (a, b) {\n    return a.distance - b.distance;\n  });\n  return output[0];\n};\n\nLayerGL.prototype._dispatchEvent = function (eveName, originalEvent, newEvent) {\n  if (!newEvent) {\n    newEvent = {};\n  }\n\n  var current = newEvent.target;\n  newEvent.cancelBubble = false;\n  newEvent.event = originalEvent;\n  newEvent.type = eveName;\n  newEvent.offsetX = originalEvent.offsetX;\n  newEvent.offsetY = originalEvent.offsetY;\n\n  while (current) {\n    current.trigger(eveName, newEvent);\n    current = current.getParent();\n\n    if (newEvent.cancelBubble) {\n      break;\n    }\n  }\n\n  this._dispatchToView(eveName, newEvent);\n};\n\nLayerGL.prototype._dispatchDataEvent = function (eveName, originalEvent, newEvent) {\n  var mesh = newEvent && newEvent.target;\n  var dataIndex = mesh && mesh.dataIndex;\n  var seriesIndex = mesh && mesh.seriesIndex; // Custom event data\n\n  var eventData = mesh && mesh.eventData;\n  var elChangedInMouseMove = false;\n  var eventProxy = this._zrEventProxy;\n  eventProxy.x = originalEvent.offsetX;\n  eventProxy.y = originalEvent.offsetY;\n  eventProxy.update();\n  var targetInfo = {\n    target: eventProxy\n  };\n  const ecData = echarts.helper.getECData(eventProxy);\n\n  if (eveName === 'mousemove') {\n    if (dataIndex != null) {\n      if (dataIndex !== this._lastDataIndex) {\n        if (parseInt(this._lastDataIndex, 10) >= 0) {\n          ecData.dataIndex = this._lastDataIndex;\n          ecData.seriesIndex = this._lastSeriesIndex; // FIXME May cause double events.\n\n          this.zr.handler.dispatchToElement(targetInfo, 'mouseout', originalEvent);\n        }\n\n        elChangedInMouseMove = true;\n      }\n    } else if (eventData != null) {\n      if (eventData !== this._lastEventData) {\n        if (this._lastEventData != null) {\n          ecData.eventData = this._lastEventData; // FIXME May cause double events.\n\n          this.zr.handler.dispatchToElement(targetInfo, 'mouseout', originalEvent);\n        }\n\n        elChangedInMouseMove = true;\n      }\n    }\n\n    this._lastEventData = eventData;\n    this._lastDataIndex = dataIndex;\n    this._lastSeriesIndex = seriesIndex;\n  }\n\n  ecData.eventData = eventData;\n  ecData.dataIndex = dataIndex;\n  ecData.seriesIndex = seriesIndex;\n\n  if (eventData != null || parseInt(dataIndex, 10) >= 0 && parseInt(seriesIndex, 10) >= 0) {\n    this.zr.handler.dispatchToElement(targetInfo, eveName, originalEvent);\n\n    if (elChangedInMouseMove) {\n      this.zr.handler.dispatchToElement(targetInfo, 'mouseover', originalEvent);\n    }\n  }\n};\n\nLayerGL.prototype._dispatchToView = function (eventName, e) {\n  for (var i = 0; i < this.views.length; i++) {\n    if (this.views[i].containPoint(e.offsetX, e.offsetY)) {\n      this.views[i].trigger(eventName, e);\n    }\n  }\n};\n\nObject.assign(LayerGL.prototype, notifier);\nexport default LayerGL;","// TODO Resources like shader, texture, geometry reference management\n// Trace and find out which shader, texture, geometry can be destroyed\nimport Base from './core/Base';\nimport GLInfo from './core/GLInfo';\nimport glenum from './core/glenum';\nimport vendor from './core/vendor';\n\nimport Material from './Material';\nimport Vector2 from './math/Vector2';\nimport ProgramManager from './gpu/ProgramManager';\n\n// Light header\nimport Shader from './Shader';\n\nimport prezEssl from './shader/source/prez.glsl.js';\nShader['import'](prezEssl);\n\nimport mat4 from './glmatrix/mat4';\nimport vec3 from './glmatrix/vec3';\n\nvar mat4Create = mat4.create;\n\nvar errorShader = {};\n\nfunction defaultGetMaterial(renderable) {\n    return renderable.material;\n}\nfunction defaultGetUniform(renderable, material, symbol) {\n    return material.uniforms[symbol].value;\n}\nfunction defaultIsMaterialChanged(renderabled, prevRenderable, material, prevMaterial) {\n    return material !== prevMaterial;\n}\nfunction defaultIfRender(renderable) {\n    return true;\n}\n\nfunction noop() {}\n\nvar attributeBufferTypeMap = {\n    float: glenum.FLOAT,\n    byte: glenum.BYTE,\n    ubyte: glenum.UNSIGNED_BYTE,\n    short: glenum.SHORT,\n    ushort: glenum.UNSIGNED_SHORT\n};\n\nfunction VertexArrayObject(availableAttributes, availableAttributeSymbols, indicesBuffer) {\n    this.availableAttributes = availableAttributes;\n    this.availableAttributeSymbols = availableAttributeSymbols;\n    this.indicesBuffer = indicesBuffer;\n\n    this.vao = null;\n}\n\nfunction PlaceHolderTexture(renderer) {\n    var blankCanvas;\n    var webglTexture;\n    this.bind = function (renderer) {\n        if (!blankCanvas) {\n            // TODO Environment not support createCanvas.\n            blankCanvas = vendor.createCanvas();\n            blankCanvas.width = blankCanvas.height = 1;\n            blankCanvas.getContext('2d');\n        }\n\n        var gl = renderer.gl;\n        var firstBind = !webglTexture;\n        if (firstBind) {\n            webglTexture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, webglTexture);\n        if (firstBind) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, blankCanvas);\n        }\n    };\n    this.unbind = function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, null);\n    };\n    this.isRenderable = function () {\n        return true;\n    };\n}\n/**\n * @constructor clay.Renderer\n * @extends clay.core.Base\n */\nvar Renderer = Base.extend(function () {\n    return /** @lends clay.Renderer# */ {\n\n        /**\n         * @type {HTMLCanvasElement}\n         * @readonly\n         */\n        canvas: null,\n\n        /**\n         * Canvas width, set by resize method\n         * @type {number}\n         * @private\n         */\n        _width: 100,\n\n        /**\n         * Canvas width, set by resize method\n         * @type {number}\n         * @private\n         */\n        _height: 100,\n\n        /**\n         * Device pixel ratio, set by setDevicePixelRatio method\n         * Specially for high defination display\n         * @see http://www.khronos.org/webgl/wiki/HandlingHighDPI\n         * @type {number}\n         * @private\n         */\n        devicePixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1.0,\n\n        /**\n         * Clear color\n         * @type {number[]}\n         */\n        clearColor: [0.0, 0.0, 0.0, 0.0],\n\n        /**\n         * Default:\n         *     _gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT | _gl.STENCIL_BUFFER_BIT\n         * @type {number}\n         */\n        clearBit: 17664,\n\n        // Settings when getting context\n        // http://www.khronos.org/registry/webgl/specs/latest/#2.4\n\n        /**\n         * If enable alpha, default true\n         * @type {boolean}\n         */\n        alpha: true,\n        /**\n         * If enable depth buffer, default true\n         * @type {boolean}\n         */\n        depth: true,\n        /**\n         * If enable stencil buffer, default false\n         * @type {boolean}\n         */\n        stencil: false,\n        /**\n         * If enable antialias, default true\n         * @type {boolean}\n         */\n        antialias: true,\n        /**\n         * If enable premultiplied alpha, default true\n         * @type {boolean}\n         */\n        premultipliedAlpha: true,\n        /**\n         * If preserve drawing buffer, default false\n         * @type {boolean}\n         */\n        preserveDrawingBuffer: false,\n        /**\n         * If throw context error, usually turned on in debug mode\n         * @type {boolean}\n         */\n        throwError: true,\n        /**\n         * WebGL Context created from given canvas\n         * @type {WebGLRenderingContext}\n         */\n        gl: null,\n        /**\n         * Renderer viewport, read-only, can be set by setViewport method\n         * @type {Object}\n         */\n        viewport: {},\n\n        /**\n         * Max joint number\n         * @type {number}\n         */\n        maxJointNumber: 20,\n\n        // Set by FrameBuffer#bind\n        __currentFrameBuffer: null,\n\n        _viewportStack: [],\n        _clearStack: [],\n\n        _sceneRendering: null\n    };\n}, function () {\n\n    if (!this.canvas) {\n        this.canvas = vendor.createCanvas();\n    }\n    var canvas = this.canvas;\n    try {\n        var opts = {\n            alpha: this.alpha,\n            depth: this.depth,\n            stencil: this.stencil,\n            antialias: this.antialias,\n            premultipliedAlpha: this.premultipliedAlpha,\n            preserveDrawingBuffer: this.preserveDrawingBuffer\n        };\n\n        this.gl = canvas.getContext('webgl', opts)\n            || canvas.getContext('experimental-webgl', opts);\n\n        if (!this.gl) {\n            throw new Error();\n        }\n\n        this._glinfo = new GLInfo(this.gl);\n\n        if (this.gl.targetRenderer) {\n            console.error('Already created a renderer');\n        }\n        this.gl.targetRenderer = this;\n\n        this.resize();\n    }\n    catch (e) {\n        throw 'Error creating WebGL Context ' + e;\n    }\n\n    // Init managers\n    this._programMgr = new ProgramManager(this);\n\n    this._placeholderTexture = new PlaceHolderTexture(this);\n},\n/** @lends clay.Renderer.prototype. **/\n{\n    /**\n     * Resize the canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    resize: function(width, height) {\n        var canvas = this.canvas;\n        // http://www.khronos.org/webgl/wiki/HandlingHighDPI\n        // set the display size of the canvas.\n        var dpr = this.devicePixelRatio;\n        if (width != null) {\n            if (canvas.style) {\n                canvas.style.width = width + 'px';\n                canvas.style.height = height + 'px';\n            }\n            // set the size of the drawingBuffer\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            this._width = width;\n            this._height = height;\n        }\n        else {\n            this._width = canvas.width / dpr;\n            this._height = canvas.height / dpr;\n        }\n\n        this.setViewport(0, 0, this._width, this._height);\n    },\n\n    /**\n     * Get renderer width\n     * @return {number}\n     */\n    getWidth: function () {\n        return this._width;\n    },\n\n    /**\n     * Get renderer height\n     * @return {number}\n     */\n    getHeight: function () {\n        return this._height;\n    },\n\n    /**\n     * Get viewport aspect,\n     * @return {number}\n     */\n    getViewportAspect: function () {\n        var viewport = this.viewport;\n        return viewport.width / viewport.height;\n    },\n\n    /**\n     * Set devicePixelRatio\n     * @param {number} devicePixelRatio\n     */\n    setDevicePixelRatio: function(devicePixelRatio) {\n        this.devicePixelRatio = devicePixelRatio;\n        this.resize(this._width, this._height);\n    },\n\n    /**\n     * Get devicePixelRatio\n     * @param {number} devicePixelRatio\n     */\n    getDevicePixelRatio: function () {\n        return this.devicePixelRatio;\n    },\n\n    /**\n     * Get WebGL extension\n     * @param {string} name\n     * @return {object}\n     */\n    getGLExtension: function (name) {\n        return this._glinfo.getExtension(name);\n    },\n\n    /**\n     * Get WebGL parameter\n     * @param {string} name\n     * @return {*}\n     */\n    getGLParameter: function (name) {\n        return this._glinfo.getParameter(name);\n    },\n\n    /**\n     * Set rendering viewport\n     * @param {number|Object} x\n     * @param {number} [y]\n     * @param {number} [width]\n     * @param {number} [height]\n     * @param {number} [devicePixelRatio]\n     *        Defaultly use the renderere devicePixelRatio\n     *        It needs to be 1 when setViewport is called by frameBuffer\n     *\n     * @example\n     *  setViewport(0,0,width,height,1)\n     *  setViewport({\n     *      x: 0,\n     *      y: 0,\n     *      width: width,\n     *      height: height,\n     *      devicePixelRatio: 1\n     *  })\n     */\n    setViewport: function (x, y, width, height, dpr) {\n\n        if (typeof x === 'object') {\n            var obj = x;\n\n            x = obj.x;\n            y = obj.y;\n            width = obj.width;\n            height = obj.height;\n            dpr = obj.devicePixelRatio;\n        }\n        dpr = dpr || this.devicePixelRatio;\n\n        this.gl.viewport(\n            x * dpr, y * dpr, width * dpr, height * dpr\n        );\n        // Use a fresh new object, not write property.\n        this.viewport = {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            devicePixelRatio: dpr\n        };\n    },\n\n    /**\n     * Push current viewport into a stack\n     */\n    saveViewport: function () {\n        this._viewportStack.push(this.viewport);\n    },\n\n    /**\n     * Pop viewport from stack, restore in the renderer\n     */\n    restoreViewport: function () {\n        if (this._viewportStack.length > 0) {\n            this.setViewport(this._viewportStack.pop());\n        }\n    },\n\n    /**\n     * Push current clear into a stack\n     */\n    saveClear: function () {\n        this._clearStack.push({\n            clearBit: this.clearBit,\n            clearColor: this.clearColor\n        });\n    },\n\n    /**\n     * Pop clear from stack, restore in the renderer\n     */\n    restoreClear: function () {\n        if (this._clearStack.length > 0) {\n            var opt = this._clearStack.pop();\n            this.clearColor = opt.clearColor;\n            this.clearBit = opt.clearBit;\n        }\n    },\n\n    bindSceneRendering: function (scene) {\n        this._sceneRendering = scene;\n    },\n\n    /**\n     * Render the scene in camera to the screen or binded offline framebuffer\n     * @param  {clay.Scene}       scene\n     * @param  {clay.Camera}      camera\n     * @param  {boolean}     [notUpdateScene] If not call the scene.update methods in the rendering, default true\n     * @param  {boolean}     [preZ]           If use preZ optimization, default false\n     * @return {IRenderInfo}\n     */\n    render: function(scene, camera, notUpdateScene, preZ) {\n        var _gl = this.gl;\n\n        var clearColor = this.clearColor;\n\n        if (this.clearBit) {\n\n            // Must set depth and color mask true before clear\n            _gl.colorMask(true, true, true, true);\n            _gl.depthMask(true);\n            var viewport = this.viewport;\n            var needsScissor = false;\n            var viewportDpr = viewport.devicePixelRatio;\n            if (viewport.width !== this._width || viewport.height !== this._height\n                || (viewportDpr && viewportDpr !== this.devicePixelRatio)\n                || viewport.x || viewport.y\n            ) {\n                needsScissor = true;\n                // http://stackoverflow.com/questions/11544608/how-to-clear-a-rectangle-area-in-webgl\n                // Only clear the viewport\n                _gl.enable(_gl.SCISSOR_TEST);\n                _gl.scissor(viewport.x * viewportDpr, viewport.y * viewportDpr, viewport.width * viewportDpr, viewport.height * viewportDpr);\n            }\n            _gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n            _gl.clear(this.clearBit);\n            if (needsScissor) {\n                _gl.disable(_gl.SCISSOR_TEST);\n            }\n        }\n\n        // If the scene have been updated in the prepass like shadow map\n        // There is no need to update it again\n        if (!notUpdateScene) {\n            scene.update(false);\n        }\n        scene.updateLights();\n\n        camera = camera || scene.getMainCamera();\n        if (!camera) {\n            console.error('Can\\'t find camera in the scene.');\n            return;\n        }\n        camera.update();\n        var renderList = scene.updateRenderList(camera, true);\n\n        this._sceneRendering = scene;\n\n        var opaqueList = renderList.opaque;\n        var transparentList = renderList.transparent;\n        var sceneMaterial = scene.material;\n\n        scene.trigger('beforerender', this, scene, camera, renderList);\n\n        // Render pre z\n        if (preZ) {\n            this.renderPreZ(opaqueList, scene, camera);\n            _gl.depthFunc(_gl.LEQUAL);\n        }\n        else {\n            _gl.depthFunc(_gl.LESS);\n        }\n\n        // Update the depth of transparent list.\n        var worldViewMat = mat4Create();\n        var posViewSpace = vec3.create();\n        for (var i = 0; i < transparentList.length; i++) {\n            var renderable = transparentList[i];\n            mat4.multiplyAffine(worldViewMat, camera.viewMatrix.array, renderable.worldTransform.array);\n            vec3.transformMat4(posViewSpace, renderable.position.array, worldViewMat);\n            renderable.__depth = posViewSpace[2];\n        }\n\n        // Render opaque list\n        this.renderPass(opaqueList, camera, {\n            getMaterial: function (renderable) {\n                return sceneMaterial || renderable.material;\n            },\n            sortCompare: this.opaqueSortCompare\n        });\n\n        this.renderPass(transparentList, camera, {\n            getMaterial: function (renderable) {\n                return sceneMaterial || renderable.material;\n            },\n            sortCompare: this.transparentSortCompare\n        });\n\n        scene.trigger('afterrender', this, scene, camera, renderList);\n\n        // Cleanup\n        this._sceneRendering = null;\n    },\n\n    getProgram: function (renderable, renderMaterial, scene) {\n        renderMaterial = renderMaterial || renderable.material;\n        return this._programMgr.getProgram(renderable, renderMaterial, scene);\n    },\n\n    validateProgram: function (program) {\n        if (program.__error) {\n            var errorMsg = program.__error;\n            if (errorShader[program.__uid__]) {\n                return;\n            }\n            errorShader[program.__uid__] = true;\n\n            if (this.throwError) {\n                throw new Error(errorMsg);\n            }\n            else {\n                this.trigger('error', errorMsg);\n            }\n\n        }\n\n    },\n\n    updatePrograms: function (list, scene, passConfig) {\n        var getMaterial = (passConfig && passConfig.getMaterial) || defaultGetMaterial;\n        scene = scene || null;\n        for (var i = 0; i < list.length; i++) {\n            var renderable = list[i];\n            var renderMaterial = getMaterial.call(this, renderable);\n            if (i > 0) {\n                var prevRenderable = list[i - 1];\n                var prevJointsLen = prevRenderable.joints ? prevRenderable.joints.length : 0;\n                var jointsLen = renderable.joints ? renderable.joints.length : 0;\n                // Keep program not change if joints, material, lightGroup are same of two renderables.\n                if (jointsLen === prevJointsLen\n                    && renderable.material === prevRenderable.material\n                    && renderable.lightGroup === prevRenderable.lightGroup\n                ) {\n                    renderable.__program = prevRenderable.__program;\n                    continue;\n                }\n            }\n\n            var program = this._programMgr.getProgram(renderable, renderMaterial, scene);\n\n            this.validateProgram(program);\n\n            renderable.__program = program;\n        }\n    },\n\n    /**\n     * Render a single renderable list in camera in sequence\n     * @param {clay.Renderable[]} list List of all renderables.\n     * @param {clay.Camera} [camera] Camera provide view matrix and porjection matrix. It can be null.\n     * @param {Object} [passConfig]\n     * @param {Function} [passConfig.getMaterial] Get renderable material.\n     * @param {Function} [passConfig.getUniform] Get material uniform value.\n     * @param {Function} [passConfig.isMaterialChanged] If material changed.\n     * @param {Function} [passConfig.beforeRender] Before render each renderable.\n     * @param {Function} [passConfig.afterRender] After render each renderable\n     * @param {Function} [passConfig.ifRender] If render the renderable.\n     * @param {Function} [passConfig.sortCompare] Sort compare function.\n     * @return {IRenderInfo}\n     */\n    renderPass: function(list, camera, passConfig) {\n        this.trigger('beforerenderpass', this, list, camera, passConfig);\n\n        passConfig = passConfig || {};\n        passConfig.getMaterial = passConfig.getMaterial || defaultGetMaterial;\n        passConfig.getUniform = passConfig.getUniform || defaultGetUniform;\n        // PENDING Better solution?\n        passConfig.isMaterialChanged = passConfig.isMaterialChanged || defaultIsMaterialChanged;\n        passConfig.beforeRender = passConfig.beforeRender || noop;\n        passConfig.afterRender = passConfig.afterRender || noop;\n\n        var ifRenderObject = passConfig.ifRender || defaultIfRender;\n\n        this.updatePrograms(list, this._sceneRendering, passConfig);\n        if (passConfig.sortCompare) {\n            list.sort(passConfig.sortCompare);\n        }\n\n        // Some common builtin uniforms\n        var viewport = this.viewport;\n        var vDpr = viewport.devicePixelRatio;\n        var viewportUniform = [\n            viewport.x * vDpr, viewport.y * vDpr,\n            viewport.width * vDpr, viewport.height * vDpr\n        ];\n        var windowDpr = this.devicePixelRatio;\n        var windowSizeUniform = this.__currentFrameBuffer\n            ? [this.__currentFrameBuffer.getTextureWidth(), this.__currentFrameBuffer.getTextureHeight()]\n            : [this._width * windowDpr, this._height * windowDpr];\n        // DEPRECATED\n        var viewportSizeUniform = [\n            viewportUniform[2], viewportUniform[3]\n        ];\n        var time = Date.now();\n\n        // Calculate view and projection matrix\n        if (camera) {\n            mat4.copy(matrices.VIEW, camera.viewMatrix.array);\n            mat4.copy(matrices.PROJECTION, camera.projectionMatrix.array);\n            mat4.copy(matrices.VIEWINVERSE, camera.worldTransform.array);\n        }\n        else {\n            mat4.identity(matrices.VIEW);\n            mat4.identity(matrices.PROJECTION);\n            mat4.identity(matrices.VIEWINVERSE);\n        }\n        mat4.multiply(matrices.VIEWPROJECTION, matrices.PROJECTION, matrices.VIEW);\n        mat4.invert(matrices.PROJECTIONINVERSE, matrices.PROJECTION);\n        mat4.invert(matrices.VIEWPROJECTIONINVERSE, matrices.VIEWPROJECTION);\n\n        var _gl = this.gl;\n        var scene = this._sceneRendering;\n\n        var prevMaterial;\n        var prevProgram;\n        var prevRenderable;\n\n        // Status\n        var depthTest, depthMask;\n        var culling, cullFace, frontFace;\n        var transparent;\n        var drawID;\n        var currentVAO;\n        var materialTakesTextureSlot;\n\n        // var vaoExt = this.getGLExtension('OES_vertex_array_object');\n        // not use vaoExt, some platforms may mess it up.\n        var vaoExt = null;\n\n        for (var i = 0; i < list.length; i++) {\n            var renderable = list[i];\n            var isSceneNode = renderable.worldTransform != null;\n            var worldM;\n\n            if (!ifRenderObject(renderable)) {\n                continue;\n            }\n\n            // Skinned mesh will transformed to joint space. Ignore the mesh transform\n            if (isSceneNode) {\n                worldM = (renderable.isSkinnedMesh && renderable.isSkinnedMesh())\n                    // TODO\n                    ? (renderable.offsetMatrix ? renderable.offsetMatrix.array :matrices.IDENTITY)\n                    : renderable.worldTransform.array;\n            }\n            var geometry = renderable.geometry;\n            var material = passConfig.getMaterial.call(this, renderable);\n\n            var program = renderable.__program;\n            var shader = material.shader;\n\n            var currentDrawID = geometry.__uid__ + '-' + program.__uid__;\n            var drawIDChanged = currentDrawID !== drawID;\n            drawID = currentDrawID;\n            if (drawIDChanged && vaoExt) {\n                // TODO Seems need to be bound to null immediately (or before bind another program?) if vao is changed\n                vaoExt.bindVertexArrayOES(null);\n            }\n            if (isSceneNode) {\n                mat4.copy(matrices.WORLD, worldM);\n                mat4.multiply(matrices.WORLDVIEWPROJECTION, matrices.VIEWPROJECTION, worldM);\n                mat4.multiplyAffine(matrices.WORLDVIEW, matrices.VIEW, worldM);\n                if (shader.matrixSemantics.WORLDINVERSE ||\n                    shader.matrixSemantics.WORLDINVERSETRANSPOSE) {\n                    mat4.invert(matrices.WORLDINVERSE, worldM);\n                }\n                if (shader.matrixSemantics.WORLDVIEWINVERSE ||\n                    shader.matrixSemantics.WORLDVIEWINVERSETRANSPOSE) {\n                    mat4.invert(matrices.WORLDVIEWINVERSE, matrices.WORLDVIEW);\n                }\n                if (shader.matrixSemantics.WORLDVIEWPROJECTIONINVERSE ||\n                    shader.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE) {\n                    mat4.invert(matrices.WORLDVIEWPROJECTIONINVERSE, matrices.WORLDVIEWPROJECTION);\n                }\n            }\n\n            // Before render hook\n            renderable.beforeRender && renderable.beforeRender(this);\n            passConfig.beforeRender.call(this, renderable, material, prevMaterial);\n\n            var programChanged = program !== prevProgram;\n            if (programChanged) {\n                // Set lights number\n                program.bind(this);\n                // Set some common uniforms\n                program.setUniformOfSemantic(_gl, 'VIEWPORT', viewportUniform);\n                program.setUniformOfSemantic(_gl, 'WINDOW_SIZE', windowSizeUniform);\n                if (camera) {\n                    program.setUniformOfSemantic(_gl, 'NEAR', camera.near);\n                    program.setUniformOfSemantic(_gl, 'FAR', camera.far);\n                }\n                program.setUniformOfSemantic(_gl, 'DEVICEPIXELRATIO', vDpr);\n                program.setUniformOfSemantic(_gl, 'TIME', time);\n                // DEPRECATED\n                program.setUniformOfSemantic(_gl, 'VIEWPORT_SIZE', viewportSizeUniform);\n\n                // Set lights uniforms\n                // TODO needs optimized\n                if (scene) {\n                    scene.setLightUniforms(program, renderable.lightGroup, this);\n                }\n            }\n            else {\n                program = prevProgram;\n            }\n\n            // Program changes also needs reset the materials.\n            if (programChanged || passConfig.isMaterialChanged(\n                renderable, prevRenderable, material, prevMaterial\n            )) {\n                if (material.depthTest !== depthTest) {\n                    material.depthTest ? _gl.enable(_gl.DEPTH_TEST) : _gl.disable(_gl.DEPTH_TEST);\n                    depthTest = material.depthTest;\n                }\n                if (material.depthMask !== depthMask) {\n                    _gl.depthMask(material.depthMask);\n                    depthMask = material.depthMask;\n                }\n                if (material.transparent !== transparent) {\n                    material.transparent ? _gl.enable(_gl.BLEND) : _gl.disable(_gl.BLEND);\n                    transparent = material.transparent;\n                }\n                // TODO cache blending\n                if (material.transparent) {\n                    if (material.blend) {\n                        material.blend(_gl);\n                    }\n                    else {\n                        // Default blend function\n                        _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n                        _gl.blendFuncSeparate(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n                    }\n                }\n\n                materialTakesTextureSlot = this._bindMaterial(\n                    renderable, material, program,\n                    prevRenderable || null, prevMaterial || null, prevProgram || null,\n                    passConfig.getUniform\n                );\n                prevMaterial = material;\n            }\n\n            var matrixSemanticKeys = shader.matrixSemanticKeys;\n\n            if (isSceneNode) {\n                for (var k = 0; k < matrixSemanticKeys.length; k++) {\n                    var semantic = matrixSemanticKeys[k];\n                    var semanticInfo = shader.matrixSemantics[semantic];\n                    var matrix = matrices[semantic];\n                    if (semanticInfo.isTranspose) {\n                        var matrixNoTranspose = matrices[semanticInfo.semanticNoTranspose];\n                        mat4.transpose(matrix, matrixNoTranspose);\n                    }\n                    program.setUniform(_gl, semanticInfo.type, semanticInfo.symbol, matrix);\n                }\n            }\n\n            if (renderable.cullFace !== cullFace) {\n                cullFace = renderable.cullFace;\n                _gl.cullFace(cullFace);\n            }\n            if (renderable.frontFace !== frontFace) {\n                frontFace = renderable.frontFace;\n                _gl.frontFace(frontFace);\n            }\n            if (renderable.culling !== culling) {\n                culling = renderable.culling;\n                culling ? _gl.enable(_gl.CULL_FACE) : _gl.disable(_gl.CULL_FACE);\n            }\n            // TODO Not update skeleton in each renderable.\n            this._updateSkeleton(renderable, program, materialTakesTextureSlot);\n            if (drawIDChanged) {\n                currentVAO = this._bindVAO(vaoExt, shader, geometry, program);\n            }\n            this._renderObject(renderable, currentVAO, program);\n\n            // After render hook\n            passConfig.afterRender(this, renderable);\n            renderable.afterRender && renderable.afterRender(this);\n\n            prevProgram = program;\n            prevRenderable = renderable;\n        }\n\n        // TODO Seems need to be bound to null immediately if vao is changed?\n        if (vaoExt) {\n            vaoExt.bindVertexArrayOES(null);\n        }\n\n        this.trigger('afterrenderpass', this, list, camera, passConfig);\n    },\n\n    getMaxJointNumber: function () {\n        return this.maxJointNumber;\n    },\n\n    _updateSkeleton: function (object, program, slot) {\n        var _gl = this.gl;\n        var skeleton = object.skeleton;\n        // Set pose matrices of skinned mesh\n        if (skeleton) {\n            // TODO Update before culling.\n            skeleton.update();\n            if (object.joints.length > this.getMaxJointNumber()) {\n                var skinMatricesTexture = skeleton.getSubSkinMatricesTexture(object.__uid__, object.joints);\n                program.useTextureSlot(this, skinMatricesTexture, slot);\n                program.setUniform(_gl, '1i', 'skinMatricesTexture', slot);\n                program.setUniform(_gl, '1f', 'skinMatricesTextureSize', skinMatricesTexture.width);\n            }\n            else {\n                var skinMatricesArray = skeleton.getSubSkinMatrices(object.__uid__, object.joints);\n                program.setUniformOfSemantic(_gl, 'SKIN_MATRIX', skinMatricesArray);\n            }\n        }\n    },\n\n    _renderObject: function (renderable, vao, program) {\n        var _gl = this.gl;\n        var geometry = renderable.geometry;\n\n        var glDrawMode = renderable.mode;\n        if (glDrawMode == null) {\n            glDrawMode = 0x0004;\n        }\n\n        var ext = null;\n        var isInstanced = renderable.isInstancedMesh && renderable.isInstancedMesh();\n        if (isInstanced) {\n            ext = this.getGLExtension('ANGLE_instanced_arrays');\n            if (!ext) {\n                console.warn('Device not support ANGLE_instanced_arrays extension');\n                return;\n            }\n        }\n\n        var instancedAttrLocations;\n        if (isInstanced) {\n            instancedAttrLocations = this._bindInstancedAttributes(renderable, program, ext);\n        }\n\n        if (vao.indicesBuffer) {\n            var uintExt = this.getGLExtension('OES_element_index_uint');\n            var useUintExt = uintExt && (geometry.indices instanceof Uint32Array);\n            var indicesType = useUintExt ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\n\n            if (isInstanced) {\n                ext.drawElementsInstancedANGLE(\n                    glDrawMode, vao.indicesBuffer.count, indicesType, 0, renderable.getInstanceCount()\n                );\n            }\n            else {\n                _gl.drawElements(glDrawMode, vao.indicesBuffer.count, indicesType, 0);\n            }\n        }\n        else {\n            if (isInstanced) {\n                ext.drawArraysInstancedANGLE(glDrawMode, 0, geometry.vertexCount, renderable.getInstanceCount());\n            }\n            else {\n                // FIXME Use vertex number in buffer\n                // vertexCount may get the wrong value when geometry forget to mark dirty after update\n                _gl.drawArrays(glDrawMode, 0, geometry.vertexCount);\n            }\n        }\n\n        if (isInstanced) {\n            for (var i = 0; i < instancedAttrLocations.length; i++) {\n                _gl.disableVertexAttribArray(instancedAttrLocations[i]);\n            }\n        }\n    },\n\n    _bindInstancedAttributes: function (renderable, program, ext) {\n        var _gl = this.gl;\n        var instancedBuffers = renderable.getInstancedAttributesBuffers(this);\n        var locations = [];\n\n        for (var i = 0; i < instancedBuffers.length; i++) {\n            var bufferObj = instancedBuffers[i];\n            var location = program.getAttribLocation(_gl, bufferObj.symbol);\n            if (location < 0) {\n                continue;\n            }\n\n            var glType = attributeBufferTypeMap[bufferObj.type] || _gl.FLOAT;;\n            _gl.enableVertexAttribArray(location);  // TODO\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, bufferObj.buffer);\n            _gl.vertexAttribPointer(location, bufferObj.size, glType, false, 0, 0);\n            ext.vertexAttribDivisorANGLE(location, bufferObj.divisor);\n\n            locations.push(location);\n        }\n\n        return locations;\n    },\n\n    _bindMaterial: function (renderable, material, program, prevRenderable, prevMaterial, prevProgram, getUniformValue) {\n        var _gl = this.gl;\n        // PENDING Same texture in different material take different slot?\n\n        // May use shader of other material if shader code are same\n        var sameProgram = prevProgram === program;\n\n        var currentTextureSlot = program.currentTextureSlot();\n        var enabledUniforms = material.getEnabledUniforms();\n        var textureUniforms = material.getTextureUniforms();\n        var placeholderTexture = this._placeholderTexture;\n\n        for (var u = 0; u < textureUniforms.length; u++) {\n            var symbol = textureUniforms[u];\n            var uniformValue = getUniformValue(renderable, material, symbol);\n            var uniformType = material.uniforms[symbol].type;\n            // Not use `instanceof` to determine if a value is texture in Material#bind.\n            // Use type instead, in some case texture may be in different namespaces.\n            // TODO Duck type validate.\n            if (uniformType === 't' && uniformValue) {\n                // Reset slot\n                uniformValue.__slot = -1;\n            }\n            else if (uniformType === 'tv') {\n                for (var i = 0; i < uniformValue.length; i++) {\n                    if (uniformValue[i]) {\n                        uniformValue[i].__slot = -1;\n                    }\n                }\n            }\n        }\n\n        placeholderTexture.__slot = -1;\n\n        // Set uniforms\n        for (var u = 0; u < enabledUniforms.length; u++) {\n            var symbol = enabledUniforms[u];\n            var uniform = material.uniforms[symbol];\n            var uniformValue = getUniformValue(renderable, material, symbol);\n            var uniformType = uniform.type;\n            var isTexture = uniformType === 't';\n\n            if (isTexture) {\n                if (!uniformValue || !uniformValue.isRenderable()) {\n                    uniformValue = placeholderTexture;\n                }\n            }\n            // PENDING\n            // When binding two materials with the same shader\n            // Many uniforms will be be set twice even if they have the same value\n            // So add a evaluation to see if the uniform is really needed to be set\n            if (prevMaterial && sameProgram) {\n                var prevUniformValue = getUniformValue(prevRenderable, prevMaterial, symbol);\n                if (isTexture) {\n                    if (!prevUniformValue || !prevUniformValue.isRenderable()) {\n                        prevUniformValue = placeholderTexture;\n                    }\n                }\n\n                if (prevUniformValue === uniformValue) {\n                    if (isTexture) {\n                        // Still take the slot to make sure same texture in different materials have same slot.\n                        program.takeCurrentTextureSlot(this, null);\n                    }\n                    else if (uniformType === 'tv' && uniformValue) {\n                        for (var i = 0; i < uniformValue.length; i++) {\n                            program.takeCurrentTextureSlot(this, null);\n                        }\n                    }\n                    continue;\n                }\n            }\n\n            if (uniformValue == null) {\n                continue;\n            }\n            else if (isTexture) {\n                if (uniformValue.__slot < 0) {\n                    var slot = program.currentTextureSlot();\n                    var res = program.setUniform(_gl, '1i', symbol, slot);\n                    if (res) { // Texture uniform is enabled\n                        program.takeCurrentTextureSlot(this, uniformValue);\n                        uniformValue.__slot = slot;\n                    }\n                }\n                // Multiple uniform use same texture..\n                else {\n                    program.setUniform(_gl, '1i', symbol, uniformValue.__slot);\n                }\n            }\n            else if (Array.isArray(uniformValue)) {\n                if (uniformValue.length === 0) {\n                    continue;\n                }\n                // Texture Array\n                if (uniformType === 'tv') {\n                    if (!program.hasUniform(symbol)) {\n                        continue;\n                    }\n\n                    var arr = [];\n                    for (var i = 0; i < uniformValue.length; i++) {\n                        var texture = uniformValue[i];\n\n                        if (texture.__slot < 0) {\n                            var slot = program.currentTextureSlot();\n                            arr.push(slot);\n                            program.takeCurrentTextureSlot(this, texture);\n                            texture.__slot = slot;\n                        }\n                        else {\n                            arr.push(texture.__slot);\n                        }\n                    }\n\n                    program.setUniform(_gl, '1iv', symbol, arr);\n                }\n                else {\n                    program.setUniform(_gl, uniform.type, symbol, uniformValue);\n                }\n            }\n            else{\n                program.setUniform(_gl, uniform.type, symbol, uniformValue);\n            }\n        }\n        var newSlot = program.currentTextureSlot();\n        // Texture slot maybe used out of material.\n        program.resetTextureSlot(currentTextureSlot);\n        return newSlot;\n    },\n\n    _bindVAO: function (vaoExt, shader, geometry, program) {\n        var isStatic = !geometry.dynamic;\n        var _gl = this.gl;\n\n        var vaoId = this.__uid__ + '-' + program.__uid__;\n        var vao = geometry.__vaoCache[vaoId];\n        if (!vao) {\n            var chunks = geometry.getBufferChunks(this);\n            if (!chunks || !chunks.length) {  // Empty mesh\n                return;\n            }\n            var chunk = chunks[0];\n            var attributeBuffers = chunk.attributeBuffers;\n            var indicesBuffer = chunk.indicesBuffer;\n\n            var availableAttributes = [];\n            var availableAttributeSymbols = [];\n            for (var a = 0; a < attributeBuffers.length; a++) {\n                var attributeBufferInfo = attributeBuffers[a];\n                var name = attributeBufferInfo.name;\n                var semantic = attributeBufferInfo.semantic;\n                var symbol;\n                if (semantic) {\n                    var semanticInfo = shader.attributeSemantics[semantic];\n                    symbol = semanticInfo && semanticInfo.symbol;\n                }\n                else {\n                    symbol = name;\n                }\n                if (symbol && program.attributes[symbol]) {\n                    availableAttributes.push(attributeBufferInfo);\n                    availableAttributeSymbols.push(symbol);\n                }\n            }\n\n            vao = new VertexArrayObject(\n                availableAttributes,\n                availableAttributeSymbols,\n                indicesBuffer\n            );\n\n            if (isStatic) {\n                geometry.__vaoCache[vaoId] = vao;\n            }\n        }\n\n        var needsBindAttributes = true;\n\n        // Create vertex object array cost a lot\n        // So we don't use it on the dynamic object\n        if (vaoExt && isStatic) {\n            // Use vertex array object\n            // http://blog.tojicode.com/2012/10/oesvertexarrayobject-extension.html\n            if (vao.vao == null) {\n                vao.vao = vaoExt.createVertexArrayOES();\n            }\n            else {\n                needsBindAttributes = false;\n            }\n            vaoExt.bindVertexArrayOES(vao.vao);\n        }\n\n        var availableAttributes = vao.availableAttributes;\n        var indicesBuffer = vao.indicesBuffer;\n\n        if (needsBindAttributes) {\n            var locationList = program.enableAttributes(this, vao.availableAttributeSymbols, (vaoExt && isStatic && vao));\n            // Setting attributes;\n            for (var a = 0; a < availableAttributes.length; a++) {\n                var location = locationList[a];\n                if (location === -1) {\n                    continue;\n                }\n                var attributeBufferInfo = availableAttributes[a];\n                var buffer = attributeBufferInfo.buffer;\n                var size = attributeBufferInfo.size;\n                var glType = attributeBufferTypeMap[attributeBufferInfo.type] || _gl.FLOAT;\n\n                _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n                _gl.vertexAttribPointer(location, size, glType, false, 0, 0);\n            }\n\n            if (geometry.isUseIndices()) {\n                _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, indicesBuffer.buffer);\n            }\n        }\n\n        return vao;\n    },\n\n    renderPreZ: function (list, scene, camera) {\n        var _gl = this.gl;\n        var preZPassMaterial = this._prezMaterial || new Material({\n            shader: new Shader(Shader.source('clay.prez.vertex'), Shader.source('clay.prez.fragment'))\n        });\n        this._prezMaterial = preZPassMaterial;\n\n        _gl.colorMask(false, false, false, false);\n        _gl.depthMask(true);\n\n        // Status\n        this.renderPass(list, camera, {\n            ifRender: function (renderable) {\n                return !renderable.ignorePreZ;\n            },\n            isMaterialChanged: function (renderable, prevRenderable) {\n                var matA = renderable.material;\n                var matB = prevRenderable.material;\n                return matA.get('diffuseMap') !== matB.get('diffuseMap')\n                    || (matA.get('alphaCutoff') || 0) !== (matB.get('alphaCutoff') || 0);\n            },\n            getUniform: function (renderable, depthMaterial, symbol) {\n                if (symbol === 'alphaMap') {\n                    return renderable.material.get('diffuseMap');\n                }\n                else if (symbol === 'alphaCutoff') {\n                    if (renderable.material.isDefined('fragment', 'ALPHA_TEST')\n                        && renderable.material.get('diffuseMap')\n                    ) {\n                        var alphaCutoff = renderable.material.get('alphaCutoff');\n                        return alphaCutoff || 0;\n                    }\n                    return 0;\n                }\n                else if (symbol === 'uvRepeat') {\n                    return renderable.material.get('uvRepeat');\n                }\n                else if (symbol === 'uvOffset') {\n                    return renderable.material.get('uvOffset');\n                }\n                else {\n                    return depthMaterial.get(symbol);\n                }\n            },\n            getMaterial: function () {\n                return preZPassMaterial;\n            },\n            sort: this.opaqueSortCompare\n        });\n\n        _gl.colorMask(true, true, true, true);\n        _gl.depthMask(true);\n    },\n\n    /**\n     * Dispose given scene, including all geometris, textures and shaders in the scene\n     * @param {clay.Scene} scene\n     */\n    disposeScene: function(scene) {\n        this.disposeNode(scene, true, true);\n        scene.dispose();\n    },\n\n    /**\n     * Dispose given node, including all geometries, textures and shaders attached on it or its descendant\n     * @param {clay.Node} node\n     * @param {boolean} [disposeGeometry=false] If dispose the geometries used in the descendant mesh\n     * @param {boolean} [disposeTexture=false] If dispose the textures used in the descendant mesh\n     */\n    disposeNode: function(root, disposeGeometry, disposeTexture) {\n        // Dettached from parent\n        if (root.getParent()) {\n            root.getParent().remove(root);\n        }\n        var disposedMap = {};\n        root.traverse(function(node) {\n            var material = node.material;\n            if (node.geometry && disposeGeometry) {\n                node.geometry.dispose(this);\n            }\n            if (disposeTexture && material && !disposedMap[material.__uid__]) {\n                var textureUniforms = material.getTextureUniforms();\n                for (var u = 0; u < textureUniforms.length; u++) {\n                    var uniformName = textureUniforms[u];\n                    var val = material.uniforms[uniformName].value;\n                    var uniformType = material.uniforms[uniformName].type;\n                    if (!val) {\n                        continue;\n                    }\n                    if (uniformType === 't') {\n                        val.dispose && val.dispose(this);\n                    }\n                    else if (uniformType === 'tv') {\n                        for (var k = 0; k < val.length; k++) {\n                            if (val[k]) {\n                                val[k].dispose && val[k].dispose(this);\n                            }\n                        }\n                    }\n                }\n                disposedMap[material.__uid__] = true;\n            }\n            // Particle system and AmbientCubemap light need to dispose\n            if (node.dispose) {\n                node.dispose(this);\n            }\n        }, this);\n    },\n\n    /**\n     * Dispose given geometry\n     * @param {clay.Geometry} geometry\n     */\n    disposeGeometry: function(geometry) {\n        geometry.dispose(this);\n    },\n\n    /**\n     * Dispose given texture\n     * @param {clay.Texture} texture\n     */\n    disposeTexture: function(texture) {\n        texture.dispose(this);\n    },\n\n    /**\n     * Dispose given frame buffer\n     * @param {clay.FrameBuffer} frameBuffer\n     */\n    disposeFrameBuffer: function(frameBuffer) {\n        frameBuffer.dispose(this);\n    },\n\n    /**\n     * Dispose renderer\n     */\n    dispose: function () {},\n\n    /**\n     * Convert screen coords to normalized device coordinates(NDC)\n     * Screen coords can get from mouse event, it is positioned relative to canvas element\n     * NDC can be used in ray casting with Camera.prototype.castRay methods\n     *\n     * @param  {number}       x\n     * @param  {number}       y\n     * @param  {clay.Vector2} [out]\n     * @return {clay.Vector2}\n     */\n    screenToNDC: function(x, y, out) {\n        if (!out) {\n            out = new Vector2();\n        }\n        // Invert y;\n        y = this._height - y;\n\n        var viewport = this.viewport;\n        var arr = out.array;\n        arr[0] = (x - viewport.x) / viewport.width;\n        arr[0] = arr[0] * 2 - 1;\n        arr[1] = (y - viewport.y) / viewport.height;\n        arr[1] = arr[1] * 2 - 1;\n\n        return out;\n    }\n});\n\n/**\n * Opaque renderables compare function\n * @param  {clay.Renderable} x\n * @param  {clay.Renderable} y\n * @return {boolean}\n * @static\n */\nRenderer.opaqueSortCompare = Renderer.prototype.opaqueSortCompare = function(x, y) {\n    // Priority renderOrder -> program -> material -> geometry\n    if (x.renderOrder === y.renderOrder) {\n        if (x.__program === y.__program) {\n            if (x.material === y.material) {\n                return x.geometry.__uid__ - y.geometry.__uid__;\n            }\n            return x.material.__uid__ - y.material.__uid__;\n        }\n        if (x.__program && y.__program) {\n            return x.__program.__uid__ - y.__program.__uid__;\n        }\n        return 0;\n    }\n    return x.renderOrder - y.renderOrder;\n};\n\n/**\n * Transparent renderables compare function\n * @param  {clay.Renderable} a\n * @param  {clay.Renderable} b\n * @return {boolean}\n * @static\n */\nRenderer.transparentSortCompare = Renderer.prototype.transparentSortCompare = function(x, y) {\n    // Priority renderOrder -> depth -> program -> material -> geometry\n\n    if (x.renderOrder === y.renderOrder) {\n        if (x.__depth === y.__depth) {\n            if (x.__program === y.__program) {\n                if (x.material === y.material) {\n                    return x.geometry.__uid__ - y.geometry.__uid__;\n                }\n                return x.material.__uid__ - y.material.__uid__;\n            }\n            if (x.__program  && y.__program) {\n                return x.__program.__uid__ - y.__program.__uid__;\n            }\n            return 0;\n        }\n        // Depth is negative\n        // So farther object has smaller depth value\n        return x.__depth - y.__depth;\n    }\n    return x.renderOrder - y.renderOrder;\n};\n\n// Temporary variables\nvar matrices = {\n    IDENTITY: mat4Create(),\n\n    WORLD: mat4Create(),\n    VIEW: mat4Create(),\n    PROJECTION: mat4Create(),\n    WORLDVIEW: mat4Create(),\n    VIEWPROJECTION: mat4Create(),\n    WORLDVIEWPROJECTION: mat4Create(),\n\n    WORLDINVERSE: mat4Create(),\n    VIEWINVERSE: mat4Create(),\n    PROJECTIONINVERSE: mat4Create(),\n    WORLDVIEWINVERSE: mat4Create(),\n    VIEWPROJECTIONINVERSE: mat4Create(),\n    WORLDVIEWPROJECTIONINVERSE: mat4Create(),\n\n    WORLDTRANSPOSE: mat4Create(),\n    VIEWTRANSPOSE: mat4Create(),\n    PROJECTIONTRANSPOSE: mat4Create(),\n    WORLDVIEWTRANSPOSE: mat4Create(),\n    VIEWPROJECTIONTRANSPOSE: mat4Create(),\n    WORLDVIEWPROJECTIONTRANSPOSE: mat4Create(),\n    WORLDINVERSETRANSPOSE: mat4Create(),\n    VIEWINVERSETRANSPOSE: mat4Create(),\n    PROJECTIONINVERSETRANSPOSE: mat4Create(),\n    WORLDVIEWINVERSETRANSPOSE: mat4Create(),\n    VIEWPROJECTIONINVERSETRANSPOSE: mat4Create(),\n    WORLDVIEWPROJECTIONINVERSETRANSPOSE: mat4Create()\n};\n\n/**\n * @name clay.Renderer.COLOR_BUFFER_BIT\n * @type {number}\n */\nRenderer.COLOR_BUFFER_BIT = glenum.COLOR_BUFFER_BIT;\n/**\n * @name clay.Renderer.DEPTH_BUFFER_BIT\n * @type {number}\n */\nRenderer.DEPTH_BUFFER_BIT = glenum.DEPTH_BUFFER_BIT;\n/**\n * @name clay.Renderer.STENCIL_BUFFER_BIT\n * @type {number}\n */\nRenderer.STENCIL_BUFFER_BIT = glenum.STENCIL_BUFFER_BIT;\n\nexport default Renderer;\n","import extendMixin from './mixin/extend';\nimport notifierMixin from './mixin/notifier';\nimport util from './util';\n\n/**\n * Base class of all objects\n * @constructor\n * @alias clay.core.Base\n * @mixes clay.core.mixin.notifier\n */\nvar Base = function () {\n    /**\n     * @type {number}\n     */\n    this.__uid__ = util.genGUID();\n};\n\nBase.__initializers__ = [\n    function (opts) {\n        util.extend(this, opts);\n    }\n];\n\nutil.extend(Base, extendMixin);\nutil.extend(Base.prototype, notifierMixin);\n\nexport default Base;\n","/**\n * Extend a sub class from base class\n * @param {object|Function} makeDefaultOpt default option of this sub class, method of the sub can use this.xxx to access this option\n * @param {Function} [initialize] Initialize after the sub class is instantiated\n * @param {Object} [proto] Prototype methods/properties of the sub class\n * @memberOf clay.core.mixin.extend\n * @return {Function}\n */\nfunction derive(makeDefaultOpt, initialize/*optional*/, proto/*optional*/) {\n\n    if (typeof initialize == 'object') {\n        proto = initialize;\n        initialize = null;\n    }\n\n    var _super = this;\n\n    var propList;\n    if (!(makeDefaultOpt instanceof Function)) {\n        // Optimize the property iterate if it have been fixed\n        propList = [];\n        for (var propName in makeDefaultOpt) {\n            if (makeDefaultOpt.hasOwnProperty(propName)) {\n                propList.push(propName);\n            }\n        }\n    }\n\n    var sub = function(options) {\n\n        // call super constructor\n        _super.apply(this, arguments);\n\n        if (makeDefaultOpt instanceof Function) {\n            // Invoke makeDefaultOpt each time if it is a function, So we can make sure each\n            // property in the object will not be shared by mutiple instances\n            extend(this, makeDefaultOpt.call(this, options));\n        }\n        else {\n            extendWithPropList(this, makeDefaultOpt, propList);\n        }\n\n        if (this.constructor === sub) {\n            // Initialize function will be called in the order of inherit\n            var initializers = sub.__initializers__;\n            for (var i = 0; i < initializers.length; i++) {\n                initializers[i].apply(this, arguments);\n            }\n        }\n    };\n    // save super constructor\n    sub.__super__ = _super;\n    // Initialize function will be called after all the super constructor is called\n    if (!_super.__initializers__) {\n        sub.__initializers__ = [];\n    } else {\n        sub.__initializers__ = _super.__initializers__.slice();\n    }\n    if (initialize) {\n        sub.__initializers__.push(initialize);\n    }\n\n    var Ctor = function() {};\n    Ctor.prototype = _super.prototype;\n    sub.prototype = new Ctor();\n    sub.prototype.constructor = sub;\n    extend(sub.prototype, proto);\n\n    // extend the derive method as a static method;\n    sub.extend = _super.extend;\n\n    // DEPCRATED\n    sub.derive = _super.extend;\n\n    return sub;\n}\n\nfunction extend(target, source) {\n    if (!source) {\n        return;\n    }\n    for (var name in source) {\n        if (source.hasOwnProperty(name)) {\n            target[name] = source[name];\n        }\n    }\n}\n\nfunction extendWithPropList(target, source, propList) {\n    for (var i = 0; i < propList.length; i++) {\n        var propName = propList[i];\n        target[propName] = source[propName];\n    }\n}\n\n/**\n * @alias clay.core.mixin.extend\n * @mixin\n */\nexport default {\n\n    extend: derive,\n\n    // DEPCRATED\n    derive: derive\n};\n","function Handler(action, context) {\n    this.action = action;\n    this.context = context;\n}\n/**\n * @mixin\n * @alias clay.core.mixin.notifier\n */\nvar notifier = {\n    /**\n     * Trigger event\n     * @param  {string} name\n     */\n    trigger: function(name) {\n        if (!this.hasOwnProperty('__handlers__')) {\n            return;\n        }\n        if (!this.__handlers__.hasOwnProperty(name)) {\n            return;\n        }\n\n        var hdls = this.__handlers__[name];\n        var l = hdls.length, i = -1, args = arguments;\n        // Optimize advise from backbone\n        switch (args.length) {\n            case 1:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context);\n                }\n                return;\n            case 2:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1]);\n                }\n                return;\n            case 3:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2]);\n                }\n                return;\n            case 4:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3]);\n                }\n                return;\n            case 5:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3], args[4]);\n                }\n                return;\n            default:\n                while (++i < l) {\n                    hdls[i].action.apply(hdls[i].context, Array.prototype.slice.call(args, 1));\n                }\n                return;\n        }\n    },\n    /**\n     * Register event handler\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    on: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var handlers = this.__handlers__ || (this.__handlers__={});\n        if (!handlers[name]) {\n            handlers[name] = [];\n        }\n        else {\n            if (this.has(name, action)) {\n                return;\n            }\n        }\n        var handler = new Handler(action, context || this);\n        handlers[name].push(handler);\n\n        return this;\n    },\n\n    /**\n     * Register event, event will only be triggered once and then removed\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    once: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var self = this;\n        function wrapper() {\n            self.off(name, wrapper);\n            action.apply(this, arguments);\n        }\n        return this.on(name, wrapper, context);\n    },\n\n    /**\n     * Alias of once('before' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    before: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'before' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of once('after' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    after: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'after' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of on('success')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    success: function(action, context) {\n        return this.once('success', action, context);\n    },\n\n    /**\n     * Alias of on('error')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    error: function(action, context) {\n        return this.once('error', action, context);\n    },\n\n    /**\n     * Remove event listener\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    off: function(name, action) {\n\n        var handlers = this.__handlers__ || (this.__handlers__={});\n\n        if (!action) {\n            handlers[name] = [];\n            return;\n        }\n        if (handlers[name]) {\n            var hdls = handlers[name];\n            var retains = [];\n            for (var i = 0; i < hdls.length; i++) {\n                if (action && hdls[i].action !== action) {\n                    retains.push(hdls[i]);\n                }\n            }\n            handlers[name] = retains;\n        }\n\n        return this;\n    },\n\n    /**\n     * If registered the event handler\n     * @param  {string}  name\n     * @param  {Function}  action\n     * @return {boolean}\n     */\n    has: function(name, action) {\n        var handlers = this.__handlers__;\n\n        if (! handlers ||\n            ! handlers[name]) {\n            return false;\n        }\n        var hdls = handlers[name];\n        for (var i = 0; i < hdls.length; i++) {\n            if (hdls[i].action === action) {\n                return true;\n            }\n        }\n    }\n};\n\nexport default notifier;","var guid = 0;\n\nvar ArrayProto = Array.prototype;\nvar nativeForEach = ArrayProto.forEach;\n\n/**\n * Util functions\n * @namespace clay.core.util\n */\nvar util = {\n\n    /**\n     * Generate GUID\n     * @return {number}\n     * @memberOf clay.core.util\n     */\n    genGUID: function () {\n        return ++guid;\n    },\n    /**\n     * Relative path to absolute path\n     * @param  {string} path\n     * @param  {string} basePath\n     * @return {string}\n     * @memberOf clay.core.util\n     */\n    relative2absolute: function (path, basePath) {\n        if (!basePath || path.match(/^\\//)) {\n            return path;\n        }\n        var pathParts = path.split('/');\n        var basePathParts = basePath.split('/');\n\n        var item = pathParts[0];\n        while(item === '.' || item === '..') {\n            if (item === '..') {\n                basePathParts.pop();\n            }\n            pathParts.shift();\n            item = pathParts[0];\n        }\n        return basePathParts.join('/') + '/' + pathParts.join('/');\n    },\n\n    /**\n     * Extend target with source\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extend: function (target, source) {\n        if (source) {\n            for (var name in source) {\n                if (source.hasOwnProperty(name)) {\n                    target[name] = source[name];\n                }\n            }\n        }\n        return target;\n    },\n\n    /**\n     * Extend properties to target if not exist.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaults: function (target, source) {\n        if (source) {\n            for (var propName in source) {\n                if (target[propName] === undefined) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties with a given property list to avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extendWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                target[propName] = source[propName];\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties to target if not exist. With a given property list avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaultsWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                if (target[propName] == null) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * @param  {Object|Array} obj\n     * @param  {Function} iterator\n     * @param  {Object} [context]\n     * @memberOf clay.core.util\n     */\n    each: function (obj, iterator, context) {\n        if (!(obj && iterator)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(iterator, context);\n        }\n        else if (obj.length === + obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                iterator.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    },\n\n    /**\n     * Is object\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isObject: function (obj) {\n        return obj === Object(obj);\n    },\n\n    /**\n     * Is array ?\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArray: function (obj) {\n        return Array.isArray(obj);\n    },\n\n    /**\n     * Is array like, which have a length property\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArrayLike: function (obj) {\n        if (!obj) {\n            return false;\n        }\n        else {\n            return obj.length === + obj.length;\n        }\n    },\n\n    /**\n     * @param  {} obj\n     * @return {}\n     * @memberOf clay.core.util\n     */\n    clone: function (obj) {\n        if (!util.isObject(obj)) {\n            return obj;\n        }\n        else if (util.isArray(obj)) {\n            return obj.slice();\n        }\n        else if (util.isArrayLike(obj)) { // is typed array\n            var ret = new obj.constructor(obj.length);\n            for (var i = 0; i < obj.length; i++) {\n                ret[i] = obj[i];\n            }\n            return ret;\n        }\n        else {\n            return util.extend({}, obj);\n        }\n    }\n};\n\nexport default util;\n","var EXTENSION_LIST = [\n    'OES_texture_float',\n    'OES_texture_half_float',\n    'OES_texture_float_linear',\n    'OES_texture_half_float_linear',\n    'OES_standard_derivatives',\n    'OES_vertex_array_object',\n    'OES_element_index_uint',\n    'WEBGL_compressed_texture_s3tc',\n    'WEBGL_depth_texture',\n    'EXT_texture_filter_anisotropic',\n    'EXT_shader_texture_lod',\n    'WEBGL_draw_buffers',\n    'EXT_frag_depth',\n    'EXT_sRGB',\n    'ANGLE_instanced_arrays'\n];\n\nvar PARAMETER_NAMES = [\n    'MAX_TEXTURE_SIZE',\n    'MAX_CUBE_MAP_TEXTURE_SIZE'\n];\n\nfunction GLInfo(_gl) {\n    var extensions = {};\n    var parameters = {};\n\n    // Get webgl extension\n    for (var i = 0; i < EXTENSION_LIST.length; i++) {\n        var extName = EXTENSION_LIST[i];\n        createExtension(extName);\n    }\n    // Get parameters\n    for (var i = 0; i < PARAMETER_NAMES.length; i++) {\n        var name = PARAMETER_NAMES[i];\n        parameters[name] = _gl.getParameter(_gl[name]);\n    }\n\n    this.getExtension = function (name) {\n        if (!(name in extensions)) {\n            createExtension(name);\n        }\n        return extensions[name];\n    };\n\n    this.getParameter = function (name) {\n        return parameters[name];\n    };\n\n    function createExtension(name) {\n        if (_gl.getExtension) {\n            var ext = _gl.getExtension(name);\n            if (!ext) {\n                ext = _gl.getExtension('MOZ_' + name);\n            }\n            if (!ext) {\n                ext = _gl.getExtension('WEBKIT_' + name);\n            }\n            extensions[name] = ext;\n        }\n    }\n}\n\nexport default GLInfo;\n","/**\n * @namespace clay.core.glenum\n * @see http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\n */\nexport default {\n    /* ClearBufferMask */\n    DEPTH_BUFFER_BIT               : 0x00000100,\n    STENCIL_BUFFER_BIT             : 0x00000400,\n    COLOR_BUFFER_BIT               : 0x00004000,\n\n    /* BeginMode */\n    POINTS                         : 0x0000,\n    LINES                          : 0x0001,\n    LINE_LOOP                      : 0x0002,\n    LINE_STRIP                     : 0x0003,\n    TRIANGLES                      : 0x0004,\n    TRIANGLE_STRIP                 : 0x0005,\n    TRIANGLE_FAN                   : 0x0006,\n\n    /* AlphaFunction (not supported in ES20) */\n    /*      NEVER */\n    /*      LESS */\n    /*      EQUAL */\n    /*      LEQUAL */\n    /*      GREATER */\n    /*      NOTEQUAL */\n    /*      GEQUAL */\n    /*      ALWAYS */\n\n    /* BlendingFactorDest */\n    ZERO                           : 0,\n    ONE                            : 1,\n    SRC_COLOR                      : 0x0300,\n    ONE_MINUS_SRC_COLOR            : 0x0301,\n    SRC_ALPHA                      : 0x0302,\n    ONE_MINUS_SRC_ALPHA            : 0x0303,\n    DST_ALPHA                      : 0x0304,\n    ONE_MINUS_DST_ALPHA            : 0x0305,\n\n    /* BlendingFactorSrc */\n    /*      ZERO */\n    /*      ONE */\n    DST_COLOR                      : 0x0306,\n    ONE_MINUS_DST_COLOR            : 0x0307,\n    SRC_ALPHA_SATURATE             : 0x0308,\n    /*      SRC_ALPHA */\n    /*      ONE_MINUS_SRC_ALPHA */\n    /*      DST_ALPHA */\n    /*      ONE_MINUS_DST_ALPHA */\n\n    /* BlendEquationSeparate */\n    FUNC_ADD                       : 0x8006,\n    BLEND_EQUATION                 : 0x8009,\n    BLEND_EQUATION_RGB             : 0x8009, /* same as BLEND_EQUATION */\n    BLEND_EQUATION_ALPHA           : 0x883D,\n\n    /* BlendSubtract */\n    FUNC_SUBTRACT                  : 0x800A,\n    FUNC_REVERSE_SUBTRACT          : 0x800B,\n\n    /* Separate Blend Functions */\n    BLEND_DST_RGB                  : 0x80C8,\n    BLEND_SRC_RGB                  : 0x80C9,\n    BLEND_DST_ALPHA                : 0x80CA,\n    BLEND_SRC_ALPHA                : 0x80CB,\n    CONSTANT_COLOR                 : 0x8001,\n    ONE_MINUS_CONSTANT_COLOR       : 0x8002,\n    CONSTANT_ALPHA                 : 0x8003,\n    ONE_MINUS_CONSTANT_ALPHA       : 0x8004,\n    BLEND_COLOR                    : 0x8005,\n\n    /* Buffer Objects */\n    ARRAY_BUFFER                   : 0x8892,\n    ELEMENT_ARRAY_BUFFER           : 0x8893,\n    ARRAY_BUFFER_BINDING           : 0x8894,\n    ELEMENT_ARRAY_BUFFER_BINDING   : 0x8895,\n\n    STREAM_DRAW                    : 0x88E0,\n    STATIC_DRAW                    : 0x88E4,\n    DYNAMIC_DRAW                   : 0x88E8,\n\n    BUFFER_SIZE                    : 0x8764,\n    BUFFER_USAGE                   : 0x8765,\n\n    CURRENT_VERTEX_ATTRIB          : 0x8626,\n\n    /* CullFaceMode */\n    FRONT                          : 0x0404,\n    BACK                           : 0x0405,\n    FRONT_AND_BACK                 : 0x0408,\n\n    /* DepthFunction */\n    /*      NEVER */\n    /*      LESS */\n    /*      EQUAL */\n    /*      LEQUAL */\n    /*      GREATER */\n    /*      NOTEQUAL */\n    /*      GEQUAL */\n    /*      ALWAYS */\n\n    /* EnableCap */\n    /* TEXTURE_2D */\n    CULL_FACE                      : 0x0B44,\n    BLEND                          : 0x0BE2,\n    DITHER                         : 0x0BD0,\n    STENCIL_TEST                   : 0x0B90,\n    DEPTH_TEST                     : 0x0B71,\n    SCISSOR_TEST                   : 0x0C11,\n    POLYGON_OFFSET_FILL            : 0x8037,\n    SAMPLE_ALPHA_TO_COVERAGE       : 0x809E,\n    SAMPLE_COVERAGE                : 0x80A0,\n\n    /* ErrorCode */\n    NO_ERROR                       : 0,\n    INVALID_ENUM                   : 0x0500,\n    INVALID_VALUE                  : 0x0501,\n    INVALID_OPERATION              : 0x0502,\n    OUT_OF_MEMORY                  : 0x0505,\n\n    /* FrontFaceDirection */\n    CW                             : 0x0900,\n    CCW                            : 0x0901,\n\n    /* GetPName */\n    LINE_WIDTH                     : 0x0B21,\n    ALIASED_POINT_SIZE_RANGE       : 0x846D,\n    ALIASED_LINE_WIDTH_RANGE       : 0x846E,\n    CULL_FACE_MODE                 : 0x0B45,\n    FRONT_FACE                     : 0x0B46,\n    DEPTH_RANGE                    : 0x0B70,\n    DEPTH_WRITEMASK                : 0x0B72,\n    DEPTH_CLEAR_VALUE              : 0x0B73,\n    DEPTH_FUNC                     : 0x0B74,\n    STENCIL_CLEAR_VALUE            : 0x0B91,\n    STENCIL_FUNC                   : 0x0B92,\n    STENCIL_FAIL                   : 0x0B94,\n    STENCIL_PASS_DEPTH_FAIL        : 0x0B95,\n    STENCIL_PASS_DEPTH_PASS        : 0x0B96,\n    STENCIL_REF                    : 0x0B97,\n    STENCIL_VALUE_MASK             : 0x0B93,\n    STENCIL_WRITEMASK              : 0x0B98,\n    STENCIL_BACK_FUNC              : 0x8800,\n    STENCIL_BACK_FAIL              : 0x8801,\n    STENCIL_BACK_PASS_DEPTH_FAIL   : 0x8802,\n    STENCIL_BACK_PASS_DEPTH_PASS   : 0x8803,\n    STENCIL_BACK_REF               : 0x8CA3,\n    STENCIL_BACK_VALUE_MASK        : 0x8CA4,\n    STENCIL_BACK_WRITEMASK         : 0x8CA5,\n    VIEWPORT                       : 0x0BA2,\n    SCISSOR_BOX                    : 0x0C10,\n    /*      SCISSOR_TEST */\n    COLOR_CLEAR_VALUE              : 0x0C22,\n    COLOR_WRITEMASK                : 0x0C23,\n    UNPACK_ALIGNMENT               : 0x0CF5,\n    PACK_ALIGNMENT                 : 0x0D05,\n    MAX_TEXTURE_SIZE               : 0x0D33,\n    MAX_VIEWPORT_DIMS              : 0x0D3A,\n    SUBPIXEL_BITS                  : 0x0D50,\n    RED_BITS                       : 0x0D52,\n    GREEN_BITS                     : 0x0D53,\n    BLUE_BITS                      : 0x0D54,\n    ALPHA_BITS                     : 0x0D55,\n    DEPTH_BITS                     : 0x0D56,\n    STENCIL_BITS                   : 0x0D57,\n    POLYGON_OFFSET_UNITS           : 0x2A00,\n    /*      POLYGON_OFFSET_FILL */\n    POLYGON_OFFSET_FACTOR          : 0x8038,\n    TEXTURE_BINDING_2D             : 0x8069,\n    SAMPLE_BUFFERS                 : 0x80A8,\n    SAMPLES                        : 0x80A9,\n    SAMPLE_COVERAGE_VALUE          : 0x80AA,\n    SAMPLE_COVERAGE_INVERT         : 0x80AB,\n\n    /* GetTextureParameter */\n    /*      TEXTURE_MAG_FILTER */\n    /*      TEXTURE_MIN_FILTER */\n    /*      TEXTURE_WRAP_S */\n    /*      TEXTURE_WRAP_T */\n\n    COMPRESSED_TEXTURE_FORMATS     : 0x86A3,\n\n    /* HintMode */\n    DONT_CARE                      : 0x1100,\n    FASTEST                        : 0x1101,\n    NICEST                         : 0x1102,\n\n    /* HintTarget */\n    GENERATE_MIPMAP_HINT            : 0x8192,\n\n    /* DataType */\n    BYTE                           : 0x1400,\n    UNSIGNED_BYTE                  : 0x1401,\n    SHORT                          : 0x1402,\n    UNSIGNED_SHORT                 : 0x1403,\n    INT                            : 0x1404,\n    UNSIGNED_INT                   : 0x1405,\n    FLOAT                          : 0x1406,\n\n    /* PixelFormat */\n    DEPTH_COMPONENT                : 0x1902,\n    ALPHA                          : 0x1906,\n    RGB                            : 0x1907,\n    RGBA                           : 0x1908,\n    LUMINANCE                      : 0x1909,\n    LUMINANCE_ALPHA                : 0x190A,\n\n    /* PixelType */\n    /*      UNSIGNED_BYTE */\n    UNSIGNED_SHORT_4_4_4_4         : 0x8033,\n    UNSIGNED_SHORT_5_5_5_1         : 0x8034,\n    UNSIGNED_SHORT_5_6_5           : 0x8363,\n\n    /* Shaders */\n    FRAGMENT_SHADER                  : 0x8B30,\n    VERTEX_SHADER                    : 0x8B31,\n    MAX_VERTEX_ATTRIBS               : 0x8869,\n    MAX_VERTEX_UNIFORM_VECTORS       : 0x8DFB,\n    MAX_VARYING_VECTORS              : 0x8DFC,\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS : 0x8B4D,\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS   : 0x8B4C,\n    MAX_TEXTURE_IMAGE_UNITS          : 0x8872,\n    MAX_FRAGMENT_UNIFORM_VECTORS     : 0x8DFD,\n    SHADER_TYPE                      : 0x8B4F,\n    DELETE_STATUS                    : 0x8B80,\n    LINK_STATUS                      : 0x8B82,\n    VALIDATE_STATUS                  : 0x8B83,\n    ATTACHED_SHADERS                 : 0x8B85,\n    ACTIVE_UNIFORMS                  : 0x8B86,\n    ACTIVE_ATTRIBUTES                : 0x8B89,\n    SHADING_LANGUAGE_VERSION         : 0x8B8C,\n    CURRENT_PROGRAM                  : 0x8B8D,\n\n    /* StencilFunction */\n    NEVER                          : 0x0200,\n    LESS                           : 0x0201,\n    EQUAL                          : 0x0202,\n    LEQUAL                         : 0x0203,\n    GREATER                        : 0x0204,\n    NOTEQUAL                       : 0x0205,\n    GEQUAL                         : 0x0206,\n    ALWAYS                         : 0x0207,\n\n    /* StencilOp */\n    /*      ZERO */\n    KEEP                           : 0x1E00,\n    REPLACE                        : 0x1E01,\n    INCR                           : 0x1E02,\n    DECR                           : 0x1E03,\n    INVERT                         : 0x150A,\n    INCR_WRAP                      : 0x8507,\n    DECR_WRAP                      : 0x8508,\n\n    /* StringName */\n    VENDOR                         : 0x1F00,\n    RENDERER                       : 0x1F01,\n    VERSION                        : 0x1F02,\n\n    /* TextureMagFilter */\n    NEAREST                        : 0x2600,\n    LINEAR                         : 0x2601,\n\n    /* TextureMinFilter */\n    /*      NEAREST */\n    /*      LINEAR */\n    NEAREST_MIPMAP_NEAREST         : 0x2700,\n    LINEAR_MIPMAP_NEAREST          : 0x2701,\n    NEAREST_MIPMAP_LINEAR          : 0x2702,\n    LINEAR_MIPMAP_LINEAR           : 0x2703,\n\n    /* TextureParameterName */\n    TEXTURE_MAG_FILTER             : 0x2800,\n    TEXTURE_MIN_FILTER             : 0x2801,\n    TEXTURE_WRAP_S                 : 0x2802,\n    TEXTURE_WRAP_T                 : 0x2803,\n\n    /* TextureTarget */\n    TEXTURE_2D                     : 0x0DE1,\n    TEXTURE                        : 0x1702,\n\n    TEXTURE_CUBE_MAP               : 0x8513,\n    TEXTURE_BINDING_CUBE_MAP       : 0x8514,\n    TEXTURE_CUBE_MAP_POSITIVE_X    : 0x8515,\n    TEXTURE_CUBE_MAP_NEGATIVE_X    : 0x8516,\n    TEXTURE_CUBE_MAP_POSITIVE_Y    : 0x8517,\n    TEXTURE_CUBE_MAP_NEGATIVE_Y    : 0x8518,\n    TEXTURE_CUBE_MAP_POSITIVE_Z    : 0x8519,\n    TEXTURE_CUBE_MAP_NEGATIVE_Z    : 0x851A,\n    MAX_CUBE_MAP_TEXTURE_SIZE      : 0x851C,\n\n    /* TextureUnit */\n    TEXTURE0                       : 0x84C0,\n    TEXTURE1                       : 0x84C1,\n    TEXTURE2                       : 0x84C2,\n    TEXTURE3                       : 0x84C3,\n    TEXTURE4                       : 0x84C4,\n    TEXTURE5                       : 0x84C5,\n    TEXTURE6                       : 0x84C6,\n    TEXTURE7                       : 0x84C7,\n    TEXTURE8                       : 0x84C8,\n    TEXTURE9                       : 0x84C9,\n    TEXTURE10                      : 0x84CA,\n    TEXTURE11                      : 0x84CB,\n    TEXTURE12                      : 0x84CC,\n    TEXTURE13                      : 0x84CD,\n    TEXTURE14                      : 0x84CE,\n    TEXTURE15                      : 0x84CF,\n    TEXTURE16                      : 0x84D0,\n    TEXTURE17                      : 0x84D1,\n    TEXTURE18                      : 0x84D2,\n    TEXTURE19                      : 0x84D3,\n    TEXTURE20                      : 0x84D4,\n    TEXTURE21                      : 0x84D5,\n    TEXTURE22                      : 0x84D6,\n    TEXTURE23                      : 0x84D7,\n    TEXTURE24                      : 0x84D8,\n    TEXTURE25                      : 0x84D9,\n    TEXTURE26                      : 0x84DA,\n    TEXTURE27                      : 0x84DB,\n    TEXTURE28                      : 0x84DC,\n    TEXTURE29                      : 0x84DD,\n    TEXTURE30                      : 0x84DE,\n    TEXTURE31                      : 0x84DF,\n    ACTIVE_TEXTURE                 : 0x84E0,\n\n    /* TextureWrapMode */\n    REPEAT                         : 0x2901,\n    CLAMP_TO_EDGE                  : 0x812F,\n    MIRRORED_REPEAT                : 0x8370,\n\n    /* Uniform Types */\n    FLOAT_VEC2                     : 0x8B50,\n    FLOAT_VEC3                     : 0x8B51,\n    FLOAT_VEC4                     : 0x8B52,\n    INT_VEC2                       : 0x8B53,\n    INT_VEC3                       : 0x8B54,\n    INT_VEC4                       : 0x8B55,\n    BOOL                           : 0x8B56,\n    BOOL_VEC2                      : 0x8B57,\n    BOOL_VEC3                      : 0x8B58,\n    BOOL_VEC4                      : 0x8B59,\n    FLOAT_MAT2                     : 0x8B5A,\n    FLOAT_MAT3                     : 0x8B5B,\n    FLOAT_MAT4                     : 0x8B5C,\n    SAMPLER_2D                     : 0x8B5E,\n    SAMPLER_CUBE                   : 0x8B60,\n\n    /* Vertex Arrays */\n    VERTEX_ATTRIB_ARRAY_ENABLED        : 0x8622,\n    VERTEX_ATTRIB_ARRAY_SIZE           : 0x8623,\n    VERTEX_ATTRIB_ARRAY_STRIDE         : 0x8624,\n    VERTEX_ATTRIB_ARRAY_TYPE           : 0x8625,\n    VERTEX_ATTRIB_ARRAY_NORMALIZED     : 0x886A,\n    VERTEX_ATTRIB_ARRAY_POINTER        : 0x8645,\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : 0x889F,\n\n    /* Shader Source */\n    COMPILE_STATUS                 : 0x8B81,\n\n    /* Shader Precision-Specified Types */\n    LOW_FLOAT                      : 0x8DF0,\n    MEDIUM_FLOAT                   : 0x8DF1,\n    HIGH_FLOAT                     : 0x8DF2,\n    LOW_INT                        : 0x8DF3,\n    MEDIUM_INT                     : 0x8DF4,\n    HIGH_INT                       : 0x8DF5,\n\n    /* Framebuffer Object. */\n    FRAMEBUFFER                    : 0x8D40,\n    RENDERBUFFER                   : 0x8D41,\n\n    RGBA4                          : 0x8056,\n    RGB5_A1                        : 0x8057,\n    RGB565                         : 0x8D62,\n    DEPTH_COMPONENT16              : 0x81A5,\n    STENCIL_INDEX                  : 0x1901,\n    STENCIL_INDEX8                 : 0x8D48,\n    DEPTH_STENCIL                  : 0x84F9,\n\n    RENDERBUFFER_WIDTH             : 0x8D42,\n    RENDERBUFFER_HEIGHT            : 0x8D43,\n    RENDERBUFFER_INTERNAL_FORMAT   : 0x8D44,\n    RENDERBUFFER_RED_SIZE          : 0x8D50,\n    RENDERBUFFER_GREEN_SIZE        : 0x8D51,\n    RENDERBUFFER_BLUE_SIZE         : 0x8D52,\n    RENDERBUFFER_ALPHA_SIZE        : 0x8D53,\n    RENDERBUFFER_DEPTH_SIZE        : 0x8D54,\n    RENDERBUFFER_STENCIL_SIZE      : 0x8D55,\n\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           : 0x8CD0,\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           : 0x8CD1,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         : 0x8CD2,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : 0x8CD3,\n\n    COLOR_ATTACHMENT0              : 0x8CE0,\n    DEPTH_ATTACHMENT               : 0x8D00,\n    STENCIL_ATTACHMENT             : 0x8D20,\n    DEPTH_STENCIL_ATTACHMENT       : 0x821A,\n\n    NONE                           : 0,\n\n    FRAMEBUFFER_COMPLETE                      : 0x8CD5,\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT         : 0x8CD6,\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : 0x8CD7,\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS         : 0x8CD9,\n    FRAMEBUFFER_UNSUPPORTED                   : 0x8CDD,\n\n    FRAMEBUFFER_BINDING            : 0x8CA6,\n    RENDERBUFFER_BINDING           : 0x8CA7,\n    MAX_RENDERBUFFER_SIZE          : 0x84E8,\n\n    INVALID_FRAMEBUFFER_OPERATION  : 0x0506,\n\n    /* WebGL-specific enums */\n    UNPACK_FLIP_Y_WEBGL            : 0x9240,\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL : 0x9241,\n    CONTEXT_LOST_WEBGL             : 0x9242,\n    UNPACK_COLORSPACE_CONVERSION_WEBGL : 0x9243,\n    BROWSER_DEFAULT_WEBGL          : 0x9244,\n};\n","import request from './request';\n\nvar supportWebGL;\n\nvar vendor = {};\n\n/**\n * If support WebGL\n * @return {boolean}\n */\nvendor.supportWebGL = function () {\n    if (supportWebGL == null) {\n        try {\n            var canvas = document.createElement('canvas');\n            var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n            if (!gl) {\n                throw new Error();\n            }\n        }\n        catch (e) {\n            supportWebGL = false;\n        }\n\n    }\n    return supportWebGL;\n};\n\nvendor.Int8Array = typeof Int8Array === 'undefined' ? Array : Int8Array;\n\nvendor.Uint8Array = typeof Uint8Array === 'undefined' ? Array : Uint8Array;\n\nvendor.Uint16Array = typeof Uint16Array === 'undefined' ? Array : Uint16Array;\n\nvendor.Uint32Array = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\n\nvendor.Int16Array = typeof Int16Array === 'undefined' ? Array : Int16Array;\n\nvendor.Float32Array = typeof Float32Array === 'undefined' ? Array : Float32Array;\n\nvendor.Float64Array = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nvar g = {};\nif (typeof window !== 'undefined') {\n    g = window;\n}\nelse if (typeof global !== 'undefined') {\n    g = global;\n}\n\n\nvendor.requestAnimationFrame = g.requestAnimationFrame\n    || g.msRequestAnimationFrame\n    || g.mozRequestAnimationFrame\n    || g.webkitRequestAnimationFrame\n    || function (func){ setTimeout(func, 16); };\n\nvendor.createCanvas = function () {\n    return document.createElement('canvas');\n};\n\nvendor.createImage = function () {\n    return new g.Image();\n};\n\nvendor.request = {\n    get: request.get\n};\n\nvendor.addEventListener = function (dom, type, func, useCapture) {\n    dom.addEventListener(type, func, useCapture);\n};\n\nvendor.removeEventListener = function (dom, type, func) {\n    dom.removeEventListener(type, func);\n};\n\nexport default vendor;\n","function get(options) {\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open('get', options.url);\n    // With response type set browser can get and put binary data\n    // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\n    // Default is text, and it can be set\n    // arraybuffer, blob, document, json, text\n    xhr.responseType = options.responseType || 'text';\n\n    if (options.onprogress) {\n        //https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest\n        xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n                var percent = e.loaded / e.total;\n                options.onprogress(percent, e.loaded, e.total);\n            }\n            else {\n                options.onprogress(null);\n            }\n        };\n    }\n    xhr.onload = function(e) {\n        if (xhr.status >= 400) {\n            options.onerror && options.onerror();\n        }\n        else {\n            options.onload && options.onload(xhr.response);\n        }\n    };\n    if (options.onerror) {\n        xhr.onerror = options.onerror;\n    }\n    xhr.send(null);\n}\n\nexport default {\n    get: get\n};\n","import Base from './core/Base';\nimport util from './core/util';\nimport colorUtil from './core/color';\nvar parseColor = colorUtil.parseToFloat;\n\nvar programKeyCache = {};\n\nfunction getDefineCode(defines) {\n    var defineKeys = Object.keys(defines);\n    defineKeys.sort();\n    var defineStr = [];\n    // Custom Defines\n    for (var i = 0; i < defineKeys.length; i++) {\n        var key = defineKeys[i];\n        var value = defines[key];\n        if (value === null) {\n            defineStr.push(key);\n        }\n        else{\n            defineStr.push(key + ' ' + value.toString());\n        }\n    }\n    return defineStr.join('\\n');\n}\n\nfunction getProgramKey(vertexDefines, fragmentDefines, enabledTextures) {\n    enabledTextures.sort();\n    var defineStr = [];\n    for (var i = 0; i < enabledTextures.length; i++) {\n        var symbol = enabledTextures[i];\n        defineStr.push(symbol);\n    }\n    var key = getDefineCode(vertexDefines) + '\\n'\n        + getDefineCode(fragmentDefines) + '\\n'\n        + defineStr.join('\\n');\n\n    if (programKeyCache[key]) {\n        return programKeyCache[key];\n    }\n\n    var id = util.genGUID();\n    programKeyCache[key] = id;\n    return id;\n}\n\n/**\n * Material defines the appearance of mesh surface, like `color`, `roughness`, `metalness`, etc.\n * It contains a {@link clay.Shader} and corresponding uniforms.\n *\n * Here is a basic example to create a standard material\n```js\nvar material = new clay.Material({\n    shader: new clay.Shader(\n        clay.Shader.source('clay.vertex'),\n        clay.Shader.source('clay.fragment')\n    )\n});\n```\n * @constructor clay.Material\n * @extends clay.core.Base\n */\nvar Material = Base.extend(function () {\n    return /** @lends clay.Material# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * @type {Object}\n         */\n        // uniforms: null,\n\n        /**\n         * @type {clay.Shader}\n         */\n        // shader: null,\n\n        /**\n         * @type {boolean}\n         */\n        depthTest: true,\n\n        /**\n         * @type {boolean}\n         */\n        depthMask: true,\n\n        /**\n         * @type {boolean}\n         */\n        transparent: false,\n        /**\n         * Blend func is a callback function when the material\n         * have custom blending\n         * The gl context will be the only argument passed in tho the\n         * blend function\n         * Detail of blend function in WebGL:\n         * http://www.khronos.org/registry/gles/specs/2.0/es_full_spec_2.0.25.pdf\n         *\n         * Example :\n         * function(_gl) {\n         *  _gl.blendEquation(_gl.FUNC_ADD);\n         *  _gl.blendFunc(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA);\n         * }\n         */\n        blend: null,\n\n        /**\n         * If update texture status automatically.\n         */\n        autoUpdateTextureStatus: true,\n\n        uniforms: {},\n        vertexDefines: {},\n        fragmentDefines: {},\n        _textureStatus: {},\n\n        // shadowTransparentMap : null\n\n        // PENDING enable the uniform that only used in shader.\n        _enabledUniforms: null,\n    };\n}, function () {\n    if (!this.name) {\n        this.name = 'MATERIAL_' + this.__uid__;\n    }\n\n    if (this.shader) {\n        // Keep status, mainly preset uniforms, vertexDefines and fragmentDefines\n        this.attachShader(this.shader, true);\n    }\n},\n/** @lends clay.Material.prototype */\n{\n    precision: 'highp',\n\n    /**\n     * Set material uniform\n     * @example\n     *  mat.setUniform('color', [1, 1, 1, 1]);\n     * @param {string} symbol\n     * @param {number|array|clay.Texture|ArrayBufferView} value\n     */\n    setUniform: function (symbol, value) {\n        if (value === undefined) {\n            console.warn('Uniform value \"' + symbol + '\" is undefined');\n        }\n        var uniform = this.uniforms[symbol];\n        if (uniform) {\n\n            if (typeof value === 'string') {\n                // Try to parse as a color. Invalid color string will return null.\n                value = parseColor(value) || value;\n            }\n\n            uniform.value = value;\n\n            if (this.autoUpdateTextureStatus && uniform.type === 't') {\n                if (value) {\n                    this.enableTexture(symbol);\n                }\n                else {\n                    this.disableTexture(symbol);\n                }\n            }\n        }\n    },\n\n    /**\n     * @param {Object} obj\n     */\n    setUniforms: function(obj) {\n        for (var key in obj) {\n            var val = obj[key];\n            this.setUniform(key, val);\n        }\n    },\n\n    /**\n     * @param  {string}  symbol\n     * @return {boolean}\n     */\n    isUniformEnabled: function (symbol) {\n        return this._enabledUniforms.indexOf(symbol) >= 0;\n    },\n\n    getEnabledUniforms: function () {\n        return this._enabledUniforms;\n    },\n    getTextureUniforms: function () {\n        return this._textureUniforms;\n    },\n\n    /**\n     * Alias of setUniform and setUniforms\n     * @param {object|string} symbol\n     * @param {number|array|clay.Texture|ArrayBufferView} [value]\n     */\n    set: function (symbol, value) {\n        if (typeof(symbol) === 'object') {\n            for (var key in symbol) {\n                var val = symbol[key];\n                this.setUniform(key, val);\n            }\n        }\n        else {\n            this.setUniform(symbol, value);\n        }\n    },\n    /**\n     * Get uniform value\n     * @param  {string} symbol\n     * @return {number|array|clay.Texture|ArrayBufferView}\n     */\n    get: function (symbol) {\n        var uniform = this.uniforms[symbol];\n        if (uniform) {\n            return uniform.value;\n        }\n    },\n    /**\n     * Attach a shader instance\n     * @param  {clay.Shader} shader\n     * @param  {boolean} keepStatus If try to keep uniform and texture\n     */\n    attachShader: function(shader, keepStatus) {\n        var originalUniforms = this.uniforms;\n\n        // Ignore if uniform can use in shader.\n        this.uniforms = shader.createUniforms();\n        this.shader = shader;\n\n        var uniforms = this.uniforms;\n        this._enabledUniforms = Object.keys(uniforms);\n        // Make sure uniforms are set in same order to avoid texture slot wrong\n        this._enabledUniforms.sort();\n        this._textureUniforms = this._enabledUniforms.filter(function (uniformName) {\n            var type = this.uniforms[uniformName].type;\n            return type === 't' || type === 'tv';\n        }, this);\n\n        var originalVertexDefines = this.vertexDefines;\n        var originalFragmentDefines = this.fragmentDefines;\n\n        this.vertexDefines = util.clone(shader.vertexDefines);\n        this.fragmentDefines = util.clone(shader.fragmentDefines);\n\n        if (keepStatus) {\n            for (var symbol in originalUniforms) {\n                if (uniforms[symbol]) {\n                    uniforms[symbol].value = originalUniforms[symbol].value;\n                }\n            }\n\n            util.defaults(this.vertexDefines, originalVertexDefines);\n            util.defaults(this.fragmentDefines, originalFragmentDefines);\n        }\n\n        var textureStatus = {};\n        for (var key in shader.textures) {\n            textureStatus[key] = {\n                shaderType: shader.textures[key].shaderType,\n                type: shader.textures[key].type,\n                enabled: (keepStatus && this._textureStatus[key]) ? this._textureStatus[key].enabled : false\n            };\n        }\n\n        this._textureStatus = textureStatus;\n\n        this._programKey = '';\n    },\n\n    /**\n     * Clone a new material and keep uniforms, shader will not be cloned\n     * @return {clay.Material}\n     */\n    clone: function () {\n        var material = new this.constructor({\n            name: this.name,\n            shader: this.shader\n        });\n        for (var symbol in this.uniforms) {\n            material.uniforms[symbol].value = this.uniforms[symbol].value;\n        }\n        material.depthTest = this.depthTest;\n        material.depthMask = this.depthMask;\n        material.transparent = this.transparent;\n        material.blend = this.blend;\n\n        material.vertexDefines = util.clone(this.vertexDefines);\n        material.fragmentDefines = util.clone(this.fragmentDefines);\n        material.enableTexture(this.getEnabledTextures());\n        material.precision = this.precision;\n\n        return material;\n    },\n\n    /**\n     * Add a #define macro in shader code\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     * @param  {number} [val]\n     */\n    define: function (shaderType, symbol, val) {\n        var vertexDefines = this.vertexDefines;\n        var fragmentDefines = this.fragmentDefines;\n        if (shaderType !== 'vertex' && shaderType !== 'fragment' && shaderType !== 'both'\n            && arguments.length < 3\n        ) {\n            // shaderType default to be 'both'\n            val = symbol;\n            symbol = shaderType;\n            shaderType = 'both';\n        }\n        val = val != null ? val : null;\n        if (shaderType === 'vertex' || shaderType === 'both') {\n            if (vertexDefines[symbol] !== val) {\n                vertexDefines[symbol] = val;\n                // Mark as dirty\n                this._programKey = '';\n            }\n        }\n        if (shaderType === 'fragment' || shaderType === 'both') {\n            if (fragmentDefines[symbol] !== val) {\n                fragmentDefines[symbol] = val;\n                if (shaderType !== 'both') {\n                    this._programKey = '';\n                }\n            }\n        }\n    },\n\n    /**\n     * Remove a #define macro in shader code\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     */\n    undefine: function (shaderType, symbol) {\n        if (shaderType !== 'vertex' && shaderType !== 'fragment' && shaderType !== 'both'\n            && arguments.length < 2\n        ) {\n            // shaderType default to be 'both'\n            symbol = shaderType;\n            shaderType = 'both';\n        }\n        if (shaderType === 'vertex' || shaderType === 'both') {\n            if (this.isDefined('vertex', symbol)) {\n                delete this.vertexDefines[symbol];\n                // Mark as dirty\n                this._programKey = '';\n            }\n        }\n        if (shaderType === 'fragment' || shaderType === 'both') {\n            if (this.isDefined('fragment', symbol)) {\n                delete this.fragmentDefines[symbol];\n                if (shaderType !== 'both') {\n                    this._programKey = '';\n                }\n            }\n        }\n    },\n\n    /**\n     * If macro is defined in shader.\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     */\n    isDefined: function (shaderType, symbol) {\n        // PENDING hasOwnProperty ?\n        switch (shaderType) {\n            case 'vertex':\n                return this.vertexDefines[symbol] !== undefined;\n            case 'fragment':\n                return this.fragmentDefines[symbol] !== undefined;\n        }\n    },\n    /**\n     * Get macro value defined in shader.\n     * @param  {string} shaderType Can be vertex, fragment or both\n     * @param  {string} symbol\n     */\n    getDefine: function (shaderType, symbol) {\n        switch(shaderType) {\n            case 'vertex':\n                return this.vertexDefines[symbol];\n            case 'fragment':\n                return this.fragmentDefines[symbol];\n        }\n    },\n    /**\n     * Enable a texture, actually it will add a #define macro in the shader code\n     * For example, if texture symbol is diffuseMap, it will add a line `#define DIFFUSEMAP_ENABLED` in the shader code\n     * @param  {string} symbol\n     */\n    enableTexture: function (symbol) {\n        if (Array.isArray(symbol)) {\n            for (var i = 0; i < symbol.length; i++) {\n                this.enableTexture(symbol[i]);\n            }\n            return;\n        }\n\n        var status = this._textureStatus[symbol];\n        if (status) {\n            var isEnabled = status.enabled;\n            if (!isEnabled) {\n                status.enabled = true;\n                this._programKey = '';\n            }\n        }\n    },\n    /**\n     * Enable all textures used in the shader\n     */\n    enableTexturesAll: function () {\n        var textureStatus = this._textureStatus;\n        for (var symbol in textureStatus) {\n            textureStatus[symbol].enabled = true;\n        }\n\n        this._programKey = '';\n    },\n    /**\n     * Disable a texture, it remove a #define macro in the shader\n     * @param  {string} symbol\n     */\n    disableTexture: function (symbol) {\n        if (Array.isArray(symbol)) {\n            for (var i = 0; i < symbol.length; i++) {\n                this.disableTexture(symbol[i]);\n            }\n            return;\n        }\n\n        var status = this._textureStatus[symbol];\n        if (status) {\n            var isDisabled = ! status.enabled;\n            if (!isDisabled) {\n                status.enabled = false;\n                this._programKey = '';\n            }\n        }\n    },\n    /**\n     * Disable all textures used in the shader\n     */\n    disableTexturesAll: function () {\n        var textureStatus = this._textureStatus;\n        for (var symbol in textureStatus) {\n            textureStatus[symbol].enabled = false;\n        }\n\n        this._programKey = '';\n    },\n    /**\n     * If texture of given type is enabled.\n     * @param  {string}  symbol\n     * @return {boolean}\n     */\n    isTextureEnabled: function (symbol) {\n        var textureStatus = this._textureStatus;\n        return !!textureStatus[symbol]\n            && textureStatus[symbol].enabled;\n    },\n\n    /**\n     * Get all enabled textures\n     * @return {string[]}\n     */\n    getEnabledTextures: function () {\n        var enabledTextures = [];\n        var textureStatus = this._textureStatus;\n        for (var symbol in textureStatus) {\n            if (textureStatus[symbol].enabled) {\n                enabledTextures.push(symbol);\n            }\n        }\n        return enabledTextures;\n    },\n\n    /**\n     * Mark defines are updated.\n     */\n    dirtyDefines: function () {\n        this._programKey = '';\n    },\n\n    getProgramKey: function () {\n        if (!this._programKey) {\n            this._programKey = getProgramKey(\n                this.vertexDefines, this.fragmentDefines, this.getEnabledTextures()\n            );\n        }\n        return this._programKey;\n    }\n});\n\nexport default Material;\n","/**\n * @namespace clay.core.color\n */\nimport LRU from '../core/LRU';\n\nvar colorUtil = {};\n\nvar kCSSColorTable = {\n    'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n    'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n    'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n    'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n    'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n    'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n    'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n    'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n    'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n    'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n    'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n    'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n    'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n    'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n    'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n    'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n    'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n    'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n    'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n    'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n    'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n    'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n    'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n    'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n    'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n    'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n    'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n    'gray': [128,128,128,1], 'green': [0,128,0,1],\n    'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n    'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n    'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n    'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n    'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n    'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n    'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n    'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n    'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n    'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n    'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n    'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n    'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n    'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n    'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n    'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n    'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n    'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n    'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n    'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n    'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n    'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n    'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n    'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n    'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n    'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n    'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n    'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n    'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n    'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n    'pink': [255,192,203,1], 'plum': [221,160,221,1],\n    'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n    'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n    'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n    'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n    'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n    'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n    'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n    'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n    'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n    'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n    'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n    'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n    'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n    'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n    'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n};\n\nfunction clampCssByte(i) {  // Clamp to integer 0 .. 255.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {  // int or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssByte(parseFloat(str) / 100 * 255);\n    }\n    return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {  // float or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssFloat(parseFloat(str) / 100);\n    }\n    return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n    if (h < 0) {\n        h += 1;\n    }\n    else if (h > 1) {\n        h -= 1;\n    }\n\n    if (h * 6 < 1) {\n        return m1 + (m2 - m1) * h * 6;\n    }\n    if (h * 2 < 1) {\n        return m2;\n    }\n    if (h * 3 < 2) {\n        return m1 + (m2 - m1) * (2/3 - h) * 6;\n    }\n    return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n    return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n    out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n    return out;\n}\nfunction copyRgba(out, a) {\n    out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n    return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n    // Reuse removed array\n    if (lastRemovedArr) {\n        copyRgba(lastRemovedArr, rgbaArr);\n    }\n    lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n}\n\n/**\n * @name clay.core.color.parse\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n */\ncolorUtil.parse = function (colorStr, rgbaArr) {\n    if (!colorStr) {\n        return;\n    }\n    rgbaArr = rgbaArr || [];\n\n    var cached = colorCache.get(colorStr);\n    if (cached) {\n        return copyRgba(rgbaArr, cached);\n    }\n\n    // colorStr may be not string\n    colorStr = colorStr + '';\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = colorStr.replace(/ /g, '').toLowerCase();\n\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable) {\n        copyRgba(rgbaArr, kCSSColorTable[str]);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n    }\n\n    // #abc and #abc123 syntax.\n    if (str.charAt(0) === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xfff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                (iv & 0xf) | ((iv & 0xf) << 4),\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n        else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xffffff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                (iv & 0xff0000) >> 16,\n                (iv & 0xff00) >> 8,\n                iv & 0xff,\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        return;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;  // To allow case fallthrough.\n        switch (fname) {\n            case 'rgba':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                alpha = parseCssFloat(params.pop()); // jshint ignore:line\n            // Fall through.\n            case 'rgb':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                setRgba(rgbaArr,\n                    parseCssInt(params[0]),\n                    parseCssInt(params[1]),\n                    parseCssInt(params[2]),\n                    alpha\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsla':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                params[3] = parseCssFloat(params[3]);\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsl':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            default:\n                return;\n        }\n    }\n\n    setRgba(rgbaArr, 0, 0, 0, 1);\n    return;\n};\n\ncolorUtil.parseToFloat = function (colorStr, rgbaArr) {\n    rgbaArr = colorUtil.parse(colorStr, rgbaArr);\n    if (!rgbaArr) {\n        return;\n    }\n    rgbaArr[0] /= 255;\n    rgbaArr[1] /= 255;\n    rgbaArr[2] /= 255;\n    return rgbaArr;\n}\n\n/**\n * @name clay.core.color.hsla2rgba\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\nfunction hsla2rgba(hsla, rgba) {\n    var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n    // NOTE(deanm): According to the CSS spec s/l should only be\n    // percentages, but we don't bother and let float or percentage.\n    var s = parseCssFloat(hsla[1]);\n    var l = parseCssFloat(hsla[2]);\n    var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n    var m1 = l * 2 - m2;\n\n    rgba = rgba || [];\n    setRgba(rgba,\n        clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n        1\n    );\n\n    if (hsla.length === 4) {\n        rgba[3] = hsla[3];\n    }\n\n    return rgba;\n}\n\n/**\n * @name clay.core.color.rgba2hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\nfunction rgba2hsla(rgba) {\n    if (!rgba) {\n        return;\n    }\n\n    // RGB from 0 to 255\n    var R = rgba[0] / 255;\n    var G = rgba[1] / 255;\n    var B = rgba[2] / 255;\n\n    var vMin = Math.min(R, G, B); // Min. value of RGB\n    var vMax = Math.max(R, G, B); // Max. value of RGB\n    var delta = vMax - vMin; // Delta RGB value\n\n    var L = (vMax + vMin) / 2;\n    var H;\n    var S;\n    // HSL results from 0 to 1\n    if (delta === 0) {\n        H = 0;\n        S = 0;\n    }\n    else {\n        if (L < 0.5) {\n            S = delta / (vMax + vMin);\n        }\n        else {\n            S = delta / (2 - vMax - vMin);\n        }\n\n        var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n        var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n        var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n        if (R === vMax) {\n            H = deltaB - deltaG;\n        }\n        else if (G === vMax) {\n            H = (1 / 3) + deltaR - deltaB;\n        }\n        else if (B === vMax) {\n            H = (2 / 3) + deltaG - deltaR;\n        }\n\n        if (H < 0) {\n            H += 1;\n        }\n\n        if (H > 1) {\n            H -= 1;\n        }\n    }\n\n    var hsla = [H * 360, S, L];\n\n    if (rgba[3] != null) {\n        hsla.push(rgba[3]);\n    }\n\n    return hsla;\n}\n\n/**\n * @name clay.core.color.lift\n * @param {string} color\n * @param {number} level\n * @return {string}\n */\ncolorUtil.lift = function (color, level) {\n    var colorArr = colorUtil.parse(color);\n    if (colorArr) {\n        for (var i = 0; i < 3; i++) {\n            if (level < 0) {\n                colorArr[i] = colorArr[i] * (1 - level) | 0;\n            }\n            else {\n                colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n            }\n        }\n        return colorUtil.stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n    }\n}\n\n/**\n * @name clay.core.color.toHex\n * @param {string} color\n * @return {string}\n */\ncolorUtil.toHex = function (color) {\n    var colorArr = colorUtil.parse(color);\n    if (colorArr) {\n        return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n    }\n};\n\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @name clay.core.color\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\ncolorUtil.fastLerp = function (normalizedValue, colors, out) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    out = out || [];\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = colors[leftIndex];\n    var rightColor = colors[rightIndex];\n    var dv = value - leftIndex;\n    out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n    out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n    out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n    out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n    return out;\n}\n\ncolorUtil.fastMapToColor = colorUtil.fastLerp;\n\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n */\ncolorUtil.lerp = function (normalizedValue, colors, fullOutput) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = colorUtil.parse(colors[leftIndex]);\n    var rightColor = colorUtil.parse(colors[rightIndex]);\n    var dv = value - leftIndex;\n\n    var color = colorUtil.stringify(\n        [\n            clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n            clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n            clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n            clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n        ],\n        'rgba'\n    );\n\n    return fullOutput\n        ? {\n            color: color,\n            leftIndex: leftIndex,\n            rightIndex: rightIndex,\n            value: value\n        }\n        : color;\n}\n\n/**\n * @deprecated\n */\ncolorUtil.mapToColor = colorUtil.lerp;\n\n/**\n * @name clay.core.color\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n */\ncolorUtil.modifyHSL = function (color, h, s, l) {\n    color = colorUtil.parse(color);\n\n    if (color) {\n        color = rgba2hsla(color);\n        h != null && (color[0] = clampCssAngle(h));\n        s != null && (color[1] = parseCssFloat(s));\n        l != null && (color[2] = parseCssFloat(l));\n\n        return colorUtil.stringify(hsla2rgba(color), 'rgba');\n    }\n}\n\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n */\ncolorUtil.modifyAlpha = function (color, alpha) {\n    color = colorUtil.parse(color);\n\n    if (color && alpha != null) {\n        color[3] = clampCssFloat(alpha);\n        return colorUtil.stringify(color, 'rgba');\n    }\n}\n\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\ncolorUtil.stringify = function (arrColor, type) {\n    if (!arrColor || !arrColor.length) {\n        return;\n    }\n    var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n    if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n        colorStr += ',' + arrColor[3];\n    }\n    return type + '(' + colorStr + ')';\n};\n\n\n\nexport default colorUtil;","import LinkedList from './LinkedList';\n\n/**\n * LRU Cache\n * @constructor\n * @alias clay.core.LRU\n */\nvar LRU = function (maxSize) {\n\n    this._list = new LinkedList();\n\n    this._map = {};\n\n    this._maxSize = maxSize || 10;\n};\n\n/**\n * Set cache max size\n * @param {number} size\n */\nLRU.prototype.setMaxSize = function (size) {\n    this._maxSize = size;\n};\n\n/**\n * @param  {string} key\n * @param  {} value\n */\nLRU.prototype.put = function (key, value) {\n    if (!this._map.hasOwnProperty(key)) {\n        var len = this._list.length();\n        if (len >= this._maxSize && len > 0) {\n            // Remove the least recently used\n            var leastUsedEntry = this._list.head;\n            this._list.remove(leastUsedEntry);\n            delete this._map[leastUsedEntry.key];\n        }\n\n        var entry = this._list.insert(value);\n        entry.key = key;\n        this._map[key] = entry;\n    }\n};\n\n/**\n * @param  {string} key\n * @return {}\n */\nLRU.prototype.get = function (key) {\n    var entry = this._map[key];\n    if (this._map.hasOwnProperty(key)) {\n        // Put the latest used entry in the tail\n        if (entry !== this._list.tail) {\n            this._list.remove(entry);\n            this._list.insertEntry(entry);\n        }\n\n        return entry.value;\n    }\n};\n\n/**\n * @param {string} key\n */\nLRU.prototype.remove = function (key) {\n    var entry = this._map[key];\n    if (typeof(entry) !== 'undefined') {\n        delete this._map[key];\n        this._list.remove(entry);\n    }\n};\n\n/**\n * Clear the cache\n */\nLRU.prototype.clear = function () {\n    this._list.clear();\n    this._map = {};\n};\n\nexport default LRU;\n","/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n * @alias clay.core.LinkedList\n */\nvar LinkedList = function () {\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.head = null;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.tail = null;\n\n    this._length = 0;\n};\n\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {clay.core.LinkedList.Entry}\n */\nLinkedList.prototype.insert = function (val) {\n    var entry = new LinkedList.Entry(val);\n    this.insertEntry(entry);\n    return entry;\n};\n\n/**\n * Insert a new value at idx\n * @param {number} idx\n * @param  {} val\n * @return {clay.core.LinkedList.Entry}\n */\nLinkedList.prototype.insertAt = function (idx, val) {\n    if (idx < 0) {\n        return;\n    }\n    var next = this.head;\n    var cursor = 0;\n    while (next && cursor != idx) {\n        next = next.next;\n        cursor++;\n    }\n    if (next) {\n        var entry = new LinkedList.Entry(val);\n        var prev = next.prev;\n        if (!prev) { //next is head\n            this.head = entry;\n        }\n        else {\n            prev.next = entry;\n            entry.prev = prev;\n        }\n        entry.next = next;\n        next.prev = entry;\n    }\n    else {\n        this.insert(val);\n    }\n};\n\nLinkedList.prototype.insertBeforeEntry = function (val, next) {\n    var entry = new LinkedList.Entry(val);\n    var prev = next.prev;\n    if (!prev) { //next is head\n        this.head = entry;\n    }\n    else {\n        prev.next = entry;\n        entry.prev = prev;\n    }\n    entry.next = next;\n    next.prev = entry;\n\n    this._length++;\n};\n\n/**\n * Insert an entry at the tail\n * @param  {clay.core.LinkedList.Entry} entry\n */\nLinkedList.prototype.insertEntry = function (entry) {\n    if (!this.head) {\n        this.head = this.tail = entry;\n    }\n    else {\n        this.tail.next = entry;\n        entry.prev = this.tail;\n        this.tail = entry;\n    }\n    this._length++;\n};\n\n/**\n * Remove entry.\n * @param  {clay.core.LinkedList.Entry} entry\n */\nLinkedList.prototype.remove = function (entry) {\n    var prev = entry.prev;\n    var next = entry.next;\n    if (prev) {\n        prev.next = next;\n    }\n    else {\n        // Is head\n        this.head = next;\n    }\n    if (next) {\n        next.prev = prev;\n    }\n    else {\n        // Is tail\n        this.tail = prev;\n    }\n    entry.next = entry.prev = null;\n    this._length--;\n};\n\n/**\n * Remove entry at index.\n * @param  {number} idx\n * @return {}\n */\nLinkedList.prototype.removeAt = function (idx) {\n    if (idx < 0) {\n        return;\n    }\n    var curr = this.head;\n    var cursor = 0;\n    while (curr && cursor != idx) {\n        curr = curr.next;\n        cursor++;\n    }\n    if (curr) {\n        this.remove(curr);\n        return curr.value;\n    }\n};\n/**\n * Get head value\n * @return {}\n */\nLinkedList.prototype.getHead = function () {\n    if (this.head) {\n        return this.head.value;\n    }\n};\n/**\n * Get tail value\n * @return {}\n */\nLinkedList.prototype.getTail = function () {\n    if (this.tail) {\n        return this.tail.value;\n    }\n};\n/**\n * Get value at idx\n * @param {number} idx\n * @return {}\n */\nLinkedList.prototype.getAt = function (idx) {\n    if (idx < 0) {\n        return;\n    }\n    var curr = this.head;\n    var cursor = 0;\n    while (curr && cursor != idx) {\n        curr = curr.next;\n        cursor++;\n    }\n    return curr.value;\n};\n\n/**\n * @param  {} value\n * @return {number}\n */\nLinkedList.prototype.indexOf = function (value) {\n    var curr = this.head;\n    var cursor = 0;\n    while (curr) {\n        if (curr.value === value) {\n            return cursor;\n        }\n        curr = curr.next;\n        cursor++;\n    }\n};\n\n/**\n * @return {number}\n */\nLinkedList.prototype.length = function () {\n    return this._length;\n};\n\n/**\n * If list is empty\n */\nLinkedList.prototype.isEmpty = function () {\n    return this._length === 0;\n};\n\n/**\n * @param  {Function} cb\n * @param  {} context\n */\nLinkedList.prototype.forEach = function (cb, context) {\n    var curr = this.head;\n    var idx = 0;\n    var haveContext = typeof(context) != 'undefined';\n    while (curr) {\n        if (haveContext) {\n            cb.call(context, curr.value, idx);\n        }\n        else {\n            cb(curr.value, idx);\n        }\n        curr = curr.next;\n        idx++;\n    }\n};\n\n/**\n * Clear the list\n */\nLinkedList.prototype.clear = function () {\n    this.tail = this.head = null;\n    this._length = 0;\n};\n\n/**\n * @constructor\n * @param {} val\n */\nLinkedList.Entry = function (val) {\n    /**\n     * @type {}\n     */\n    this.value = val;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.next = null;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.prev = null;\n};\n\nexport default LinkedList;\n","import vec2 from '../glmatrix/vec2';\n\n/**\n * @constructor\n * @alias clay.Vector2\n * @param {number} x\n * @param {number} y\n */\nvar Vector2 = function(x, y) {\n\n    x = x || 0;\n    y = y || 0;\n\n    /**\n     * Storage of Vector2, read and write of x, y will change the values in array\n     * All methods also operate on the array instead of x, y components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector2#\n     */\n    this.array = vec2.fromValues(x, y);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector2#\n     */\n    this._dirty = true;\n};\n\nVector2.prototype = {\n\n    constructor: Vector2,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    add: function(b) {\n        vec2.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x and y components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @return {clay.Vector2}\n     */\n    set: function(x, y) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x and y components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector2}\n     */\n    setArray: function(arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector2\n     * @return {clay.Vector2}\n     */\n    clone: function() {\n        return new Vector2(this.x, this.y);\n    },\n\n    /**\n     * Copy x, y from b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    copy: function(b) {\n        vec2.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Cross product of self and b, written to a Vector3 out\n     * @param  {clay.Vector3} out\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    cross: function(out, b) {\n        vec2.cross(out.array, this.array, b.array);\n        out._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    dist: function(b) {\n        return vec2.dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    distance: function(b) {\n        return vec2.distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    div: function(b) {\n        vec2.div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    divide: function(b) {\n        vec2.divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    dot: function(b) {\n        return vec2.dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function() {\n        return vec2.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function() {\n        return vec2.length(this.array);\n    },\n\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector2} a\n     * @param  {clay.Vector2} b\n     * @param  {number}  t\n     * @return {clay.Vector2}\n     */\n    lerp: function(a, b, t) {\n        vec2.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    min: function(b) {\n        vec2.min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    max: function(b) {\n        vec2.max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    mul: function(b) {\n        vec2.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    multiply: function(b) {\n        vec2.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector2}\n     */\n    negate: function() {\n        vec2.negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector2}\n     */\n    normalize: function() {\n        vec2.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector2}\n     */\n    random: function(scale) {\n        vec2.random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector2}\n     */\n    scale: function(s) {\n        vec2.scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector2} b\n     * @param  {number}  scale\n     * @return {clay.Vector2}\n     */\n    scaleAndAdd: function(b, s) {\n        vec2.scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    sqrDist: function(b) {\n        return vec2.sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    squaredDistance: function(b) {\n        return vec2.squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function() {\n        return vec2.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function() {\n        return vec2.squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    sub: function(b) {\n        vec2.sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    subtract: function(b) {\n        vec2.subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix2 m\n     * @param  {clay.Matrix2} m\n     * @return {clay.Vector2}\n     */\n    transformMat2: function(m) {\n        vec2.transformMat2(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix2d m\n     * @param  {clay.Matrix2d} m\n     * @return {clay.Vector2}\n     */\n    transformMat2d: function(m) {\n        vec2.transformMat2d(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix3 m\n     * @param  {clay.Matrix3} m\n     * @return {clay.Vector2}\n     */\n    transformMat3: function(m) {\n        vec2.transformMat3(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector2}\n     */\n    transformMat4: function(m) {\n        vec2.transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\n// Getter and Setter\nif (Object.defineProperty) {\n\n    var proto = Vector2.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector2\n     * @instance\n     */\n    Object.defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector2\n     * @instance\n     */\n    Object.defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.add = function(out, a, b) {\n    vec2.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {number}  x\n * @param  {number}  y\n * @return {clay.Vector2}\n */\nVector2.set = function(out, x, y) {\n    vec2.set(out.array, x, y);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.copy = function(out, b) {\n    vec2.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.cross = function(out, a, b) {\n    vec2.cross(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.dist = function(a, b) {\n    return vec2.distance(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.distance = Vector2.dist;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.div = function(out, a, b) {\n    vec2.divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.divide = Vector2.div;\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.dot = function(a, b) {\n    return vec2.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.len = function(b) {\n    return vec2.length(b.array);\n};\n\n// Vector2.length = Vector2.len;\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @param  {number}  t\n * @return {clay.Vector2}\n */\nVector2.lerp = function(out, a, b, t) {\n    vec2.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.min = function(out, a, b) {\n    vec2.min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.max = function(out, a, b) {\n    vec2.max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.mul = function(out, a, b) {\n    vec2.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.multiply = Vector2.mul;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @return {clay.Vector2}\n */\nVector2.negate = function(out, a) {\n    vec2.negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @return {clay.Vector2}\n */\nVector2.normalize = function(out, a) {\n    vec2.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.random = function(out, scale) {\n    vec2.random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.scale = function(out, a, scale) {\n    vec2.scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.scaleAndAdd = function(out, a, b, scale) {\n    vec2.scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.sqrDist = function(a, b) {\n    return vec2.sqrDist(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.squaredDistance = Vector2.sqrDist;\n\n/**\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.sqrLen = function(a) {\n    return vec2.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.squaredLength = Vector2.sqrLen;\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.sub = function(out, a, b) {\n    vec2.subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.subtract = Vector2.sub;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Matrix2} m\n * @return {clay.Vector2}\n */\nVector2.transformMat2 = function(out, a, m) {\n    vec2.transformMat2(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2}  out\n * @param  {clay.Vector2}  a\n * @param  {clay.Matrix2d} m\n * @return {clay.Vector2}\n */\nVector2.transformMat2d = function(out, a, m) {\n    vec2.transformMat2d(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {Matrix3} m\n * @return {clay.Vector2}\n */\nVector2.transformMat3 = function(out, a, m) {\n    vec2.transformMat3(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector2}\n */\nVector2.transformMat4 = function(out, a, m) {\n    vec2.transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Vector2;\n","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\n\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = GLMAT_RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n\n        return a;\n    };\n})();\n\nexport default vec2;","\nexport var GLMAT_EPSILON = 0.000001;\n\n// Use Array instead of Float32Array. It seems to be much faster and higher precision.\nexport var GLMAT_ARRAY_TYPE = Array;\n// if(!GLMAT_ARRAY_TYPE) {\n//     GLMAT_ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\n// }\n\nexport var GLMAT_RANDOM = Math.random;\n","import GLProgram from './GLProgram';\n\nvar loopRegex = /for\\s*?\\(int\\s*?_idx_\\s*\\=\\s*([\\w-]+)\\;\\s*_idx_\\s*<\\s*([\\w-]+);\\s*_idx_\\s*\\+\\+\\s*\\)\\s*\\{\\{([\\s\\S]+?)(?=\\}\\})\\}\\}/g;\n\nfunction unrollLoop(shaderStr, defines, lightsNumbers) {\n    // Loop unroll from three.js, https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLProgram.js#L175\n    // In some case like shadowMap in loop use 'i' to index value much slower.\n\n    // Loop use _idx_ and increased with _idx_++ will be unrolled\n    // Use {{ }} to match the pair so the if statement will not be affected\n    // Write like following\n    // for (int _idx_ = 0; _idx_ < 4; _idx_++) {{\n    //     vec3 color = texture2D(textures[_idx_], uv).rgb;\n    // }}\n    function replace(match, start, end, snippet) {\n        var unroll = '';\n        // Try to treat as define\n        if (isNaN(start)) {\n            if (start in defines) {\n                start = defines[start];\n            }\n            else {\n                start = lightNumberDefines[start];\n            }\n        }\n        if (isNaN(end)) {\n            if (end in defines) {\n                end = defines[end];\n            }\n            else {\n                end = lightNumberDefines[end];\n            }\n        }\n        // TODO Error checking\n\n        for (var idx = parseInt(start); idx < parseInt(end); idx++) {\n            // PENDING Add scope?\n            unroll += '{'\n                + snippet\n                    .replace(/float\\s*\\(\\s*_idx_\\s*\\)/g, idx.toFixed(1))\n                    .replace(/_idx_/g, idx)\n            + '}';\n        }\n\n        return unroll;\n    }\n\n    var lightNumberDefines = {};\n    for (var lightType in lightsNumbers) {\n        lightNumberDefines[lightType + '_COUNT'] = lightsNumbers[lightType];\n    }\n    return shaderStr.replace(loopRegex, replace);\n}\n\nfunction getDefineCode(defines, lightsNumbers, enabledTextures) {\n    var defineStr = [];\n    if (lightsNumbers) {\n        for (var lightType in lightsNumbers) {\n            var count = lightsNumbers[lightType];\n            if (count > 0) {\n                defineStr.push('#define ' + lightType.toUpperCase() + '_COUNT ' + count);\n            }\n        }\n    }\n    if (enabledTextures) {\n        for (var i = 0; i < enabledTextures.length; i++) {\n            var symbol = enabledTextures[i];\n            defineStr.push('#define ' + symbol.toUpperCase() + '_ENABLED');\n        }\n    }\n    // Custom Defines\n    for (var symbol in defines) {\n        var value = defines[symbol];\n        if (value === null) {\n            defineStr.push('#define ' + symbol);\n        }\n        else{\n            defineStr.push('#define ' + symbol + ' ' + value.toString());\n        }\n    }\n    return defineStr.join('\\n');\n}\n\nfunction getExtensionCode(exts) {\n    // Extension declaration must before all non-preprocessor codes\n    // TODO vertex ? extension enum ?\n    var extensionStr = [];\n    for (var i = 0; i < exts.length; i++) {\n        extensionStr.push('#extension GL_' + exts[i] + ' : enable');\n    }\n    return extensionStr.join('\\n');\n}\n\nfunction getPrecisionCode(precision) {\n    return ['precision', precision, 'float'].join(' ') + ';\\n'\n        + ['precision', precision, 'int'].join(' ') + ';\\n'\n        // depth texture may have precision problem on iOS device.\n        + ['precision', precision, 'sampler2D'].join(' ') + ';\\n';\n}\n\nfunction ProgramManager(renderer) {\n    this._renderer = renderer;\n    this._cache = {};\n}\n\nProgramManager.prototype.getProgram = function (renderable, material, scene) {\n    var cache = this._cache;\n\n    var isSkinnedMesh = renderable.isSkinnedMesh && renderable.isSkinnedMesh();\n    var isInstancedMesh = renderable.isInstancedMesh && renderable.isInstancedMesh();\n    var key = 's' + material.shader.shaderID + 'm' + material.getProgramKey();\n    if (scene) {\n        key += 'se' + scene.getProgramKey(renderable.lightGroup);\n    }\n    if (isSkinnedMesh) {\n        key += ',sk' + renderable.joints.length;\n    }\n    if (isInstancedMesh) {\n        key += ',is';\n    }\n    var program = cache[key];\n\n    if (program) {\n        return program;\n    }\n\n    var lightsNumbers = scene ? scene.getLightsNumbers(renderable.lightGroup) : {};\n    var renderer = this._renderer;\n    var _gl = renderer.gl;\n    var enabledTextures = material.getEnabledTextures();\n    var extraDefineCode = '';\n    if (isSkinnedMesh) {\n        var skinDefines = {\n            SKINNING: null,\n            JOINT_COUNT: renderable.joints.length\n        };\n        if (renderable.joints.length > renderer.getMaxJointNumber()) {\n            skinDefines.USE_SKIN_MATRICES_TEXTURE = null;\n        }\n        // TODO Add skinning code?\n        extraDefineCode += '\\n' + getDefineCode(skinDefines) + '\\n';\n    }\n    if (isInstancedMesh) {\n        extraDefineCode += '\\n#define INSTANCING\\n';\n    }\n    // TODO Optimize key generation\n    // VERTEX\n    var vertexDefineStr = extraDefineCode + getDefineCode(material.vertexDefines, lightsNumbers, enabledTextures);\n    // FRAGMENT\n    var fragmentDefineStr = extraDefineCode + getDefineCode(material.fragmentDefines, lightsNumbers, enabledTextures);\n\n    var vertexCode = vertexDefineStr + '\\n' + material.shader.vertex;\n\n    var extensions = [\n        'OES_standard_derivatives',\n        'EXT_shader_texture_lod'\n    ].filter(function (ext) {\n        return renderer.getGLExtension(ext) != null;\n    });\n\n    if (extensions.indexOf('EXT_shader_texture_lod') >= 0) {\n        fragmentDefineStr += '\\n#define SUPPORT_TEXTURE_LOD';\n    }\n    if (extensions.indexOf('OES_standard_derivatives') >= 0) {\n        fragmentDefineStr += '\\n#define SUPPORT_STANDARD_DERIVATIVES';\n    }\n\n    var fragmentCode = getExtensionCode(extensions) + '\\n'\n        + getPrecisionCode(material.precision) + '\\n'\n        + fragmentDefineStr + '\\n'\n        + material.shader.fragment;\n\n    var finalVertexCode = unrollLoop(vertexCode, material.vertexDefines, lightsNumbers);\n    var finalFragmentCode = unrollLoop(fragmentCode, material.fragmentDefines, lightsNumbers);\n\n    var program = new GLProgram();\n    program.uniformSemantics = material.shader.uniformSemantics;\n    program.attributes = material.shader.attributes;\n    var errorMsg = program.buildProgram(_gl, material.shader, finalVertexCode, finalFragmentCode);\n    program.__error = errorMsg;\n\n    cache[key] = program;\n\n    return program;\n};\n\nexport default ProgramManager;","import vendor from '../core/vendor';\nimport Base from '../core/Base';\n\nvar SHADER_STATE_TO_ENABLE = 1;\nvar SHADER_STATE_KEEP_ENABLE = 2;\nvar SHADER_STATE_PENDING = 3;\n\n// Enable attribute operation is global to all programs\n// Here saved the list of all enabled attribute index\n// http://www.mjbshaw.com/2013/03/webgl-fixing-invalidoperation.html\nvar enabledAttributeList = {};\n\n// some util functions\nfunction addLineNumbers(string) {\n    var chunks = string.split('\\n');\n    for (var i = 0, il = chunks.length; i < il; i ++) {\n        // Chrome reports shader errors on lines\n        // starting counting from 1\n        chunks[i] = (i + 1) + ': ' + chunks[i];\n    }\n    return chunks.join('\\n');\n}\n\n// Return true or error msg if error happened\nfunction checkShaderErrorMsg(_gl, shader, shaderString) {\n    if (!_gl.getShaderParameter(shader, _gl.COMPILE_STATUS)) {\n        return [_gl.getShaderInfoLog(shader), addLineNumbers(shaderString)].join('\\n');\n    }\n}\n\nvar tmpFloat32Array16 = new vendor.Float32Array(16);\n\nvar GLProgram = Base.extend({\n\n    uniformSemantics: {},\n    attributes: {}\n\n}, function () {\n    this._locations = {};\n\n    this._textureSlot = 0;\n\n    this._program = null;\n}, {\n\n    bind: function (renderer) {\n        this._textureSlot = 0;\n        renderer.gl.useProgram(this._program);\n    },\n\n    hasUniform: function (symbol) {\n        var location = this._locations[symbol];\n        return location !== null && location !== undefined;\n    },\n\n    useTextureSlot: function (renderer, texture, slot) {\n        if (texture) {\n            renderer.gl.activeTexture(renderer.gl.TEXTURE0 + slot);\n            // Maybe texture is not loaded yet;\n            if (texture.isRenderable()) {\n                texture.bind(renderer);\n            }\n            else {\n                // Bind texture to null\n                texture.unbind(renderer);\n            }\n        }\n    },\n\n    currentTextureSlot: function () {\n        return this._textureSlot;\n    },\n\n    resetTextureSlot: function (slot) {\n        this._textureSlot = slot || 0;\n    },\n\n    takeCurrentTextureSlot: function (renderer, texture) {\n        var textureSlot = this._textureSlot;\n\n        this.useTextureSlot(renderer, texture, textureSlot);\n\n        this._textureSlot++;\n\n        return textureSlot;\n    },\n\n    setUniform: function (_gl, type, symbol, value) {\n        var locationMap = this._locations;\n        var location = locationMap[symbol];\n        // Uniform is not existed in the shader\n        if (location === null || location === undefined) {\n            return false;\n        }\n\n        switch (type) {\n            case 'm4':\n                if (!(value instanceof Float32Array)) {\n                    // Use Float32Array is much faster than array when uniformMatrix4fv.\n                    for (var i = 0; i < value.length; i++) {\n                        tmpFloat32Array16[i] = value[i];\n                    }\n                    value = tmpFloat32Array16;\n                }\n                _gl.uniformMatrix4fv(location, false, value);\n                break;\n            case '2i':\n                _gl.uniform2i(location, value[0], value[1]);\n                break;\n            case '2f':\n                _gl.uniform2f(location, value[0], value[1]);\n                break;\n            case '3i':\n                _gl.uniform3i(location, value[0], value[1], value[2]);\n                break;\n            case '3f':\n                _gl.uniform3f(location, value[0], value[1], value[2]);\n                break;\n            case '4i':\n                _gl.uniform4i(location, value[0], value[1], value[2], value[3]);\n                break;\n            case '4f':\n                _gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n                break;\n            case '1i':\n                _gl.uniform1i(location, value);\n                break;\n            case '1f':\n                _gl.uniform1f(location, value);\n                break;\n            case '1fv':\n                _gl.uniform1fv(location, value);\n                break;\n            case '1iv':\n                _gl.uniform1iv(location, value);\n                break;\n            case '2iv':\n                _gl.uniform2iv(location, value);\n                break;\n            case '2fv':\n                _gl.uniform2fv(location, value);\n                break;\n            case '3iv':\n                _gl.uniform3iv(location, value);\n                break;\n            case '3fv':\n                _gl.uniform3fv(location, value);\n                break;\n            case '4iv':\n                _gl.uniform4iv(location, value);\n                break;\n            case '4fv':\n                _gl.uniform4fv(location, value);\n                break;\n            case 'm2':\n            case 'm2v':\n                _gl.uniformMatrix2fv(location, false, value);\n                break;\n            case 'm3':\n            case 'm3v':\n                _gl.uniformMatrix3fv(location, false, value);\n                break;\n            case 'm4v':\n                // Raw value\n                if (Array.isArray(value) && Array.isArray(value[0])) {\n                    var array = new vendor.Float32Array(value.length * 16);\n                    var cursor = 0;\n                    for (var i = 0; i < value.length; i++) {\n                        var item = value[i];\n                        for (var j = 0; j < 16; j++) {\n                            array[cursor++] = item[j];\n                        }\n                    }\n                    _gl.uniformMatrix4fv(location, false, array);\n                }\n                else {   // ArrayBufferView\n                    _gl.uniformMatrix4fv(location, false, value);\n                }\n                break;\n        }\n        return true;\n    },\n\n    setUniformOfSemantic: function (_gl, semantic, val) {\n        var semanticInfo = this.uniformSemantics[semantic];\n        if (semanticInfo) {\n            return this.setUniform(_gl, semanticInfo.type, semanticInfo.symbol, val);\n        }\n        return false;\n    },\n\n    // Used for creating VAO\n    // Enable the attributes passed in and disable the rest\n    // Example Usage:\n    // enableAttributes(renderer, [\"position\", \"texcoords\"])\n    enableAttributes: function (renderer, attribList, vao) {\n        var _gl = renderer.gl;\n        var program = this._program;\n\n        var locationMap = this._locations;\n\n        var enabledAttributeListInContext;\n        if (vao) {\n            enabledAttributeListInContext = vao.__enabledAttributeList;\n        }\n        else {\n            enabledAttributeListInContext = enabledAttributeList[renderer.__uid__];\n        }\n        if (!enabledAttributeListInContext) {\n            // In vertex array object context\n            // PENDING Each vao object needs to enable attributes again?\n            if (vao) {\n                enabledAttributeListInContext\n                    = vao.__enabledAttributeList\n                    = [];\n            }\n            else {\n                enabledAttributeListInContext\n                    = enabledAttributeList[renderer.__uid__]\n                    = [];\n            }\n        }\n        var locationList = [];\n        for (var i = 0; i < attribList.length; i++) {\n            var symbol = attribList[i];\n            if (!this.attributes[symbol]) {\n                locationList[i] = -1;\n                continue;\n            }\n            var location = locationMap[symbol];\n            if (location == null) {\n                location = _gl.getAttribLocation(program, symbol);\n                // Attrib location is a number from 0 to ...\n                if (location === -1) {\n                    locationList[i] = -1;\n                    continue;\n                }\n                locationMap[symbol] = location;\n            }\n            locationList[i] = location;\n\n            if (!enabledAttributeListInContext[location]) {\n                enabledAttributeListInContext[location] = SHADER_STATE_TO_ENABLE;\n            }\n            else {\n                enabledAttributeListInContext[location] = SHADER_STATE_KEEP_ENABLE;\n            }\n        }\n\n        for (var i = 0; i < enabledAttributeListInContext.length; i++) {\n            switch(enabledAttributeListInContext[i]){\n                case SHADER_STATE_TO_ENABLE:\n                    _gl.enableVertexAttribArray(i);\n                    enabledAttributeListInContext[i] = SHADER_STATE_PENDING;\n                    break;\n                case SHADER_STATE_KEEP_ENABLE:\n                    enabledAttributeListInContext[i] = SHADER_STATE_PENDING;\n                    break;\n                // Expired\n                case SHADER_STATE_PENDING:\n                    _gl.disableVertexAttribArray(i);\n                    enabledAttributeListInContext[i] = 0;\n                    break;\n            }\n        }\n\n        return locationList;\n    },\n\n    getAttribLocation: function (_gl, symbol) {\n        var locationMap = this._locations;\n\n        var location = locationMap[symbol];\n        if (location == null) {\n            location = _gl.getAttribLocation(this._program, symbol);\n            locationMap[symbol] = location;\n        }\n\n        return location;\n    },\n\n    buildProgram: function (_gl, shader, vertexShaderCode, fragmentShaderCode) {\n        var vertexShader = _gl.createShader(_gl.VERTEX_SHADER);\n        var program = _gl.createProgram();\n\n        _gl.shaderSource(vertexShader, vertexShaderCode);\n        _gl.compileShader(vertexShader);\n\n        var fragmentShader = _gl.createShader(_gl.FRAGMENT_SHADER);\n        _gl.shaderSource(fragmentShader, fragmentShaderCode);\n        _gl.compileShader(fragmentShader);\n\n        var msg = checkShaderErrorMsg(_gl, vertexShader, vertexShaderCode);\n        if (msg) {\n            return msg;\n        }\n        msg = checkShaderErrorMsg(_gl, fragmentShader, fragmentShaderCode);\n        if (msg) {\n            return msg;\n        }\n\n        _gl.attachShader(program, vertexShader);\n        _gl.attachShader(program, fragmentShader);\n        // Force the position bind to location 0;\n        if (shader.attributeSemantics['POSITION']) {\n            _gl.bindAttribLocation(program, 0, shader.attributeSemantics['POSITION'].symbol);\n        }\n        else {\n            // Else choose an attribute and bind to location 0;\n            var keys = Object.keys(this.attributes);\n            _gl.bindAttribLocation(program, 0, keys[0]);\n        }\n\n        _gl.linkProgram(program);\n\n        _gl.deleteShader(vertexShader);\n        _gl.deleteShader(fragmentShader);\n\n        this._program = program;\n\n        // Save code.\n        this.vertexCode = vertexShaderCode;\n        this.fragmentCode = fragmentShaderCode;\n\n        if (!_gl.getProgramParameter(program, _gl.LINK_STATUS)) {\n            return 'Could not link program\\n' + _gl.getProgramInfoLog(program);\n        }\n\n        // Cache uniform locations\n        for (var i = 0; i < shader.uniforms.length; i++) {\n            var uniformSymbol = shader.uniforms[i];\n            this._locations[uniformSymbol] = _gl.getUniformLocation(program, uniformSymbol);\n        }\n\n    }\n});\n\nexport default GLProgram;","/**\n * Mainly do the parse and compile of shader string\n * Support shader code chunk import and export\n * Support shader semantics\n * http://www.nvidia.com/object/using_sas.html\n * https://github.com/KhronosGroup/collada2json/issues/45\n */\nimport util from './core/util';\nimport vendor from './core/vendor';\n\nvar uniformRegex = /uniform\\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\\s+([\\s\\S]*?);/g;\nvar attributeRegex = /attribute\\s+(float|int|vec2|vec3|vec4)\\s+([\\s\\S]*?);/g;\n// Only parse number define.\nvar defineRegex = /#define\\s+(\\w+)?(\\s+[\\d-.]+)?\\s*;?\\s*\\n/g;\n\nvar uniformTypeMap = {\n    'bool': '1i',\n    'int': '1i',\n    'sampler2D': 't',\n    'samplerCube': 't',\n    'float': '1f',\n    'vec2': '2f',\n    'vec3': '3f',\n    'vec4': '4f',\n    'ivec2': '2i',\n    'ivec3': '3i',\n    'ivec4': '4i',\n    'mat2': 'm2',\n    'mat3': 'm3',\n    'mat4': 'm4'\n};\n\nfunction createZeroArray(len) {\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr[i] = 0;\n    }\n    return arr;\n}\n\nvar uniformValueConstructor = {\n    'bool': function () { return true; },\n    'int': function () { return 0; },\n    'float': function () { return 0; },\n    'sampler2D': function () { return null; },\n    'samplerCube': function () { return null; },\n\n    'vec2': function () { return createZeroArray(2); },\n    'vec3': function () { return createZeroArray(3); },\n    'vec4': function () { return createZeroArray(4); },\n\n    'ivec2': function () { return createZeroArray(2); },\n    'ivec3': function () { return createZeroArray(3); },\n    'ivec4': function () { return createZeroArray(4); },\n\n    'mat2': function () { return createZeroArray(4); },\n    'mat3': function () { return createZeroArray(9); },\n    'mat4': function () { return createZeroArray(16); },\n\n    'array': function () { return []; }\n};\n\nvar attributeSemantics = [\n    'POSITION',\n    'NORMAL',\n    'BINORMAL',\n    'TANGENT',\n    'TEXCOORD',\n    'TEXCOORD_0',\n    'TEXCOORD_1',\n    'COLOR',\n    // Skinning\n    // https://github.com/KhronosGroup/glTF/blob/master/specification/README.md#semantics\n    'JOINT',\n    'WEIGHT'\n];\nvar uniformSemantics = [\n    'SKIN_MATRIX',\n    // Information about viewport\n    'VIEWPORT_SIZE',\n    'VIEWPORT',\n    'DEVICEPIXELRATIO',\n    // Window size for window relative coordinate\n    // https://www.opengl.org/sdk/docs/man/html/gl_FragCoord.xhtml\n    'WINDOW_SIZE',\n    // Infomation about camera\n    'NEAR',\n    'FAR',\n    // Time\n    'TIME'\n];\nvar matrixSemantics = [\n    'WORLD',\n    'VIEW',\n    'PROJECTION',\n    'WORLDVIEW',\n    'VIEWPROJECTION',\n    'WORLDVIEWPROJECTION',\n    'WORLDINVERSE',\n    'VIEWINVERSE',\n    'PROJECTIONINVERSE',\n    'WORLDVIEWINVERSE',\n    'VIEWPROJECTIONINVERSE',\n    'WORLDVIEWPROJECTIONINVERSE',\n    'WORLDTRANSPOSE',\n    'VIEWTRANSPOSE',\n    'PROJECTIONTRANSPOSE',\n    'WORLDVIEWTRANSPOSE',\n    'VIEWPROJECTIONTRANSPOSE',\n    'WORLDVIEWPROJECTIONTRANSPOSE',\n    'WORLDINVERSETRANSPOSE',\n    'VIEWINVERSETRANSPOSE',\n    'PROJECTIONINVERSETRANSPOSE',\n    'WORLDVIEWINVERSETRANSPOSE',\n    'VIEWPROJECTIONINVERSETRANSPOSE',\n    'WORLDVIEWPROJECTIONINVERSETRANSPOSE'\n];\n\nvar attributeSizeMap = {\n    // WebGL does not support integer attributes\n    'vec4': 4,\n    'vec3': 3,\n    'vec2': 2,\n    'float': 1\n};\n\n\nvar shaderIDCache = {};\nvar shaderCodeCache = {};\n\nfunction getShaderID(vertex, fragment) {\n    var key = 'vertex:' + vertex + 'fragment:' + fragment;\n    if (shaderIDCache[key]) {\n        return shaderIDCache[key];\n    }\n    var id = util.genGUID();\n    shaderIDCache[key] = id;\n\n    shaderCodeCache[id] = {\n        vertex: vertex,\n        fragment: fragment\n    };\n\n    return id;\n}\n\nfunction removeComment(code) {\n    return code.replace(/[ \\t]*\\/\\/.*\\n/g, '' )   // remove //\n        .replace(/[ \\t]*\\/\\*[\\s\\S]*?\\*\\//g, '' ); // remove /* */\n}\n\nfunction logSyntaxError() {\n    console.error('Wrong uniform/attributes syntax');\n}\n\nfunction parseDeclarations(type, line) {\n    var speratorsRegexp = /[,=\\(\\):]/;\n    var tokens = line\n        // Convert `symbol: [1,2,3]` to `symbol: vec3(1,2,3)`\n        .replace(/:\\s*\\[\\s*(.*)\\s*\\]/g, '=' + type + '($1)')\n        .replace(/\\s+/g, '')\n        .split(/(?=[,=\\(\\):])/g);\n\n    var newTokens = [];\n    for (var i = 0; i < tokens.length; i++) {\n        if (tokens[i].match(speratorsRegexp)) {\n            newTokens.push(\n                tokens[i].charAt(0),\n                tokens[i].slice(1)\n            );\n        }\n        else {\n            newTokens.push(tokens[i]);\n        }\n    }\n    tokens = newTokens;\n\n    var TYPE_SYMBOL = 0;\n    var TYPE_ASSIGN = 1;\n    var TYPE_VEC = 2;\n    var TYPE_ARR = 3;\n    var TYPE_SEMANTIC = 4;\n    var TYPE_NORMAL = 5;\n\n    var opType = TYPE_SYMBOL;\n    var declarations = {};\n    var declarationValue = null;\n    var currentDeclaration;\n\n    addSymbol(tokens[0]);\n\n    function addSymbol(symbol) {\n        if (!symbol) {\n            logSyntaxError();\n        }\n        var arrResult = symbol.match(/\\[(.*?)\\]/);\n        currentDeclaration = symbol.replace(/\\[(.*?)\\]/, '');\n        declarations[currentDeclaration] = {};\n        if (arrResult) {\n            declarations[currentDeclaration].isArray = true;\n            declarations[currentDeclaration].arraySize = arrResult[1];\n        }\n    }\n\n    for (var i = 1; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (!token) {   // Empty token;\n            continue;\n        }\n        if (token === '=') {\n            if (opType !== TYPE_SYMBOL\n            && opType !== TYPE_ARR) {\n                logSyntaxError();\n                break;\n            }\n            opType = TYPE_ASSIGN;\n\n            continue;\n        }\n        else if (token === ':') {\n            opType = TYPE_SEMANTIC;\n\n            continue;\n        }\n        else if (token === ',') {\n            if (opType === TYPE_VEC) {\n                if (!(declarationValue instanceof Array)) {\n                    logSyntaxError();\n                    break;\n                }\n                declarationValue.push(+tokens[++i]);\n            }\n            else {\n                opType = TYPE_NORMAL;\n            }\n\n            continue;\n        }\n        else if (token === ')') {\n            declarations[currentDeclaration].value = new vendor.Float32Array(declarationValue);\n            declarationValue = null;\n            opType = TYPE_NORMAL;\n            continue;\n        }\n        else if (token === '(') {\n            if (opType !== TYPE_VEC) {\n                logSyntaxError();\n                break;\n            }\n            if (!(declarationValue instanceof Array)) {\n                logSyntaxError();\n                break;\n            }\n            declarationValue.push(+tokens[++i]);\n            continue;\n        }\n        else if (token.indexOf('vec') >= 0) {\n            if (opType !== TYPE_ASSIGN\n            // Compatitable with old syntax `symbol: [1,2,3]`\n            && opType !== TYPE_SEMANTIC) {\n                logSyntaxError();\n                break;\n            }\n            opType = TYPE_VEC;\n            declarationValue = [];\n            continue;\n        }\n        else if (opType === TYPE_ASSIGN) {\n            if (type === 'bool') {\n                declarations[currentDeclaration].value = token === 'true';\n            }\n            else {\n                declarations[currentDeclaration].value = parseFloat(token);\n            }\n            declarationValue = null;\n            continue;\n        }\n        else if (opType === TYPE_SEMANTIC) {\n            var semantic = token;\n            if (attributeSemantics.indexOf(semantic) >= 0\n                || uniformSemantics.indexOf(semantic) >= 0\n                || matrixSemantics.indexOf(semantic) >= 0\n            ) {\n                declarations[currentDeclaration].semantic = semantic;\n            }\n            else if (semantic === 'ignore' || semantic === 'unconfigurable') {\n                declarations[currentDeclaration].ignore = true;\n            }\n            else {\n                // Try to parse as a default tvalue.\n                if (type === 'bool') {\n                    declarations[currentDeclaration].value = semantic === 'true';\n                }\n                else {\n                    declarations[currentDeclaration].value = parseFloat(semantic);\n                }\n            }\n            continue;\n        }\n\n        // treat as symbol.\n        addSymbol(token);\n        opType = TYPE_SYMBOL;\n    }\n\n    return declarations;\n}\n\n\n/**\n * @constructor\n * @extends clay.core.Base\n * @alias clay.Shader\n * @param {string} vertex\n * @param {string} fragment\n * @example\n * // Create a phong shader\n * var shader = new clay.Shader(\n *      clay.Shader.source('clay.standard.vertex'),\n *      clay.Shader.source('clay.standard.fragment')\n * );\n */\nfunction Shader(vertex, fragment) {\n    // First argument can be { vertex, fragment }\n    if (typeof vertex === 'object') {\n        fragment = vertex.fragment;\n        vertex = vertex.vertex;\n    }\n\n    vertex = removeComment(vertex);\n    fragment = removeComment(fragment);\n\n    this._shaderID = getShaderID(vertex, fragment);\n\n    this._vertexCode = Shader.parseImport(vertex);\n    this._fragmentCode = Shader.parseImport(fragment);\n\n    /**\n     * @readOnly\n     */\n    this.attributeSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.matrixSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.uniformSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.matrixSemanticKeys = [];\n    /**\n     * @readOnly\n     */\n    this.uniformTemplates = {};\n    /**\n     * @readOnly\n     */\n    this.attributes = {};\n    /**\n     * @readOnly\n     */\n    this.textures = {};\n    /**\n     * @readOnly\n     */\n    this.vertexDefines = {};\n    /**\n     * @readOnly\n     */\n    this.fragmentDefines = {};\n\n    this._parseAttributes();\n    this._parseUniforms();\n    this._parseDefines();\n}\n\nShader.prototype = {\n\n    constructor: Shader,\n\n    // Create a new uniform instance for material\n    createUniforms: function () {\n        var uniforms = {};\n\n        for (var symbol in this.uniformTemplates){\n            var uniformTpl = this.uniformTemplates[symbol];\n            uniforms[symbol] = {\n                type: uniformTpl.type,\n                value: uniformTpl.value()\n            };\n        }\n\n        return uniforms;\n    },\n\n    _parseImport: function () {\n        this._vertexCode = Shader.parseImport(this.vertex);\n        this._fragmentCode = Shader.parseImport(this.fragment);\n    },\n\n    _addSemanticUniform: function (symbol, uniformType, semantic) {\n        // This case is only for SKIN_MATRIX\n        // TODO\n        if (attributeSemantics.indexOf(semantic) >= 0) {\n            this.attributeSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType\n            };\n        }\n        else if (matrixSemantics.indexOf(semantic) >= 0) {\n            var isTranspose = false;\n            var semanticNoTranspose = semantic;\n            if (semantic.match(/TRANSPOSE$/)) {\n                isTranspose = true;\n                semanticNoTranspose = semantic.slice(0, -9);\n            }\n            this.matrixSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType,\n                isTranspose: isTranspose,\n                semanticNoTranspose: semanticNoTranspose\n            };\n        }\n        else if (uniformSemantics.indexOf(semantic) >= 0) {\n            this.uniformSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType\n            };\n        }\n    },\n\n    _addMaterialUniform: function (symbol, type, uniformType, defaultValueFunc, isArray, materialUniforms) {\n        materialUniforms[symbol] = {\n            type: uniformType,\n            value: isArray ? uniformValueConstructor['array'] : (defaultValueFunc || uniformValueConstructor[type]),\n            semantic: null\n        };\n    },\n\n    _parseUniforms: function () {\n        var uniforms = {};\n        var self = this;\n        var shaderType = 'vertex';\n        this._uniformList = [];\n\n        this._vertexCode = this._vertexCode.replace(uniformRegex, _uniformParser);\n        shaderType = 'fragment';\n        this._fragmentCode = this._fragmentCode.replace(uniformRegex, _uniformParser);\n\n        self.matrixSemanticKeys = Object.keys(this.matrixSemantics);\n\n        function makeDefaultValueFunc(value) {\n            return value != null ? function () { return value; } : null;\n        }\n\n        function _uniformParser(str, type, content) {\n            var declaredUniforms = parseDeclarations(type, content);\n            var uniformMainStr = [];\n            for (var symbol in declaredUniforms) {\n\n                var uniformInfo = declaredUniforms[symbol];\n                var semantic = uniformInfo.semantic;\n                var tmpStr = symbol;\n                var uniformType = uniformTypeMap[type];\n                var defaultValueFunc = makeDefaultValueFunc(declaredUniforms[symbol].value);\n                if (declaredUniforms[symbol].isArray) {\n                    tmpStr += '[' + declaredUniforms[symbol].arraySize + ']';\n                    uniformType += 'v';\n                }\n\n                uniformMainStr.push(tmpStr);\n\n                self._uniformList.push(symbol);\n\n                if (!uniformInfo.ignore) {\n                    if (type === 'sampler2D' || type === 'samplerCube') {\n                        // Texture is default disabled\n                        self.textures[symbol] = {\n                            shaderType: shaderType,\n                            type: type\n                        };\n                    }\n\n                    if (semantic) {\n                        // TODO Should not declare multiple symbols if have semantic.\n                        self._addSemanticUniform(symbol, uniformType, semantic);\n                    }\n                    else {\n                        self._addMaterialUniform(\n                            symbol, type, uniformType, defaultValueFunc,\n                            declaredUniforms[symbol].isArray, uniforms\n                        );\n                    }\n                }\n            }\n            return uniformMainStr.length > 0\n                ? 'uniform ' + type + ' ' + uniformMainStr.join(',') + ';\\n' : '';\n        }\n\n        this.uniformTemplates = uniforms;\n    },\n\n    _parseAttributes: function () {\n        var attributes = {};\n        var self = this;\n        this._vertexCode = this._vertexCode.replace(attributeRegex, _attributeParser);\n\n        function _attributeParser(str, type, content) {\n            var declaredAttributes = parseDeclarations(type, content);\n\n            var size = attributeSizeMap[type] || 1;\n            var attributeMainStr = [];\n            for (var symbol in declaredAttributes) {\n                var semantic = declaredAttributes[symbol].semantic;\n                attributes[symbol] = {\n                    // TODO Can only be float\n                    type: 'float',\n                    size: size,\n                    semantic: semantic || null\n                };\n                // TODO Should not declare multiple symbols if have semantic.\n                if (semantic) {\n                    if (attributeSemantics.indexOf(semantic) < 0) {\n                        throw new Error('Unkown semantic \"' + semantic + '\"');\n                    }\n                    else {\n                        self.attributeSemantics[semantic] = {\n                            symbol: symbol,\n                            type: type\n                        };\n                    }\n                }\n                attributeMainStr.push(symbol);\n            }\n\n            return 'attribute ' + type + ' ' + attributeMainStr.join(',') + ';\\n';\n        }\n\n        this.attributes = attributes;\n    },\n\n    _parseDefines: function () {\n        var self = this;\n        var shaderType = 'vertex';\n        this._vertexCode = this._vertexCode.replace(defineRegex, _defineParser);\n        shaderType = 'fragment';\n        this._fragmentCode = this._fragmentCode.replace(defineRegex, _defineParser);\n\n        function _defineParser(str, symbol, value) {\n            var defines = shaderType === 'vertex' ? self.vertexDefines : self.fragmentDefines;\n            if (!defines[symbol]) { // Haven't been defined by user\n                if (value === 'false') {\n                    defines[symbol] = false;\n                }\n                else if (value === 'true') {\n                    defines[symbol] = true;\n                }\n                else {\n                    defines[symbol] = value\n                        // If can parse to float\n                        ? (isNaN(parseFloat(value)) ? value.trim() : parseFloat(value))\n                        : null;\n                }\n            }\n            return '';\n        }\n    },\n\n    /**\n     * Clone a new shader\n     * @return {clay.Shader}\n     */\n    clone: function () {\n        var code = shaderCodeCache[this._shaderID];\n        var shader = new Shader(code.vertex, code.fragment);\n        return shader;\n    }\n};\n\nif (Object.defineProperty) {\n    Object.defineProperty(Shader.prototype, 'shaderID', {\n        get: function () {\n            return this._shaderID;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'vertex', {\n        get: function () {\n            return this._vertexCode;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'fragment', {\n        get: function () {\n            return this._fragmentCode;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'uniforms', {\n        get: function () {\n            return this._uniformList;\n        }\n    });\n}\n\nvar importRegex = /(@import)\\s*([0-9a-zA-Z_\\-\\.]*)/g;\nShader.parseImport = function (shaderStr) {\n    shaderStr = shaderStr.replace(importRegex, function (str, importSymbol, importName) {\n        var str = Shader.source(importName);\n        if (str) {\n            // Recursively parse\n            return Shader.parseImport(str);\n        }\n        else {\n            console.error('Shader chunk \"' + importName + '\" not existed in library');\n            return '';\n        }\n    });\n    return shaderStr;\n};\n\nvar exportRegex = /(@export)\\s*([0-9a-zA-Z_\\-\\.]*)\\s*\\n([\\s\\S]*?)@end/g;\n\n/**\n * Import shader source\n * @param  {string} shaderStr\n * @memberOf clay.Shader\n */\nShader['import'] = function (shaderStr) {\n    shaderStr.replace(exportRegex, function (str, exportSymbol, exportName, code) {\n        var code = code.replace(/(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+\\x24)/g, '');\n        if (code) {\n            var parts = exportName.split('.');\n            var obj = Shader.codes;\n            var i = 0;\n            var key;\n            while (i < parts.length - 1) {\n                key = parts[i++];\n                if (!obj[key]) {\n                    obj[key] = {};\n                }\n                obj = obj[key];\n            }\n            key = parts[i];\n            obj[key] = code;\n        }\n        return code;\n    });\n};\n\n/**\n * Library to store all the loaded shader codes\n * @type {Object}\n * @readOnly\n * @memberOf clay.Shader\n */\nShader.codes = {};\n\n/**\n * Get shader source\n * @param  {string} name\n * @return {string}\n */\nShader.source = function (name) {\n    var parts = name.split('.');\n    var obj = Shader.codes;\n    var i = 0;\n    while (obj && i < parts.length) {\n        var key = parts[i++];\n        obj = obj[key];\n    }\n    if (typeof obj !== 'string') {\n        // FIXME Use default instead\n        console.error('Shader \"' + name + '\" not existed in library');\n        return '';\n    }\n    return obj;\n};\n\nexport default Shader;\n","export default \"@export clay.prez.vertex\\nuniform mat4 WVP : WORLDVIEWPROJECTION;\\nattribute vec3 pos : POSITION;\\nattribute vec2 uv : TEXCOORD_0;\\nuniform vec2 uvRepeat : [1.0, 1.0];\\nuniform vec2 uvOffset : [0.0, 0.0];\\n@import clay.chunk.skinning_header\\n@import clay.chunk.instancing_header\\nvarying vec2 v_Texcoord;\\nvoid main()\\n{\\n vec4 P = vec4(pos, 1.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n P = skinMatrixWS * P;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n P = instanceMat * P;\\n#endif\\n gl_Position = WVP * P;\\n v_Texcoord = uv * uvRepeat + uvOffset;\\n}\\n@end\\n@export clay.prez.fragment\\nuniform sampler2D alphaMap;\\nuniform float alphaCutoff: 0.0;\\nvarying vec2 v_Texcoord;\\nvoid main()\\n{\\n if (alphaCutoff > 0.0) {\\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\\n discard;\\n }\\n }\\n gl_FragColor = vec4(0.0,0.0,0.0,1.0);\\n}\\n@end\";\n","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport {GLMAT_EPSILON, GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\n\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Multiplies two affine mat4's\n * Add by https://github.com/pissang\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiplyAffine = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[4], a11 = a[5], a12 = a[6],\n        a20 = a[8], a21 = a[9], a22 = a[10],\n        a30 = a[12], a31 = a[13], a32 = a[14];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2];\n    out[0] = b0*a00 + b1*a10 + b2*a20;\n    out[1] = b0*a01 + b1*a11 + b2*a21;\n    out[2] = b0*a02 + b1*a12 + b2*a22;\n    // out[3] = 0;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6];\n    out[4] = b0*a00 + b1*a10 + b2*a20;\n    out[5] = b0*a01 + b1*a11 + b2*a21;\n    out[6] = b0*a02 + b1*a12 + b2*a22;\n    // out[7] = 0;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10];\n    out[8] = b0*a00 + b1*a10 + b2*a20;\n    out[9] = b0*a01 + b1*a11 + b2*a21;\n    out[10] = b0*a02 + b1*a12 + b2*a22;\n    // out[11] = 0;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + a32;\n    // out[15] = 1;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Alias for {@link mat4.multiplyAffine}\n * @function\n */\nmat4.mulAffine = mat4.multiplyAffine;\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < GLMAT_EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < GLMAT_EPSILON &&\n        Math.abs(eyey - centery) < GLMAT_EPSILON &&\n        Math.abs(eyez - centerz) < GLMAT_EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\nexport default mat4;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_RANDOM, GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\n\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = GLMAT_RANDOM() * 2.0 * Math.PI;\n    var z = (GLMAT_RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n      //Translate point to the origin\n      p[0] = a[0] - b[0];\n      p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n      //perform rotation\n      r[0] = p[0];\n      r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n      r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n      //translate to correct position\n      out[0] = r[0] + b[0];\n      out[1] = r[1] + b[1];\n      out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n    var p = [], r=[];\n    //Translate point to the origin\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n    //perform rotation\n    r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n    r[1] = p[1];\n    r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n    //translate to correct position\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n    var p = [], r=[];\n    //Translate point to the origin\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n    //perform rotation\n    r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n    r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n    r[2] = p[2];\n\n    //translate to correct position\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n\n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n\n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n\n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n\n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }\n};\n\nexport default vec3;","import Base from '../core/Base';\nimport Ray from '../math/Ray';\nimport Vector2 from '../math/Vector2';\nimport Vector3 from '../math/Vector3';\nimport Matrix4 from '../math/Matrix4';\nimport Renderable from '../Renderable';\nimport glenum from '../core/glenum';\nimport vec3 from '../glmatrix/vec3';\n\n/**\n * @constructor clay.picking.RayPicking\n * @extends clay.core.Base\n */\nvar RayPicking = Base.extend(/** @lends clay.picking.RayPicking# */{\n    /**\n     * Target scene\n     * @type {clay.Scene}\n     */\n    scene: null,\n    /**\n     * Target camera\n     * @type {clay.Camera}\n     */\n    camera: null,\n    /**\n     * Target renderer\n     * @type {clay.Renderer}\n     */\n    renderer: null\n}, function () {\n    this._ray = new Ray();\n    this._ndc = new Vector2();\n},\n/** @lends clay.picking.RayPicking.prototype */\n{\n\n    /**\n     * Pick the nearest intersection object in the scene\n     * @param  {number} x Mouse position x\n     * @param  {number} y Mouse position y\n     * @param  {boolean} [forcePickAll=false] ignore ignorePicking\n     * @return {clay.picking.RayPicking~Intersection}\n     */\n    pick: function (x, y, forcePickAll) {\n        var out = this.pickAll(x, y, [], forcePickAll);\n        return out[0] || null;\n    },\n\n    /**\n     * Pick all intersection objects, wich will be sorted from near to far\n     * @param  {number} x Mouse position x\n     * @param  {number} y Mouse position y\n     * @param  {Array} [output]\n     * @param  {boolean} [forcePickAll=false] ignore ignorePicking\n     * @return {Array.<clay.picking.RayPicking~Intersection>}\n     */\n    pickAll: function (x, y, output, forcePickAll) {\n        this.renderer.screenToNDC(x, y, this._ndc);\n        this.camera.castRay(this._ndc, this._ray);\n\n        output = output || [];\n\n        this._intersectNode(this.scene, output, forcePickAll || false);\n\n        output.sort(this._intersectionCompareFunc);\n\n        return output;\n    },\n\n    _intersectNode: function (node, out, forcePickAll) {\n        if ((node instanceof Renderable) && node.isRenderable()) {\n            if ((!node.ignorePicking || forcePickAll)\n                && (\n                    // Only triangle mesh support ray picking\n                    (node.mode === glenum.TRIANGLES && node.geometry.isUseIndices())\n                    // Or if geometry has it's own pickByRay, pick, implementation\n                    || node.geometry.pickByRay\n                    || node.geometry.pick\n                )\n            ) {\n                this._intersectRenderable(node, out);\n            }\n        }\n        for (var i = 0; i < node._children.length; i++) {\n            this._intersectNode(node._children[i], out, forcePickAll);\n        }\n    },\n\n    _intersectRenderable: (function () {\n\n        var v1 = new Vector3();\n        var v2 = new Vector3();\n        var v3 = new Vector3();\n        var ray = new Ray();\n        var worldInverse = new Matrix4();\n\n        return function (renderable, out) {\n\n            var isSkinnedMesh = renderable.isSkinnedMesh();\n            ray.copy(this._ray);\n            Matrix4.invert(worldInverse, renderable.worldTransform);\n\n            // Skinned mesh will ignore the world transform.\n            if (!isSkinnedMesh) {\n                ray.applyTransform(worldInverse);\n            }\n\n            var geometry = renderable.geometry;\n\n            var bbox = isSkinnedMesh ? renderable.skeleton.boundingBox : geometry.boundingBox;\n\n            if (bbox && !ray.intersectBoundingBox(bbox)) {\n                return;\n            }\n            // Use user defined picking algorithm\n            if (geometry.pick) {\n                geometry.pick(\n                    this._ndc.x, this._ndc.y,\n                    this.renderer,\n                    this.camera,\n                    renderable, out\n                );\n                return;\n            }\n            // Use user defined ray picking algorithm\n            else if (geometry.pickByRay) {\n                geometry.pickByRay(ray, renderable, out);\n                return;\n            }\n\n            var cullBack = (renderable.cullFace === glenum.BACK && renderable.frontFace === glenum.CCW)\n                        || (renderable.cullFace === glenum.FRONT && renderable.frontFace === glenum.CW);\n\n            var point;\n            var indices = geometry.indices;\n            var positionAttr = geometry.attributes.position;\n            var weightAttr = geometry.attributes.weight;\n            var jointAttr = geometry.attributes.joint;\n            var skinMatricesArray;\n            var skinMatrices = [];\n            // Check if valid.\n            if (!positionAttr || !positionAttr.value || !indices) {\n                return;\n            }\n            if (isSkinnedMesh) {\n                skinMatricesArray = renderable.skeleton.getSubSkinMatrices(renderable.__uid__, renderable.joints);\n                for (var i = 0; i < renderable.joints.length; i++) {\n                    skinMatrices[i] = skinMatrices[i] || [];\n                    for (var k = 0; k < 16; k++) {\n                        skinMatrices[i][k] = skinMatricesArray[i * 16 + k];\n                    }\n                }\n                var pos = [];\n                var weight = [];\n                var joint = [];\n                var skinnedPos = [];\n                var tmp = [];\n                var skinnedPositionAttr = geometry.attributes.skinnedPosition;\n                if (!skinnedPositionAttr || !skinnedPositionAttr.value) {\n                    geometry.createAttribute('skinnedPosition', 'f', 3);\n                    skinnedPositionAttr = geometry.attributes.skinnedPosition;\n                    skinnedPositionAttr.init(geometry.vertexCount);\n                }\n                for (var i = 0; i < geometry.vertexCount; i++) {\n                    positionAttr.get(i, pos);\n                    weightAttr.get(i, weight);\n                    jointAttr.get(i, joint);\n                    weight[3] = 1 - weight[0] - weight[1] - weight[2];\n                    vec3.set(skinnedPos, 0, 0, 0);\n                    for (var k = 0; k < 4; k++) {\n                        if (joint[k] >= 0 && weight[k] > 1e-4) {\n                            vec3.transformMat4(tmp, pos, skinMatrices[joint[k]]);\n                            vec3.scaleAndAdd(skinnedPos, skinnedPos, tmp, weight[k]);\n                        }\n                    }\n                    skinnedPositionAttr.set(i, skinnedPos);\n                }\n            }\n\n            for (var i = 0; i < indices.length; i += 3) {\n                var i1 = indices[i];\n                var i2 = indices[i + 1];\n                var i3 = indices[i + 2];\n                var finalPosAttr = isSkinnedMesh\n                    ? geometry.attributes.skinnedPosition\n                    : positionAttr;\n                finalPosAttr.get(i1, v1.array);\n                finalPosAttr.get(i2, v2.array);\n                finalPosAttr.get(i3, v3.array);\n\n                if (cullBack) {\n                    point = ray.intersectTriangle(v1, v2, v3, renderable.culling);\n                }\n                else {\n                    point = ray.intersectTriangle(v1, v3, v2, renderable.culling);\n                }\n                if (point) {\n                    var pointW = new Vector3();\n                    if (!isSkinnedMesh) {\n                        Vector3.transformMat4(pointW, point, renderable.worldTransform);\n                    }\n                    else {\n                        // TODO point maybe not right.\n                        Vector3.copy(pointW, point);\n                    }\n                    out.push(new RayPicking.Intersection(\n                        point, pointW, renderable, [i1, i2, i3], i / 3,\n                        Vector3.dist(pointW, this._ray.origin)\n                    ));\n                }\n            }\n        };\n    })(),\n\n    _intersectionCompareFunc: function (a, b) {\n        return a.distance - b.distance;\n    }\n});\n\n/**\n * @constructor clay.picking.RayPicking~Intersection\n * @param {clay.Vector3} point\n * @param {clay.Vector3} pointWorld\n * @param {clay.Node} target\n * @param {Array.<number>} triangle\n * @param {number} triangleIndex\n * @param {number} distance\n */\nRayPicking.Intersection = function (point, pointWorld, target, triangle, triangleIndex, distance) {\n    /**\n     * Intersection point in local transform coordinates\n     * @type {clay.Vector3}\n     */\n    this.point = point;\n    /**\n     * Intersection point in world transform coordinates\n     * @type {clay.Vector3}\n     */\n    this.pointWorld = pointWorld;\n    /**\n     * Intersection scene node\n     * @type {clay.Node}\n     */\n    this.target = target;\n    /**\n     * Intersection triangle, which is an array of vertex index\n     * @type {Array.<number>}\n     */\n    this.triangle = triangle;\n    /**\n     * Index of intersection triangle.\n     */\n    this.triangleIndex = triangleIndex;\n    /**\n     * Distance from intersection point to ray origin\n     * @type {number}\n     */\n    this.distance = distance;\n};\n\nexport default RayPicking;\n","import Vector3 from './Vector3';\nimport vec3 from '../glmatrix/vec3';\n\nvar EPSILON = 1e-5;\n\n/**\n * @constructor\n * @alias clay.Ray\n * @param {clay.Vector3} [origin]\n * @param {clay.Vector3} [direction]\n */\nvar Ray = function (origin, direction) {\n    /**\n     * @type {clay.Vector3}\n     */\n    this.origin = origin || new Vector3();\n    /**\n     * @type {clay.Vector3}\n     */\n    this.direction = direction || new Vector3();\n};\n\nRay.prototype = {\n\n    constructor: Ray,\n\n    // http://www.siggraph.org/education/materials/HyperGraph/raytrace/rayplane_intersection.htm\n    /**\n     * Calculate intersection point between ray and a give plane\n     * @param  {clay.Plane} plane\n     * @param  {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    intersectPlane: function (plane, out) {\n        var pn = plane.normal.array;\n        var d = plane.distance;\n        var ro = this.origin.array;\n        var rd = this.direction.array;\n\n        var divider = vec3.dot(pn, rd);\n        // ray is parallel to the plane\n        if (divider === 0) {\n            return null;\n        }\n        if (!out) {\n            out = new Vector3();\n        }\n        var t = (vec3.dot(pn, ro) - d) / divider;\n        vec3.scaleAndAdd(out.array, ro, rd, -t);\n        out._dirty = true;\n        return out;\n    },\n\n    /**\n     * Mirror the ray against plane\n     * @param  {clay.Plane} plane\n     */\n    mirrorAgainstPlane: function (plane) {\n        // Distance to plane\n        var d = vec3.dot(plane.normal.array, this.direction.array);\n        vec3.scaleAndAdd(this.direction.array, this.direction.array, plane.normal.array, -d * 2);\n        this.direction._dirty = true;\n    },\n\n    distanceToPoint: (function () {\n        var v = vec3.create();\n        return function (point) {\n            vec3.sub(v, point, this.origin.array);\n            // Distance from projection point to origin\n            var b = vec3.dot(v, this.direction.array);\n            if (b < 0) {\n                return vec3.distance(this.origin.array, point);\n            }\n            // Squared distance from center to origin\n            var c2 = vec3.lenSquared(v);\n            // Squared distance from center to projection point\n            return Math.sqrt(c2 - b * b);\n        };\n    })(),\n\n    /**\n     * Calculate intersection point between ray and sphere\n     * @param  {clay.Vector3} center\n     * @param  {number} radius\n     * @param  {clay.Vector3} out\n     * @return {clay.Vector3}\n     */\n    intersectSphere: (function () {\n        var v = vec3.create();\n        return function (center, radius, out) {\n            var origin = this.origin.array;\n            var direction = this.direction.array;\n            center = center.array;\n            vec3.sub(v, center, origin);\n            // Distance from projection point to origin\n            var b = vec3.dot(v, direction);\n            // Squared distance from center to origin\n            var c2 = vec3.squaredLength(v);\n            // Squared distance from center to projection point\n            var d2 = c2 - b * b;\n\n            var r2 = radius * radius;\n            // No intersection\n            if (d2 > r2) {\n                return;\n            }\n\n            var a = Math.sqrt(r2 - d2);\n            // First intersect point\n            var t0 = b - a;\n            // Second intersect point\n            var t1 = b + a;\n\n            if (!out) {\n                out = new Vector3();\n            }\n            if (t0 < 0) {\n                if (t1 < 0) {\n                    return null;\n                }\n                else {\n                    vec3.scaleAndAdd(out.array, origin, direction, t1);\n                    return out;\n                }\n            }\n            else {\n                vec3.scaleAndAdd(out.array, origin, direction, t0);\n                return out;\n            }\n        };\n    })(),\n\n    // http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\n    /**\n     * Calculate intersection point between ray and bounding box\n     * @param {clay.BoundingBox} bbox\n     * @param {clay.Vector3}\n     * @return {clay.Vector3}\n     */\n    intersectBoundingBox: function (bbox, out) {\n        var dir = this.direction.array;\n        var origin = this.origin.array;\n        var min = bbox.min.array;\n        var max = bbox.max.array;\n\n        var invdirx = 1 / dir[0];\n        var invdiry = 1 / dir[1];\n        var invdirz = 1 / dir[2];\n\n        var tmin, tmax, tymin, tymax, tzmin, tzmax;\n        if (invdirx >= 0) {\n            tmin = (min[0] - origin[0]) * invdirx;\n            tmax = (max[0] - origin[0]) * invdirx;\n        }\n        else {\n            tmax = (min[0] - origin[0]) * invdirx;\n            tmin = (max[0] - origin[0]) * invdirx;\n        }\n        if (invdiry >= 0) {\n            tymin = (min[1] - origin[1]) * invdiry;\n            tymax = (max[1] - origin[1]) * invdiry;\n        }\n        else {\n            tymax = (min[1] - origin[1]) * invdiry;\n            tymin = (max[1] - origin[1]) * invdiry;\n        }\n\n        if ((tmin > tymax) || (tymin > tmax)) {\n            return null;\n        }\n\n        if (tymin > tmin || tmin !== tmin) {\n            tmin = tymin;\n        }\n        if (tymax < tmax || tmax !== tmax) {\n            tmax = tymax;\n        }\n\n        if (invdirz >= 0) {\n            tzmin = (min[2] - origin[2]) * invdirz;\n            tzmax = (max[2] - origin[2]) * invdirz;\n        }\n        else {\n            tzmax = (min[2] - origin[2]) * invdirz;\n            tzmin = (max[2] - origin[2]) * invdirz;\n        }\n\n        if ((tmin > tzmax) || (tzmin > tmax)) {\n            return null;\n        }\n\n        if (tzmin > tmin || tmin !== tmin) {\n            tmin = tzmin;\n        }\n        if (tzmax < tmax || tmax !== tmax) {\n            tmax = tzmax;\n        }\n        if (tmax < 0) {\n            return null;\n        }\n\n        var t = tmin >= 0 ? tmin : tmax;\n\n        if (!out) {\n            out = new Vector3();\n        }\n        vec3.scaleAndAdd(out.array, origin, dir, t);\n        return out;\n    },\n\n    // http://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm\n    /**\n     * Calculate intersection point between ray and three triangle vertices\n     * @param {clay.Vector3} a\n     * @param {clay.Vector3} b\n     * @param {clay.Vector3} c\n     * @param {boolean}           singleSided, CW triangle will be ignored\n     * @param {clay.Vector3} [out]\n     * @param {clay.Vector3} [barycenteric] barycentric coords\n     * @return {clay.Vector3}\n     */\n    intersectTriangle: (function () {\n\n        var eBA = vec3.create();\n        var eCA = vec3.create();\n        var AO = vec3.create();\n        var vCross = vec3.create();\n\n        return function (a, b, c, singleSided, out, barycenteric) {\n            var dir = this.direction.array;\n            var origin = this.origin.array;\n            a = a.array;\n            b = b.array;\n            c = c.array;\n\n            vec3.sub(eBA, b, a);\n            vec3.sub(eCA, c, a);\n\n            vec3.cross(vCross, eCA, dir);\n\n            var det = vec3.dot(eBA, vCross);\n\n            if (singleSided) {\n                if (det > -EPSILON) {\n                    return null;\n                }\n            }\n            else {\n                if (det > -EPSILON && det < EPSILON) {\n                    return null;\n                }\n            }\n\n            vec3.sub(AO, origin, a);\n            var u = vec3.dot(vCross, AO) / det;\n            if (u < 0 || u > 1) {\n                return null;\n            }\n\n            vec3.cross(vCross, eBA, AO);\n            var v = vec3.dot(dir, vCross) / det;\n\n            if (v < 0 || v > 1 || (u + v > 1)) {\n                return null;\n            }\n\n            vec3.cross(vCross, eBA, eCA);\n            var t = -vec3.dot(AO, vCross) / det;\n\n            if (t < 0) {\n                return null;\n            }\n\n            if (!out) {\n                out = new Vector3();\n            }\n            if (barycenteric) {\n                Vector3.set(barycenteric, (1 - u - v), u, v);\n            }\n            vec3.scaleAndAdd(out.array, origin, dir, t);\n\n            return out;\n        };\n    })(),\n\n    /**\n     * Apply an affine transform matrix to the ray\n     * @return {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n        Vector3.add(this.direction, this.direction, this.origin);\n        Vector3.transformMat4(this.origin, this.origin, matrix);\n        Vector3.transformMat4(this.direction, this.direction, matrix);\n\n        Vector3.sub(this.direction, this.direction, this.origin);\n        Vector3.normalize(this.direction, this.direction);\n    },\n\n    /**\n     * Copy values from another ray\n     * @param {clay.Ray} ray\n     */\n    copy: function (ray) {\n        Vector3.copy(this.origin, ray.origin);\n        Vector3.copy(this.direction, ray.direction);\n    },\n\n    /**\n     * Clone a new ray\n     * @return {clay.Ray}\n     */\n    clone: function () {\n        var ray = new Ray();\n        ray.copy(this);\n        return ray;\n    }\n};\n\nexport default Ray;\n","import vec3 from '../glmatrix/vec3';\n\n/**\n * @constructor\n * @alias clay.Vector3\n * @param {number} x\n * @param {number} y\n * @param {number} z\n */\nvar Vector3 = function(x, y, z) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n\n    /**\n     * Storage of Vector3, read and write of x, y, z will change the values in array\n     * All methods also operate on the array instead of x, y, z components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector3#\n     */\n    this.array = vec3.fromValues(x, y, z);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector3#\n     */\n    this._dirty = true;\n};\n\nVector3.prototype = {\n\n    constructor: Vector3,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    add: function (b) {\n        vec3.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @return {clay.Vector3}\n     */\n    set: function (x, y, z) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector3}\n     */\n    setArray: function (arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector3\n     * @return {clay.Vector3}\n     */\n    clone: function () {\n        return new Vector3(this.x, this.y, this.z);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    copy: function (b) {\n        vec3.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Cross product of self and b, written to a Vector3 out\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    cross: function (a, b) {\n        vec3.cross(this.array, a.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    dist: function (b) {\n        return vec3.dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    distance: function (b) {\n        return vec3.distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    div: function (b) {\n        vec3.div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    divide: function (b) {\n        vec3.divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    dot: function (b) {\n        return vec3.dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function () {\n        return vec3.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function () {\n        return vec3.length(this.array);\n    },\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @param  {number}  t\n     * @return {clay.Vector3}\n     */\n    lerp: function (a, b, t) {\n        vec3.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    min: function (b) {\n        vec3.min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    max: function (b) {\n        vec3.max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    mul: function (b) {\n        vec3.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    multiply: function (b) {\n        vec3.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector3}\n     */\n    negate: function () {\n        vec3.negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector3}\n     */\n    normalize: function () {\n        vec3.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y, z components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector3}\n     */\n    random: function (scale) {\n        vec3.random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector3}\n     */\n    scale: function (s) {\n        vec3.scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector3} b\n     * @param  {number}  scale\n     * @return {clay.Vector3}\n     */\n    scaleAndAdd: function (b, s) {\n        vec3.scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    sqrDist: function (b) {\n        return vec3.sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    squaredDistance: function (b) {\n        return vec3.squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function () {\n        return vec3.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function () {\n        return vec3.squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    sub: function (b) {\n        vec3.sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    subtract: function (b) {\n        vec3.subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix3 m\n     * @param  {clay.Matrix3} m\n     * @return {clay.Vector3}\n     */\n    transformMat3: function (m) {\n        vec3.transformMat3(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector3}\n     */\n    transformMat4: function (m) {\n        vec3.transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Transform self with a Quaternion q\n     * @param  {clay.Quaternion} q\n     * @return {clay.Vector3}\n     */\n    transformQuat: function (q) {\n        vec3.transformQuat(this.array, this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Trasnform self into projection space with m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector3}\n     */\n    applyProjection: function (m) {\n        var v = this.array;\n        m = m.array;\n\n        // Perspective projection\n        if (m[15] === 0) {\n            var w = -1 / v[2];\n            v[0] = m[0] * v[0] * w;\n            v[1] = m[5] * v[1] * w;\n            v[2] = (m[10] * v[2] + m[14]) * w;\n        }\n        else {\n            v[0] = m[0] * v[0] + m[12];\n            v[1] = m[5] * v[1] + m[13];\n            v[2] = m[10] * v[2] + m[14];\n        }\n        this._dirty = true;\n\n        return this;\n    },\n\n    eulerFromQuat: function(q, order) {\n        Vector3.eulerFromQuat(this, q, order);\n    },\n\n    eulerFromMat3: function (m, order) {\n        Vector3.eulerFromMat3(this, m, order);\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Vector3.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.add = function(out, a, b) {\n    vec3.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector3}\n */\nVector3.set = function(out, x, y, z) {\n    vec3.set(out.array, x, y, z);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.copy = function(out, b) {\n    vec3.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.cross = function(out, a, b) {\n    vec3.cross(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.dist = function(a, b) {\n    return vec3.distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.distance = Vector3.dist;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.div = function(out, a, b) {\n    vec3.divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.divide = Vector3.div;\n\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.dot = function(a, b) {\n    return vec3.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.len = function(b) {\n    return vec3.length(b.array);\n};\n\n// Vector3.length = Vector3.len;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @param  {number}  t\n * @return {clay.Vector3}\n */\nVector3.lerp = function(out, a, b, t) {\n    vec3.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.min = function(out, a, b) {\n    vec3.min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.max = function(out, a, b) {\n    vec3.max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.mul = function(out, a, b) {\n    vec3.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.multiply = Vector3.mul;\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @return {clay.Vector3}\n */\nVector3.negate = function(out, a) {\n    vec3.negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @return {clay.Vector3}\n */\nVector3.normalize = function(out, a) {\n    vec3.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.random = function(out, scale) {\n    vec3.random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.scale = function(out, a, scale) {\n    vec3.scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.scaleAndAdd = function(out, a, b, scale) {\n    vec3.scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.sqrDist = function(a, b) {\n    return vec3.sqrDist(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.squaredDistance = Vector3.sqrDist;\n/**\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.sqrLen = function(a) {\n    return vec3.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.squaredLength = Vector3.sqrLen;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.sub = function(out, a, b) {\n    vec3.subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.subtract = Vector3.sub;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {Matrix3} m\n * @return {clay.Vector3}\n */\nVector3.transformMat3 = function(out, a, m) {\n    vec3.transformMat3(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector3}\n */\nVector3.transformMat4 = function(out, a, m) {\n    vec3.transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector3}\n */\nVector3.transformQuat = function(out, a, q) {\n    vec3.transformQuat(out.array, a.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\nfunction clamp(val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n}\nvar atan2 = Math.atan2;\nvar asin = Math.asin;\nvar abs = Math.abs;\n/**\n * Convert quaternion to euler angle\n * Quaternion must be normalized\n * From three.js\n */\nVector3.eulerFromQuat = function (out, q, order) {\n    out._dirty = true;\n    q = q.array;\n\n    var target = out.array;\n    var x = q[0], y = q[1], z = q[2], w = q[3];\n    var x2 = x * x;\n    var y2 = y * y;\n    var z2 = z * z;\n    var w2 = w * w;\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    switch (order) {\n        case 'XYZ':\n            target[0] = atan2(2 * (x * w - y * z), (w2 - x2 - y2 + z2));\n            target[1] = asin(clamp(2 * (x * z + y * w), - 1, 1));\n            target[2] = atan2(2 * (z * w - x * y), (w2 + x2 - y2 - z2));\n            break;\n        case 'YXZ':\n            target[0] = asin(clamp(2 * (x * w - y * z), - 1, 1));\n            target[1] = atan2(2 * (x * z + y * w), (w2 - x2 - y2 + z2));\n            target[2] = atan2(2 * (x * y + z * w), (w2 - x2 + y2 - z2));\n            break;\n        case 'ZXY':\n            target[0] = asin(clamp(2 * (x * w + y * z), - 1, 1));\n            target[1] = atan2(2 * (y * w - z * x), (w2 - x2 - y2 + z2));\n            target[2] = atan2(2 * (z * w - x * y), (w2 - x2 + y2 - z2));\n            break;\n        case 'ZYX':\n            target[0] = atan2(2 * (x * w + z * y), (w2 - x2 - y2 + z2));\n            target[1] = asin(clamp(2 * (y * w - x * z), - 1, 1));\n            target[2] = atan2(2 * (x * y + z * w), (w2 + x2 - y2 - z2));\n            break;\n        case 'YZX':\n            target[0] = atan2(2 * (x * w - z * y), (w2 - x2 + y2 - z2));\n            target[1] = atan2(2 * (y * w - x * z), (w2 + x2 - y2 - z2));\n            target[2] = asin(clamp(2 * (x * y + z * w), - 1, 1));\n            break;\n        case 'XZY':\n            target[0] = atan2(2 * (x * w + y * z), (w2 - x2 + y2 - z2));\n            target[1] = atan2(2 * (x * z + y * w), (w2 + x2 - y2 - z2));\n            target[2] = asin(clamp(2 * (z * w - x * y), - 1, 1));\n            break;\n        default:\n            console.warn('Unkown order: ' + order);\n    }\n    return out;\n};\n\n/**\n * Convert rotation matrix to euler angle\n * from three.js\n */\nVector3.eulerFromMat3 = function (out, m, order) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.array;\n    var m11 = te[0], m12 = te[3], m13 = te[6];\n    var m21 = te[1], m22 = te[4], m23 = te[7];\n    var m31 = te[2], m32 = te[5], m33 = te[8];\n    var target = out.array;\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    switch (order) {\n        case 'XYZ':\n            target[1] = asin(clamp(m13, -1, 1));\n            if (abs(m13) < 0.99999) {\n                target[0] = atan2(-m23, m33);\n                target[2] = atan2(-m12, m11);\n            }\n            else {\n                target[0] = atan2(m32, m22);\n                target[2] = 0;\n            }\n            break;\n        case 'YXZ':\n            target[0] = asin(-clamp(m23, -1, 1));\n            if (abs(m23) < 0.99999) {\n                target[1] = atan2(m13, m33);\n                target[2] = atan2(m21, m22);\n            }\n            else {\n                target[1] = atan2(-m31, m11);\n                target[2] = 0;\n            }\n            break;\n        case 'ZXY':\n            target[0] = asin(clamp(m32, -1, 1));\n            if (abs(m32) < 0.99999) {\n                target[1] = atan2(-m31, m33);\n                target[2] = atan2(-m12, m22);\n            }\n            else {\n                target[1] = 0;\n                target[2] = atan2(m21, m11);\n            }\n            break;\n        case 'ZYX':\n            target[1] = asin(-clamp(m31, -1, 1));\n            if (abs(m31) < 0.99999) {\n                target[0] = atan2(m32, m33);\n                target[2] = atan2(m21, m11);\n            }\n            else {\n                target[0] = 0;\n                target[2] = atan2(-m12, m22);\n            }\n            break;\n        case 'YZX':\n            target[2] = asin(clamp(m21, -1, 1));\n            if (abs(m21) < 0.99999) {\n                target[0] = atan2(-m23, m22);\n                target[1] = atan2(-m31, m11);\n            }\n            else {\n                target[0] = 0;\n                target[1] = atan2(m13, m33);\n            }\n            break;\n        case 'XZY':\n            target[2] = asin(-clamp(m12, -1, 1));\n            if (abs(m12) < 0.99999) {\n                target[0] = atan2(m32, m22);\n                target[1] = atan2(m13, m11);\n            }\n            else {\n                target[0] = atan2(-m23, m33);\n                target[1] = 0;\n            }\n            break;\n        default:\n            console.warn('Unkown order: ' + order);\n    }\n    out._dirty = true;\n\n    return out;\n};\n\nObject.defineProperties(Vector3, {\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_X: {\n        get: function () {\n            return new Vector3(1, 0, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    NEGATIVE_X: {\n        get: function () {\n            return new Vector3(-1, 0, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_Y: {\n        get: function () {\n            return new Vector3(0, 1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    NEGATIVE_Y: {\n        get: function () {\n            return new Vector3(0, -1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_Z: {\n        get: function () {\n            return new Vector3(0, 0, 1);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     */\n    NEGATIVE_Z: {\n        get: function () {\n            return new Vector3(0, 0, -1);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    UP: {\n        get: function () {\n            return new Vector3(0, 1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    ZERO: {\n        get: function () {\n            return new Vector3();\n        }\n    }\n});\n\nexport default Vector3;\n","import mat4 from '../glmatrix/mat4';\nimport vec3 from '../glmatrix/vec3';\nimport quat from '../glmatrix/quat';\nimport mat3 from '../glmatrix/mat3';\nimport Vector3 from './Vector3';\n\n/**\n * @constructor\n * @alias clay.Matrix4\n */\nvar Matrix4 = function() {\n\n    this._axisX = new Vector3();\n    this._axisY = new Vector3();\n    this._axisZ = new Vector3();\n\n    /**\n     * Storage of Matrix4\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix4#\n     */\n    this.array = mat4.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix4#\n     */\n    this._dirty = true;\n};\n\nMatrix4.prototype = {\n\n    constructor: Matrix4,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix4}\n     */\n    adjoint: function() {\n        mat4.adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Matrix4\n     * @return {clay.Matrix4}\n     */\n    clone: function() {\n        return (new Matrix4()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    copy: function(a) {\n        mat4.copy(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return mat4.determinant(this.array);\n    },\n\n    /**\n     * Set upper 3x3 part from quaternion\n     * @param  {clay.Quaternion} q\n     * @return {clay.Matrix4}\n     */\n    fromQuat: function(q) {\n        mat4.fromQuat(this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from a quaternion rotation and a vector translation\n     * @param  {clay.Quaternion} q\n     * @param  {clay.Vector3} v\n     * @return {clay.Matrix4}\n     */\n    fromRotationTranslation: function(q, v) {\n        mat4.fromRotationTranslation(this.array, q.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from Matrix2d, it is used when converting a 2d shape to 3d space.\n     * In 3d space it is equivalent to ranslate on xy plane and rotate about z axis\n     * @param  {clay.Matrix2d} m2d\n     * @return {clay.Matrix4}\n     */\n    fromMat2d: function(m2d) {\n        Matrix4.fromMat2d(this, m2d);\n        return this;\n    },\n\n    /**\n     * Set from frustum bounds\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    frustum: function (left, right, bottom, top, near, far) {\n        mat4.frustum(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix4}\n     */\n    identity: function() {\n        mat4.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix4}\n     */\n    invert: function() {\n        mat4.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a matrix with the given eye position, focal point, and up axis\n     * @param  {clay.Vector3} eye\n     * @param  {clay.Vector3} center\n     * @param  {clay.Vector3} up\n     * @return {clay.Matrix4}\n     */\n    lookAt: function(eye, center, up) {\n        mat4.lookAt(this.array, eye.array, center.array, up.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    mul: function(b) {\n        mat4.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix4} a\n     * @return {clay.Matrix4}\n     */\n    mulLeft: function(a) {\n        mat4.mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    multiply: function(b) {\n        mat4.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    multiplyLeft: function(a) {\n        mat4.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a orthographic projection matrix\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    ortho: function(left, right, bottom, top, near, far) {\n        mat4.ortho(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Set as a perspective projection matrix\n     * @param  {number} fovy\n     * @param  {number} aspect\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    perspective: function(fovy, aspect, near, far) {\n        mat4.perspective(this.array, fovy, aspect, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by rad about axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param  {number}   rad\n     * @param  {clay.Vector3} axis\n     * @return {clay.Matrix4}\n     */\n    rotate: function(rad, axis) {\n        mat4.rotate(this.array, this.array, rad, axis.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about X axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateX: function(rad) {\n        mat4.rotateX(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Y axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateY: function(rad) {\n        mat4.rotateY(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Z axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateZ: function(rad) {\n        mat4.rotateZ(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * Equal to right-multiply a scale matrix\n     * @param  {clay.Vector3}  s\n     * @return {clay.Matrix4}\n     */\n    scale: function(v) {\n        mat4.scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v.\n     * Equal to right-multiply a translate matrix\n     * @param  {clay.Vector3}  v\n     * @return {clay.Matrix4}\n     */\n    translate: function(v) {\n        mat4.translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function() {\n        mat4.transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Decompose a matrix to SRT\n     * @param {clay.Vector3} [scale]\n     * @param {clay.Quaternion} rotation\n     * @param {clay.Vector} position\n     * @see http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.matrix.decompose.aspx\n     */\n    decomposeMatrix: (function() {\n\n        var x = vec3.create();\n        var y = vec3.create();\n        var z = vec3.create();\n\n        var m3 = mat3.create();\n\n        return function(scale, rotation, position) {\n\n            var el = this.array;\n            vec3.set(x, el[0], el[1], el[2]);\n            vec3.set(y, el[4], el[5], el[6]);\n            vec3.set(z, el[8], el[9], el[10]);\n\n            var sx = vec3.length(x);\n            var sy = vec3.length(y);\n            var sz = vec3.length(z);\n\n            // if determine is negative, we need to invert one scale\n            var det = this.determinant();\n            if (det < 0) {\n                sx = -sx;\n            }\n\n            if (scale) {\n                scale.set(sx, sy, sz);\n            }\n\n            position.set(el[12], el[13], el[14]);\n\n            mat3.fromMat4(m3, el);\n            // Not like mat4, mat3 in glmatrix seems to be row-based\n            // Seems fixed in gl-matrix 2.2.2\n            // https://github.com/toji/gl-matrix/issues/114\n            // mat3.transpose(m3, m3);\n\n            m3[0] /= sx;\n            m3[1] /= sx;\n            m3[2] /= sx;\n\n            m3[3] /= sy;\n            m3[4] /= sy;\n            m3[5] /= sy;\n\n            m3[6] /= sz;\n            m3[7] /= sz;\n            m3[8] /= sz;\n\n            quat.fromMat3(rotation.array, m3);\n            quat.normalize(rotation.array, rotation.array);\n\n            rotation._dirty = true;\n            position._dirty = true;\n        };\n    })(),\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n\nif (defineProperty) {\n    var proto = Matrix4.prototype;\n    /**\n     * Z Axis of local transform\n     * @name z\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            var el = this.array;\n            this._axisZ.set(el[8], el[9], el[10]);\n            return this._axisZ;\n        },\n        set: function (v) {\n            // TODO Here has a problem\n            // If only set an item of vector will not work\n            var el = this.array;\n            v = v.array;\n            el[8] = v[0];\n            el[9] = v[1];\n            el[10] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * Y Axis of local transform\n     * @name y\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            var el = this.array;\n            this._axisY.set(el[4], el[5], el[6]);\n            return this._axisY;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[4] = v[0];\n            el[5] = v[1];\n            el[6] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * X Axis of local transform\n     * @name x\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            var el = this.array;\n            this._axisX.set(el[0], el[1], el[2]);\n            return this._axisX;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[0] = v[0];\n            el[1] = v[1];\n            el[2] = v[2];\n\n            this._dirty = true;\n        }\n    })\n}\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.adjoint = function(out, a) {\n    mat4.adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.copy = function(out, a) {\n    mat4.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} a\n * @return {number}\n */\nMatrix4.determinant = function(a) {\n    return mat4.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @return {clay.Matrix4}\n */\nMatrix4.identity = function(out) {\n    mat4.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  left\n * @param  {number}  right\n * @param  {number}  bottom\n * @param  {number}  top\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.ortho = function(out, left, right, bottom, top, near, far) {\n    mat4.ortho(out.array, left, right, bottom, top, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  fovy\n * @param  {number}  aspect\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.perspective = function(out, fovy, aspect, near, far) {\n    mat4.perspective(out.array, fovy, aspect, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Vector3} eye\n * @param  {clay.Vector3} center\n * @param  {clay.Vector3} up\n * @return {clay.Matrix4}\n */\nMatrix4.lookAt = function(out, eye, center, up) {\n    mat4.lookAt(out.array, eye.array, center.array, up.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.invert = function(out, a) {\n    mat4.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.mul = function(out, a, b) {\n    mat4.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.multiply = Matrix4.mul;\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @return {clay.Matrix4}\n */\nMatrix4.fromQuat = function(out, q) {\n    mat4.fromQuat(out.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @param  {clay.Vector3}    v\n * @return {clay.Matrix4}\n */\nMatrix4.fromRotationTranslation = function(out, q, v) {\n    mat4.fromRotationTranslation(out.array, q.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} m4\n * @param  {clay.Matrix2d} m2d\n * @return {clay.Matrix4}\n */\nMatrix4.fromMat2d = function(m4, m2d) {\n    m4._dirty = true;\n    var m2d = m2d.array;\n    var m4 = m4.array;\n\n    m4[0] = m2d[0];\n    m4[4] = m2d[2];\n    m4[12] = m2d[4];\n\n    m4[1] = m2d[1];\n    m4[5] = m2d[3];\n    m4[13] = m2d[5];\n\n    return m4;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @param  {clay.Vector3} axis\n * @return {clay.Matrix4}\n */\nMatrix4.rotate = function(out, a, rad, axis) {\n    mat4.rotate(out.array, a.array, rad, axis.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateX = function(out, a, rad) {\n    mat4.rotateX(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateY = function(out, a, rad) {\n    mat4.rotateY(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateZ = function(out, a, rad) {\n    mat4.rotateZ(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.scale = function(out, a, v) {\n    mat4.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.transpose = function(out, a) {\n    mat4.transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.translate = function(out, a, v) {\n    mat4.translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix4;\n","\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\nimport vec3 from './vec3';\nimport vec4 from './vec4';\nimport mat3 from './mat3';\n\n\n/**\n * @class Quaternion\n * @name quat\n */\n\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n};\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n\n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n\n    return out;\n};\n\nexport default quat;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_RANDOM, GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\n\nexport var vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n        out[3] = a[3] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = GLMAT_RANDOM();\n    out[1] = GLMAT_RANDOM();\n    out[2] = GLMAT_RANDOM();\n    out[3] = GLMAT_RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n\n        return a;\n    };\n})();\n\nexport default vec4;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\n\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n\nexport default mat3;","import Node from './Node';\nimport glenum from './core/glenum';\n\n/**\n * @constructor\n * @alias clay.Renderable\n * @extends clay.Node\n */\nvar Renderable = Node.extend(/** @lends clay.Renderable# */ {\n    /**\n     * @type {clay.Material}\n     */\n    material: null,\n\n    /**\n     * @type {clay.Geometry}\n     */\n    geometry: null,\n\n    /**\n     * @type {number}\n     */\n    mode: glenum.TRIANGLES,\n\n    _renderInfo: null\n},\n/** @lends clay.Renderable.prototype */\n{\n\n    __program: null,\n\n    /**\n     * Group of received light.\n     */\n    lightGroup: 0,\n    /**\n     * Render order, Nodes with smaller value renders before nodes with larger values.\n     * @type {Number}\n     */\n    renderOrder: 0,\n\n    /**\n     * Used when mode is LINES, LINE_STRIP or LINE_LOOP\n     * @type {number}\n     */\n    // lineWidth: 1,\n\n    /**\n     * If enable culling\n     * @type {boolean}\n     */\n    culling: true,\n    /**\n     * Specify which side of polygon will be culled.\n     * Possible values:\n     *  + {@link clay.Renderable.BACK}\n     *  + {@link clay.Renderable.FRONT}\n     *  + {@link clay.Renderable.FRONT_AND_BACK}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace\n     * @type {number}\n     */\n    cullFace: glenum.BACK,\n    /**\n     * Specify which side is front face.\n     * Possible values:\n     *  + {@link clay.Renderable.CW}\n     *  + {@link clay.Renderable.CCW}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace\n     * @type {number}\n     */\n    frontFace: glenum.CCW,\n\n    /**\n     * If enable software frustum culling\n     * @type {boolean}\n     */\n    frustumCulling: true,\n    /**\n     * @type {boolean}\n     */\n    receiveShadow: true,\n    /**\n     * @type {boolean}\n     */\n    castShadow: true,\n    /**\n     * @type {boolean}\n     */\n    ignorePicking: false,\n    /**\n     * @type {boolean}\n     */\n    ignorePreZ: false,\n\n    /**\n     * @type {boolean}\n     */\n    ignoreGBuffer: false,\n\n    /**\n     * @return {boolean}\n     */\n    isRenderable: function() {\n        // TODO Shader ?\n        return this.geometry && this.material && this.material.shader && !this.invisible\n            && this.geometry.vertexCount > 0;\n    },\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    beforeRender: function (_gl) {},\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    afterRender: function (_gl, renderStat) {},\n\n    getBoundingBox: function (filter, out) {\n        out = Node.prototype.getBoundingBox.call(this, filter, out);\n        if (this.geometry && this.geometry.boundingBox) {\n            out.union(this.geometry.boundingBox);\n        }\n\n        return out;\n    },\n\n    /**\n     * Clone a new renderable\n     * @function\n     * @return {clay.Renderable}\n     */\n    clone: (function() {\n        var properties = [\n            'castShadow', 'receiveShadow',\n            'mode', 'culling', 'cullFace', 'frontFace',\n            'frustumCulling',\n            'renderOrder', 'lineWidth',\n            'ignorePicking', 'ignorePreZ', 'ignoreGBuffer'\n        ];\n        return function() {\n            var renderable = Node.prototype.clone.call(this);\n\n            renderable.geometry = this.geometry;\n            renderable.material = this.material;\n\n            for (var i = 0; i < properties.length; i++) {\n                var name = properties[i];\n                // Try not to overwrite the prototype property\n                if (renderable[name] !== this[name]) {\n                    renderable[name] = this[name];\n                }\n            }\n\n            return renderable;\n        };\n    })()\n});\n\n/**\n * @type {number}\n */\nRenderable.POINTS = glenum.POINTS;\n/**\n * @type {number}\n */\nRenderable.LINES = glenum.LINES;\n/**\n * @type {number}\n */\nRenderable.LINE_LOOP = glenum.LINE_LOOP;\n/**\n * @type {number}\n */\nRenderable.LINE_STRIP = glenum.LINE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLES = glenum.TRIANGLES;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_STRIP = glenum.TRIANGLE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_FAN = glenum.TRIANGLE_FAN;\n/**\n * @type {number}\n */\nRenderable.BACK = glenum.BACK;\n/**\n * @type {number}\n */\nRenderable.FRONT = glenum.FRONT;\n/**\n * @type {number}\n */\nRenderable.FRONT_AND_BACK = glenum.FRONT_AND_BACK;\n/**\n * @type {number}\n */\nRenderable.CW = glenum.CW;\n/**\n * @type {number}\n */\nRenderable.CCW = glenum.CCW;\n\nexport default Renderable;\n","import Base from './core/Base';\nimport Vector3 from './math/Vector3';\nimport Quaternion from './math/Quaternion';\nimport Matrix4 from './math/Matrix4';\nimport mat4 from './glmatrix/mat4';\nimport BoundingBox from './math/BoundingBox';\n\nvar nameId = 0;\n\n/**\n * @constructor clay.Node\n * @extends clay.core.Base\n */\nvar Node = Base.extend(/** @lends clay.Node# */{\n    /**\n     * Scene node name\n     * @type {string}\n     */\n    name: '',\n\n    /**\n     * Position relative to its parent node. aka translation.\n     * @type {clay.Vector3}\n     */\n    position: null,\n\n    /**\n     * Rotation relative to its parent node. Represented by a quaternion\n     * @type {clay.Quaternion}\n     */\n    rotation: null,\n\n    /**\n     * Scale relative to its parent node\n     * @type {clay.Vector3}\n     */\n    scale: null,\n\n    /**\n     * Affine transform matrix relative to its root scene.\n     * @type {clay.Matrix4}\n     */\n    worldTransform: null,\n\n    /**\n     * Affine transform matrix relative to its parent node.\n     * Composited with position, rotation and scale.\n     * @type {clay.Matrix4}\n     */\n    localTransform: null,\n\n    /**\n     * If the local transform is update from SRT(scale, rotation, translation, which is position here) each frame\n     * @type {boolean}\n     */\n    autoUpdateLocalTransform: true,\n\n    /**\n     * Parent of current scene node\n     * @type {?clay.Node}\n     * @private\n     */\n    _parent: null,\n    /**\n     * The root scene mounted. Null if it is a isolated node\n     * @type {?clay.Scene}\n     * @private\n     */\n    _scene: null,\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _needsUpdateWorldTransform: true,\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _inIterating: false,\n\n    // Depth for transparent list sorting\n    __depth: 0\n\n}, function () {\n\n    if (!this.name) {\n        this.name = (this.type || 'NODE') + '_' + (nameId++);\n    }\n\n    if (!this.position) {\n        this.position = new Vector3();\n    }\n    if (!this.rotation) {\n        this.rotation = new Quaternion();\n    }\n    if (!this.scale) {\n        this.scale = new Vector3(1, 1, 1);\n    }\n\n    this.worldTransform = new Matrix4();\n    this.localTransform = new Matrix4();\n\n    this._children = [];\n\n},\n/**@lends clay.Node.prototype. */\n{\n\n    /**\n     * @type {?clay.Vector3}\n     * @instance\n     */\n    target: null,\n    /**\n     * If node and its chilren invisible\n     * @type {boolean}\n     * @instance\n     */\n    invisible: false,\n\n    /**\n     * If Node is a skinned mesh\n     * @return {boolean}\n     */\n    isSkinnedMesh: function () {\n        return false;\n    },\n    /**\n     * Return true if it is a renderable scene node, like Mesh and ParticleSystem\n     * @return {boolean}\n     */\n    isRenderable: function () {\n        return false;\n    },\n\n    /**\n     * Set the name of the scene node\n     * @param {string} name\n     */\n    setName: function (name) {\n        var scene = this._scene;\n        if (scene) {\n            var nodeRepository = scene._nodeRepository;\n            delete nodeRepository[this.name];\n            nodeRepository[name] = this;\n        }\n        this.name = name;\n    },\n\n    /**\n     * Add a child node\n     * @param {clay.Node} node\n     */\n    add: function (node) {\n        var originalParent = node._parent;\n        if (originalParent === this) {\n            return;\n        }\n        if (originalParent) {\n            originalParent.remove(node);\n        }\n        node._parent = this;\n        this._children.push(node);\n\n        var scene = this._scene;\n        if (scene && scene !== node.scene) {\n            node.traverse(this._addSelfToScene, this);\n        }\n        // Mark children needs update transform\n        // In case child are remove and added again after parent moved\n        node._needsUpdateWorldTransform = true;\n    },\n\n    /**\n     * Remove the given child scene node\n     * @param {clay.Node} node\n     */\n    remove: function (node) {\n        var children = this._children;\n        var idx = children.indexOf(node);\n        if (idx < 0) {\n            return;\n        }\n\n        children.splice(idx, 1);\n        node._parent = null;\n\n        if (this._scene) {\n            node.traverse(this._removeSelfFromScene, this);\n        }\n    },\n\n    /**\n     * Remove all children\n     */\n    removeAll: function () {\n        var children = this._children;\n\n        for (var idx = 0; idx < children.length; idx++) {\n            children[idx]._parent = null;\n\n            if (this._scene) {\n                children[idx].traverse(this._removeSelfFromScene, this);\n            }\n        }\n\n        this._children = [];\n    },\n\n    /**\n     * Get the scene mounted\n     * @return {clay.Scene}\n     */\n    getScene: function () {\n        return this._scene;\n    },\n\n    /**\n     * Get parent node\n     * @return {clay.Scene}\n     */\n    getParent: function () {\n        return this._parent;\n    },\n\n    _removeSelfFromScene: function (descendant) {\n        descendant._scene.removeFromScene(descendant);\n        descendant._scene = null;\n    },\n\n    _addSelfToScene: function (descendant) {\n        this._scene.addToScene(descendant);\n        descendant._scene = this._scene;\n    },\n\n    /**\n     * Return true if it is ancestor of the given scene node\n     * @param {clay.Node} node\n     */\n    isAncestor: function (node) {\n        var parent = node._parent;\n        while(parent) {\n            if (parent === this) {\n                return true;\n            }\n            parent = parent._parent;\n        }\n        return false;\n    },\n\n    /**\n     * Get a new created array of all children nodes\n     * @return {clay.Node[]}\n     */\n    children: function () {\n        return this._children.slice();\n    },\n\n    /**\n     * Get child scene node at given index.\n     * @param {number} idx\n     * @return {clay.Node}\n     */\n    childAt: function (idx) {\n        return this._children[idx];\n    },\n\n    /**\n     * Get first child with the given name\n     * @param {string} name\n     * @return {clay.Node}\n     */\n    getChildByName: function (name) {\n        var children = this._children;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].name === name) {\n                return children[i];\n            }\n        }\n    },\n\n    /**\n     * Get first descendant have the given name\n     * @param {string} name\n     * @return {clay.Node}\n     */\n    getDescendantByName: function (name) {\n        var children = this._children;\n        for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            if (child.name === name) {\n                return child;\n            } else {\n                var res = child.getDescendantByName(name);\n                if (res) {\n                    return res;\n                }\n            }\n        }\n    },\n\n    /**\n     * Query descendant node by path\n     * @param {string} path\n     * @return {clay.Node}\n     * @example\n     *  node.queryNode('root/parent/child');\n     */\n    queryNode: function (path) {\n        if (!path) {\n            return;\n        }\n        // TODO Name have slash ?\n        var pathArr = path.split('/');\n        var current = this;\n        for (var i = 0; i < pathArr.length; i++) {\n            var name = pathArr[i];\n            // Skip empty\n            if (!name) {\n                continue;\n            }\n            var found = false;\n            var children = current._children;\n            for (var j = 0; j < children.length; j++) {\n                var child = children[j];\n                if (child.name === name) {\n                    current = child;\n                    found = true;\n                    break;\n                }\n            }\n            // Early return if not found\n            if (!found) {\n                return;\n            }\n        }\n\n        return current;\n    },\n\n    /**\n     * Get query path, relative to rootNode(default is scene)\n     * @param {clay.Node} [rootNode]\n     * @return {string}\n     */\n    getPath: function (rootNode) {\n        if (!this._parent) {\n            return '/';\n        }\n\n        var current = this._parent;\n        var path = this.name;\n        while (current._parent) {\n            path = current.name + '/' + path;\n            if (current._parent == rootNode) {\n                break;\n            }\n            current = current._parent;\n        }\n        if (!current._parent && rootNode) {\n            return null;\n        }\n        return path;\n    },\n\n    /**\n     * Depth first traverse all its descendant scene nodes.\n     *\n     * **WARN** Don't do `add`, `remove` operation in the callback during traverse.\n     * @param {Function} callback\n     * @param {Node} [context]\n     */\n    traverse: function (callback, context) {\n        callback.call(context, this);\n        var _children = this._children;\n        for(var i = 0, len = _children.length; i < len; i++) {\n            _children[i].traverse(callback, context);\n        }\n    },\n\n    /**\n     * Traverse all children nodes.\n     *\n     * **WARN** DON'T do `add`, `remove` operation in the callback during iteration.\n     *\n     * @param {Function} callback\n     * @param {Node} [context]\n     */\n    eachChild: function (callback, context) {\n        var _children = this._children;\n        for(var i = 0, len = _children.length; i < len; i++) {\n            var child = _children[i];\n            callback.call(context, child, i);\n        }\n    },\n\n    /**\n     * Set the local transform and decompose to SRT\n     * @param {clay.Matrix4} matrix\n     */\n    setLocalTransform: function (matrix) {\n        mat4.copy(this.localTransform.array, matrix.array);\n        this.decomposeLocalTransform();\n    },\n\n    /**\n     * Decompose the local transform to SRT\n     */\n    decomposeLocalTransform: function (keepScale) {\n        var scale = !keepScale ? this.scale: null;\n        this.localTransform.decomposeMatrix(scale, this.rotation, this.position);\n    },\n\n    /**\n     * Set the world transform and decompose to SRT\n     * @param {clay.Matrix4} matrix\n     */\n    setWorldTransform: function (matrix) {\n        mat4.copy(this.worldTransform.array, matrix.array);\n        this.decomposeWorldTransform();\n    },\n\n    /**\n     * Decompose the world transform to SRT\n     * @function\n     */\n    decomposeWorldTransform: (function () {\n\n        var tmp = mat4.create();\n\n        return function (keepScale) {\n            var localTransform = this.localTransform;\n            var worldTransform = this.worldTransform;\n            // Assume world transform is updated\n            if (this._parent) {\n                mat4.invert(tmp, this._parent.worldTransform.array);\n                mat4.multiply(localTransform.array, tmp, worldTransform.array);\n            } else {\n                mat4.copy(localTransform.array, worldTransform.array);\n            }\n            var scale = !keepScale ? this.scale: null;\n            localTransform.decomposeMatrix(scale, this.rotation, this.position);\n        };\n    })(),\n\n    transformNeedsUpdate: function () {\n        return this.position._dirty\n            || this.rotation._dirty\n            || this.scale._dirty;\n    },\n\n    /**\n     * Update local transform from SRT\n     * Notice that local transform will not be updated if _dirty mark of position, rotation, scale is all false\n     */\n    updateLocalTransform: function () {\n        var position = this.position;\n        var rotation = this.rotation;\n        var scale = this.scale;\n\n        if (this.transformNeedsUpdate()) {\n            var m = this.localTransform.array;\n\n            // Transform order, scale->rotation->position\n            mat4.fromRotationTranslation(m, rotation.array, position.array);\n\n            mat4.scale(m, m, scale.array);\n\n            rotation._dirty = false;\n            scale._dirty = false;\n            position._dirty = false;\n\n            this._needsUpdateWorldTransform = true;\n        }\n    },\n\n    /**\n     * Update world transform, assume its parent world transform have been updated\n     * @private\n     */\n    _updateWorldTransformTopDown: function () {\n        var localTransform = this.localTransform.array;\n        var worldTransform = this.worldTransform.array;\n        if (this._parent) {\n            mat4.multiplyAffine(\n                worldTransform,\n                this._parent.worldTransform.array,\n                localTransform\n            );\n        }\n        else {\n            mat4.copy(worldTransform, localTransform);\n        }\n    },\n\n    /**\n     * Update world transform before whole scene is updated.\n     */\n    updateWorldTransform: function () {\n        // Find the root node which transform needs update;\n        var rootNodeIsDirty = this;\n        while (rootNodeIsDirty && rootNodeIsDirty.getParent()\n            && rootNodeIsDirty.getParent().transformNeedsUpdate()\n        ) {\n            rootNodeIsDirty = rootNodeIsDirty.getParent();\n        }\n        rootNodeIsDirty.update();\n    },\n\n    /**\n     * Update local transform and world transform recursively\n     * @param {boolean} forceUpdateWorld\n     */\n    update: function (forceUpdateWorld) {\n        if (this.autoUpdateLocalTransform) {\n            this.updateLocalTransform();\n        }\n        else {\n            // Transform is manually setted\n            forceUpdateWorld = true;\n        }\n\n        if (forceUpdateWorld || this._needsUpdateWorldTransform) {\n            this._updateWorldTransformTopDown();\n            forceUpdateWorld = true;\n            this._needsUpdateWorldTransform = false;\n        }\n\n        var children = this._children;\n        for(var i = 0, len = children.length; i < len; i++) {\n            children[i].update(forceUpdateWorld);\n        }\n    },\n\n    /**\n     * Get bounding box of node\n     * @param  {Function} [filter]\n     * @param  {clay.BoundingBox} [out]\n     * @return {clay.BoundingBox}\n     */\n    // TODO Skinning\n    getBoundingBox: (function () {\n        function defaultFilter (el) {\n            return !el.invisible && el.geometry;\n        }\n        var tmpBBox = new BoundingBox();\n        var tmpMat4 = new Matrix4();\n        var invWorldTransform = new Matrix4();\n        return function (filter, out) {\n            out = out || new BoundingBox();\n            filter = filter || defaultFilter;\n\n            if (this._parent) {\n                Matrix4.invert(invWorldTransform, this._parent.worldTransform);\n            }\n            else {\n                Matrix4.identity(invWorldTransform);\n            }\n\n            this.traverse(function (mesh) {\n                if (mesh.geometry && mesh.geometry.boundingBox) {\n                    tmpBBox.copy(mesh.geometry.boundingBox);\n                    Matrix4.multiply(tmpMat4, invWorldTransform, mesh.worldTransform);\n                    tmpBBox.applyTransform(tmpMat4);\n                    out.union(tmpBBox);\n                }\n            }, this, defaultFilter);\n\n            return out;\n        };\n    })(),\n\n    /**\n     * Get world position, extracted from world transform\n     * @param  {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    getWorldPosition: function (out) {\n        // PENDING\n        if (this.transformNeedsUpdate()) {\n            this.updateWorldTransform();\n        }\n        var m = this.worldTransform.array;\n        if (out) {\n            var arr = out.array;\n            arr[0] = m[12];\n            arr[1] = m[13];\n            arr[2] = m[14];\n            return out;\n        }\n        else {\n            return new Vector3(m[12], m[13], m[14]);\n        }\n    },\n\n    /**\n     * Clone a new node\n     * @return {Node}\n     */\n    clone: function () {\n        var node = new this.constructor();\n\n        var children = this._children;\n\n        node.setName(this.name);\n        node.position.copy(this.position);\n        node.rotation.copy(this.rotation);\n        node.scale.copy(this.scale);\n\n        for (var i = 0; i < children.length; i++) {\n            node.add(children[i].clone());\n        }\n\n        return node;\n    },\n\n    /**\n     * Rotate the node around a axis by angle degrees, axis passes through point\n     * @param {clay.Vector3} point Center point\n     * @param {clay.Vector3} axis  Center axis\n     * @param {number}       angle Rotation angle\n     * @see http://docs.unity3d.com/Documentation/ScriptReference/Transform.RotateAround.html\n     * @function\n     */\n    rotateAround: (function () {\n        var v = new Vector3();\n        var RTMatrix = new Matrix4();\n\n        // TODO improve performance\n        return function (point, axis, angle) {\n\n            v.copy(this.position).subtract(point);\n\n            var localTransform = this.localTransform;\n            localTransform.identity();\n            // parent node\n            localTransform.translate(point);\n            localTransform.rotate(angle, axis);\n\n            RTMatrix.fromRotationTranslation(this.rotation, v);\n            localTransform.multiply(RTMatrix);\n            localTransform.scale(this.scale);\n\n            this.decomposeLocalTransform();\n            this._needsUpdateWorldTransform = true;\n        };\n    })(),\n\n    /**\n     * @param {clay.Vector3} target\n     * @param {clay.Vector3} [up]\n     * @see http://www.opengl.org/sdk/docs/man2/xhtml/gluLookAt.xml\n     * @function\n     */\n    lookAt: (function () {\n        var m = new Matrix4();\n        return function (target, up) {\n            m.lookAt(this.position, target, up || this.localTransform.y).invert();\n            this.setLocalTransform(m);\n\n            this.target = target;\n        };\n    })()\n});\n\nexport default Node;\n","import quat from '../glmatrix/quat';\nimport mat3 from '../glmatrix/mat3';\n\n/**\n * @constructor\n * @alias clay.Quaternion\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Quaternion = function (x, y, z, w) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    w = w === undefined ? 1 : w;\n\n    /**\n     * Storage of Quaternion, read and write of x, y, z, w will change the values in array\n     * All methods also operate on the array instead of x, y, z, w components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Quaternion#\n     */\n    this.array = quat.fromValues(x, y, z, w);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Quaternion#\n     */\n    this._dirty = true;\n};\n\nQuaternion.prototype = {\n\n    constructor: Quaternion,\n\n    /**\n     * Add b to self\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    add: function (b) {\n        quat.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate the w component from x, y, z component\n     * @return {clay.Quaternion}\n     */\n    calculateW: function () {\n        quat.calculateW(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @param  {number}  w\n     * @return {clay.Quaternion}\n     */\n    set: function (x, y, z, w) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this.array[3] = w;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y, z and w components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Quaternion}\n     */\n    setArray: function (arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n        this.array[3] = arr[3];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Quaternion\n     * @return {clay.Quaternion}\n     */\n    clone: function () {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    },\n\n    /**\n     * Calculates the conjugate of self If the quaternion is normalized,\n     * this function is faster than invert and produces the same result.\n     *\n     * @return {clay.Quaternion}\n     */\n    conjugate: function () {\n        quat.conjugate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    copy: function (b) {\n        quat.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Quaternion} b\n     * @return {number}\n     */\n    dot: function (b) {\n        return quat.dot(this.array, b.array);\n    },\n\n    /**\n     * Set from the given 3x3 rotation matrix\n     * @param  {clay.Matrix3} m\n     * @return {clay.Quaternion}\n     */\n    fromMat3: function (m) {\n        quat.fromMat3(this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from the given 4x4 rotation matrix\n     * The 4th column and 4th row will be droped\n     * @param  {clay.Matrix4} m\n     * @return {clay.Quaternion}\n     */\n    fromMat4: (function () {\n        var m3 = mat3.create();\n        return function (m) {\n            mat3.fromMat4(m3, m.array);\n            // TODO Not like mat4, mat3 in glmatrix seems to be row-based\n            mat3.transpose(m3, m3);\n            quat.fromMat3(this.array, m3);\n            this._dirty = true;\n            return this;\n        };\n    })(),\n\n    /**\n     * Set to identity quaternion\n     * @return {clay.Quaternion}\n     */\n    identity: function () {\n        quat.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Invert self\n     * @return {clay.Quaternion}\n     */\n    invert: function () {\n        quat.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function () {\n        return quat.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function () {\n        return quat.length(this.array);\n    },\n\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Quaternion} a\n     * @param  {clay.Quaternion} b\n     * @param  {number}  t\n     * @return {clay.Quaternion}\n     */\n    lerp: function (a, b, t) {\n        quat.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    mul: function (b) {\n        quat.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Quaternion} a\n     * @return {clay.Quaternion}\n     */\n    mulLeft: function (a) {\n        quat.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    multiply: function (b) {\n        quat.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply a and self\n     * Quaternion mutiply is not commutative, so the result of mutiplyLeft is different with multiply.\n     * @param  {clay.Quaternion} a\n     * @return {clay.Quaternion}\n     */\n    multiplyLeft: function (a) {\n        quat.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Quaternion}\n     */\n    normalize: function () {\n        quat.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about X axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateX: function (rad) {\n        quat.rotateX(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Y axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateY: function (rad) {\n        quat.rotateY(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Z axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateZ: function (rad) {\n        quat.rotateZ(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Sets self to represent the shortest rotation from Vector3 a to Vector3 b.\n     * a and b needs to be normalized\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @return {clay.Quaternion}\n     */\n    rotationTo: function (a, b) {\n        quat.rotationTo(this.array, a.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Sets self with values corresponding to the given axes\n     * @param {clay.Vector3} view\n     * @param {clay.Vector3} right\n     * @param {clay.Vector3} up\n     * @return {clay.Quaternion}\n     */\n    setAxes: function (view, right, up) {\n        quat.setAxes(this.array, view.array, right.array, up.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Sets self with a rotation axis and rotation angle\n     * @param {clay.Vector3} axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    setAxisAngle: function (axis, rad) {\n        quat.setAxisAngle(this.array, axis.array, rad);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Perform spherical linear interpolation between a and b\n     * @param  {clay.Quaternion} a\n     * @param  {clay.Quaternion} b\n     * @param  {number} t\n     * @return {clay.Quaternion}\n     */\n    slerp: function (a, b, t) {\n        quat.slerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function () {\n        return quat.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function () {\n        return quat.squaredLength(this.array);\n    },\n\n    /**\n     * Set from euler\n     * @param {clay.Vector3} v\n     * @param {String} order\n     */\n    fromEuler: function (v, order) {\n        return Quaternion.fromEuler(this, v, order);\n    },\n\n    toString: function () {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Quaternion.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name w\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'w', {\n        get: function () {\n            return this.array[3];\n        },\n        set: function (value) {\n            this.array[3] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.add = function (out, a, b) {\n    quat.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {number}     x\n * @param  {number}     y\n * @param  {number}     z\n * @param  {number}     w\n * @return {clay.Quaternion}\n */\nQuaternion.set = function (out, x, y, z, w) {\n    quat.set(out.array, x, y, z, w);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.copy = function (out, b) {\n    quat.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.calculateW = function (out, a) {\n    quat.calculateW(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.conjugate = function (out, a) {\n    quat.conjugate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @return {clay.Quaternion}\n */\nQuaternion.identity = function (out) {\n    quat.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.invert = function (out, a) {\n    quat.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {number}\n */\nQuaternion.dot = function (a, b) {\n    return quat.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.len = function (a) {\n    return quat.length(a.array);\n};\n\n// Quaternion.length = Quaternion.len;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @param  {number}     t\n * @return {clay.Quaternion}\n */\nQuaternion.lerp = function (out, a, b, t) {\n    quat.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @param  {number}     t\n * @return {clay.Quaternion}\n */\nQuaternion.slerp = function (out, a, b, t) {\n    quat.slerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.mul = function (out, a, b) {\n    quat.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.multiply = Quaternion.mul;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateX = function (out, a, rad) {\n    quat.rotateX(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateY = function (out, a, rad) {\n    quat.rotateY(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateZ = function (out, a, rad) {\n    quat.rotateZ(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    axis\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.setAxisAngle = function (out, axis, rad) {\n    quat.setAxisAngle(out.array, axis.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.normalize = function (out, a) {\n    quat.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.sqrLen = function (a) {\n    return quat.sqrLen(a.array);\n};\n\n/**\n * @function\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.squaredLength = Quaternion.sqrLen;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Matrix3}    m\n * @return {clay.Quaternion}\n */\nQuaternion.fromMat3 = function (out, m) {\n    quat.fromMat3(out.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    view\n * @param  {clay.Vector3}    right\n * @param  {clay.Vector3}    up\n * @return {clay.Quaternion}\n */\nQuaternion.setAxes = function (out, view, right, up) {\n    quat.setAxes(out.array, view.array, right.array, up.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    a\n * @param  {clay.Vector3}    b\n * @return {clay.Quaternion}\n */\nQuaternion.rotationTo = function (out, a, b) {\n    quat.rotationTo(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * Set quaternion from euler\n * @param {clay.Quaternion} out\n * @param {clay.Vector3} v\n * @param {String} order\n */\nQuaternion.fromEuler = function (out, v, order) {\n\n    out._dirty = true;\n\n    v = v.array;\n    var target = out.array;\n    var c1 = Math.cos(v[0] / 2);\n    var c2 = Math.cos(v[1] / 2);\n    var c3 = Math.cos(v[2] / 2);\n    var s1 = Math.sin(v[0] / 2);\n    var s2 = Math.sin(v[1] / 2);\n    var s3 = Math.sin(v[2] / 2);\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    // http://www.mathworks.com/matlabcentral/fileexchange/\n    //  20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //  content/SpinCalc.m\n\n    switch (order) {\n        case 'XYZ':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'YXZ':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n        case 'ZXY':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'ZYX':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n        case 'YZX':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'XZY':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n    }\n};\n\nexport default Quaternion;\n","import Vector3 from './Vector3';\nimport vec3 from '../glmatrix/vec3';\n\nvar vec3Set = vec3.set;\nvar vec3Copy = vec3.copy;\n\n/**\n * Axis aligned bounding box\n * @constructor\n * @alias clay.BoundingBox\n * @param {clay.Vector3} [min]\n * @param {clay.Vector3} [max]\n */\nvar BoundingBox = function (min, max) {\n\n    /**\n     * Minimum coords of bounding box\n     * @type {clay.Vector3}\n     */\n    this.min = min || new Vector3(Infinity, Infinity, Infinity);\n\n    /**\n     * Maximum coords of bounding box\n     * @type {clay.Vector3}\n     */\n    this.max = max || new Vector3(-Infinity, -Infinity, -Infinity);\n\n    this.vertices = null;\n};\n\nBoundingBox.prototype = {\n\n    constructor: BoundingBox,\n    /**\n     * Update min and max coords from a vertices array\n     * @param  {array} vertices\n     */\n    updateFromVertices: function (vertices) {\n        if (vertices.length > 0) {\n            var min = this.min;\n            var max = this.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            vec3Copy(minArr, vertices[0]);\n            vec3Copy(maxArr, vertices[0]);\n            for (var i = 1; i < vertices.length; i++) {\n                var vertex = vertices[i];\n\n                if (vertex[0] < minArr[0]) { minArr[0] = vertex[0]; }\n                if (vertex[1] < minArr[1]) { minArr[1] = vertex[1]; }\n                if (vertex[2] < minArr[2]) { minArr[2] = vertex[2]; }\n\n                if (vertex[0] > maxArr[0]) { maxArr[0] = vertex[0]; }\n                if (vertex[1] > maxArr[1]) { maxArr[1] = vertex[1]; }\n                if (vertex[2] > maxArr[2]) { maxArr[2] = vertex[2]; }\n            }\n            min._dirty = true;\n            max._dirty = true;\n        }\n    },\n\n    /**\n     * Union operation with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    union: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        vec3.min(min.array, min.array, bbox.min.array);\n        vec3.max(max.array, max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * Intersection operation with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    intersection: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        vec3.max(min.array, min.array, bbox.min.array);\n        vec3.min(max.array, max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * If intersect with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     * @return {boolean}\n     */\n    intersectBoundingBox: function (bbox) {\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _min2 = bbox.min.array;\n        var _max2 = bbox.max.array;\n\n        return ! (_min[0] > _max2[0] || _min[1] > _max2[1] || _min[2] > _max2[2]\n            || _max[0] < _min2[0] || _max[1] < _min2[1] || _max[2] < _min2[2]);\n    },\n\n    /**\n     * If contain another bounding box entirely\n     * @param  {clay.BoundingBox} bbox\n     * @return {boolean}\n     */\n    containBoundingBox: function (bbox) {\n\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _min2 = bbox.min.array;\n        var _max2 = bbox.max.array;\n\n        return _min[0] <= _min2[0] && _min[1] <= _min2[1] && _min[2] <= _min2[2]\n            && _max[0] >= _max2[0] && _max[1] >= _max2[1] && _max[2] >= _max2[2];\n    },\n\n    /**\n     * If contain point entirely\n     * @param  {clay.Vector3} point\n     * @return {boolean}\n     */\n    containPoint: function (p) {\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _p = p.array;\n\n        return _min[0] <= _p[0] && _min[1] <= _p[1] && _min[2] <= _p[2]\n            && _max[0] >= _p[0] && _max[1] >= _p[1] && _max[2] >= _p[2];\n    },\n\n    /**\n     * If bounding box is finite\n     */\n    isFinite: function () {\n        var _min = this.min.array;\n        var _max = this.max.array;\n        return isFinite(_min[0]) && isFinite(_min[1]) && isFinite(_min[2])\n            && isFinite(_max[0]) && isFinite(_max[1]) && isFinite(_max[2]);\n    },\n\n    /**\n     * Apply an affine transform matrix to the bounding box\n     * @param  {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n        this.transformFrom(this, matrix);\n    },\n\n    /**\n     * Get from another bounding box and an affine transform matrix.\n     * @param {clay.BoundingBox} source\n     * @param {clay.Matrix4} matrix\n     */\n    transformFrom: (function () {\n        // http://dev.theomader.com/transform-bounding-boxes/\n        var xa = vec3.create();\n        var xb = vec3.create();\n        var ya = vec3.create();\n        var yb = vec3.create();\n        var za = vec3.create();\n        var zb = vec3.create();\n\n        return function (source, matrix) {\n            var min = source.min.array;\n            var max = source.max.array;\n\n            var m = matrix.array;\n\n            xa[0] = m[0] * min[0]; xa[1] = m[1] * min[0]; xa[2] = m[2] * min[0];\n            xb[0] = m[0] * max[0]; xb[1] = m[1] * max[0]; xb[2] = m[2] * max[0];\n\n            ya[0] = m[4] * min[1]; ya[1] = m[5] * min[1]; ya[2] = m[6] * min[1];\n            yb[0] = m[4] * max[1]; yb[1] = m[5] * max[1]; yb[2] = m[6] * max[1];\n\n            za[0] = m[8] * min[2]; za[1] = m[9] * min[2]; za[2] = m[10] * min[2];\n            zb[0] = m[8] * max[2]; zb[1] = m[9] * max[2]; zb[2] = m[10] * max[2];\n\n            min = this.min.array;\n            max = this.max.array;\n            min[0] = Math.min(xa[0], xb[0]) + Math.min(ya[0], yb[0]) + Math.min(za[0], zb[0]) + m[12];\n            min[1] = Math.min(xa[1], xb[1]) + Math.min(ya[1], yb[1]) + Math.min(za[1], zb[1]) + m[13];\n            min[2] = Math.min(xa[2], xb[2]) + Math.min(ya[2], yb[2]) + Math.min(za[2], zb[2]) + m[14];\n\n            max[0] = Math.max(xa[0], xb[0]) + Math.max(ya[0], yb[0]) + Math.max(za[0], zb[0]) + m[12];\n            max[1] = Math.max(xa[1], xb[1]) + Math.max(ya[1], yb[1]) + Math.max(za[1], zb[1]) + m[13];\n            max[2] = Math.max(xa[2], xb[2]) + Math.max(ya[2], yb[2]) + Math.max(za[2], zb[2]) + m[14];\n\n            this.min._dirty = true;\n            this.max._dirty = true;\n\n            return this;\n        };\n    })(),\n\n    /**\n     * Apply a projection matrix to the bounding box\n     * @param  {clay.Matrix4} matrix\n     */\n    applyProjection: function (matrix) {\n        var min = this.min.array;\n        var max = this.max.array;\n\n        var m = matrix.array;\n        // min in min z\n        var v10 = min[0];\n        var v11 = min[1];\n        var v12 = min[2];\n        // max in min z\n        var v20 = max[0];\n        var v21 = max[1];\n        var v22 = min[2];\n        // max in max z\n        var v30 = max[0];\n        var v31 = max[1];\n        var v32 = max[2];\n\n        if (m[15] === 1) {  // Orthographic projection\n            min[0] = m[0] * v10 + m[12];\n            min[1] = m[5] * v11 + m[13];\n            max[2] = m[10] * v12 + m[14];\n\n            max[0] = m[0] * v30 + m[12];\n            max[1] = m[5] * v31 + m[13];\n            min[2] = m[10] * v32 + m[14];\n        }\n        else {\n            var w = -1 / v12;\n            min[0] = m[0] * v10 * w;\n            min[1] = m[5] * v11 * w;\n            max[2] = (m[10] * v12 + m[14]) * w;\n\n            w = -1 / v22;\n            max[0] = m[0] * v20 * w;\n            max[1] = m[5] * v21 * w;\n\n            w = -1 / v32;\n            min[2] = (m[10] * v32 + m[14]) * w;\n        }\n        this.min._dirty = true;\n        this.max._dirty = true;\n\n        return this;\n    },\n\n    updateVertices: function () {\n        var vertices = this.vertices;\n        if (!vertices) {\n            // Cube vertices\n            vertices = [];\n            for (var i = 0; i < 8; i++) {\n                vertices[i] = vec3.fromValues(0, 0, 0);\n            }\n\n            /**\n             * Eight coords of bounding box\n             * @type {Float32Array[]}\n             */\n            this.vertices = vertices;\n        }\n        var min = this.min.array;\n        var max = this.max.array;\n        //--- min z\n        // min x\n        vec3Set(vertices[0], min[0], min[1], min[2]);\n        vec3Set(vertices[1], min[0], max[1], min[2]);\n        // max x\n        vec3Set(vertices[2], max[0], min[1], min[2]);\n        vec3Set(vertices[3], max[0], max[1], min[2]);\n\n        //-- max z\n        vec3Set(vertices[4], min[0], min[1], max[2]);\n        vec3Set(vertices[5], min[0], max[1], max[2]);\n        vec3Set(vertices[6], max[0], min[1], max[2]);\n        vec3Set(vertices[7], max[0], max[1], max[2]);\n\n        return this;\n    },\n    /**\n     * Copy values from another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    copy: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        vec3Copy(min.array, bbox.min.array);\n        vec3Copy(max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new bounding box\n     * @return {clay.BoundingBox}\n     */\n    clone: function () {\n        var boundingBox = new BoundingBox();\n        boundingBox.copy(this);\n        return boundingBox;\n    }\n};\n\nexport default BoundingBox;\n","/**\n * Base class for all textures like compressed texture, texture2d, texturecube\n * TODO mapping\n */\nimport Base from './core/Base';\nimport glenum from './core/glenum';\nimport Cache from './core/Cache';\n\n/**\n * @constructor\n * @alias clay.Texture\n * @extends clay.core.Base\n */\nvar Texture = Base.extend( /** @lends clay.Texture# */ {\n    /**\n     * Texture width, readonly when the texture source is image\n     * @type {number}\n     */\n    width: 512,\n    /**\n     * Texture height, readonly when the texture source is image\n     * @type {number}\n     */\n    height: 512,\n    /**\n     * Texel data type.\n     * Possible values:\n     *  + {@link clay.Texture.UNSIGNED_BYTE}\n     *  + {@link clay.Texture.HALF_FLOAT}\n     *  + {@link clay.Texture.FLOAT}\n     *  + {@link clay.Texture.UNSIGNED_INT_24_8_WEBGL}\n     *  + {@link clay.Texture.UNSIGNED_INT}\n     * @type {number}\n     */\n    type: glenum.UNSIGNED_BYTE,\n    /**\n     * Format of texel data\n     * Possible values:\n     *  + {@link clay.Texture.RGBA}\n     *  + {@link clay.Texture.DEPTH_COMPONENT}\n     *  + {@link clay.Texture.DEPTH_STENCIL}\n     * @type {number}\n     */\n    format: glenum.RGBA,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapS: glenum.REPEAT,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapT: glenum.REPEAT,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_LINEAR}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_LINEAR}\n     * @type {number}\n     */\n    minFilter: glenum.LINEAR_MIPMAP_LINEAR,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     * @type {number}\n     */\n    magFilter: glenum.LINEAR,\n    /**\n     * If enable mimap.\n     * @type {boolean}\n     */\n    useMipmap: true,\n\n    /**\n     * Anisotropic filtering, enabled if value is larger than 1\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_filter_anisotropic\n     * @type {number}\n     */\n    anisotropic: 1,\n    // pixelStorei parameters, not available when texture is used as render target\n    // http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml\n    /**\n     * If flip in y axis for given image source\n     * @type {boolean}\n     * @default true\n     */\n    flipY: true,\n\n    /**\n     * A flag to indicate if texture source is sRGB\n     */\n    sRGB: true,\n    /**\n     * @type {number}\n     * @default 4\n     */\n    unpackAlignment: 4,\n    /**\n     * @type {boolean}\n     * @default false\n     */\n    premultiplyAlpha: false,\n\n    /**\n     * Dynamic option for texture like video\n     * @type {boolean}\n     */\n    dynamic: false,\n\n    NPOT: false,\n\n    // PENDING\n    // Init it here to avoid deoptimization when it's assigned in application dynamically\n    __used: 0\n\n}, function () {\n    this._cache = new Cache();\n},\n/** @lends clay.Texture.prototype */\n{\n\n    getWebGLTexture: function (renderer) {\n        var _gl = renderer.gl;\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n\n        if (cache.miss('webgl_texture')) {\n            // In a new gl context, create new texture and set dirty true\n            cache.put('webgl_texture', _gl.createTexture());\n        }\n        if (this.dynamic) {\n            this.update(renderer);\n        }\n        else if (cache.isDirty()) {\n            this.update(renderer);\n            cache.fresh();\n        }\n\n        return cache.get('webgl_texture');\n    },\n\n    bind: function () {},\n    unbind: function () {},\n\n    /**\n     * Mark texture is dirty and update in the next frame\n     */\n    dirty: function () {\n        if (this._cache) {\n            this._cache.dirtyAll();\n        }\n    },\n\n    update: function (renderer) {},\n\n    // Update the common parameters of texture\n    updateCommon: function (renderer) {\n        var _gl = renderer.gl;\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n\n        // Use of none-power of two texture\n        // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences\n        if (this.format === glenum.DEPTH_COMPONENT) {\n            this.useMipmap = false;\n        }\n\n        var sRGBExt = renderer.getGLExtension('EXT_sRGB');\n        // Fallback\n        if (this.format === Texture.SRGB && !sRGBExt) {\n            this.format = Texture.RGB;\n        }\n        if (this.format === Texture.SRGB_ALPHA && !sRGBExt) {\n            this.format = Texture.RGBA;\n        }\n\n        this.NPOT = !this.isPowerOfTwo();\n    },\n\n    getAvailableWrapS: function () {\n        if (this.NPOT) {\n            return glenum.CLAMP_TO_EDGE;\n        }\n        return this.wrapS;\n    },\n    getAvailableWrapT: function () {\n        if (this.NPOT) {\n            return glenum.CLAMP_TO_EDGE;\n        }\n        return this.wrapT;\n    },\n    getAvailableMinFilter: function () {\n        var minFilter = this.minFilter;\n        if (this.NPOT || !this.useMipmap) {\n            if (minFilter === glenum.NEAREST_MIPMAP_NEAREST ||\n                minFilter === glenum.NEAREST_MIPMAP_LINEAR\n            ) {\n                return glenum.NEAREST;\n            }\n            else if (minFilter === glenum.LINEAR_MIPMAP_LINEAR ||\n                minFilter === glenum.LINEAR_MIPMAP_NEAREST\n            ) {\n                return glenum.LINEAR;\n            }\n            else {\n                return minFilter;\n            }\n        }\n        else {\n            return minFilter;\n        }\n    },\n    getAvailableMagFilter: function () {\n        return this.magFilter;\n    },\n\n    nextHighestPowerOfTwo: function (x) {\n        --x;\n        for (var i = 1; i < 32; i <<= 1) {\n            x = x | x >> i;\n        }\n        return x + 1;\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n\n        var webglTexture = cache.get('webgl_texture');\n        if (webglTexture){\n            renderer.gl.deleteTexture(webglTexture);\n        }\n        cache.deleteContext(renderer.__uid__);\n\n    },\n    /**\n     * Test if image of texture is valid and loaded.\n     * @return {boolean}\n     */\n    isRenderable: function () {},\n\n    /**\n     * Test if texture size is power of two\n     * @return {boolean}\n     */\n    isPowerOfTwo: function () {}\n});\n\nObject.defineProperty(Texture.prototype, 'width', {\n    get: function () {\n        return this._width;\n    },\n    set: function (value) {\n        this._width = value;\n    }\n});\nObject.defineProperty(Texture.prototype, 'height', {\n    get: function () {\n        return this._height;\n    },\n    set: function (value) {\n        this._height = value;\n    }\n});\n\n/* DataType */\n\n/**\n * @type {number}\n */\nTexture.BYTE = glenum.BYTE;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_BYTE = glenum.UNSIGNED_BYTE;\n/**\n * @type {number}\n */\nTexture.SHORT = glenum.SHORT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_SHORT = glenum.UNSIGNED_SHORT;\n/**\n * @type {number}\n */\nTexture.INT = glenum.INT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_INT = glenum.UNSIGNED_INT;\n/**\n * @type {number}\n */\nTexture.FLOAT = glenum.FLOAT;\n/**\n * @type {number}\n */\nTexture.HALF_FLOAT = 0x8D61;\n\n/**\n * UNSIGNED_INT_24_8_WEBGL for WEBGL_depth_texture extension\n * @type {number}\n */\nTexture.UNSIGNED_INT_24_8_WEBGL = 34042;\n\n/* PixelFormat */\n/**\n * @type {number}\n */\nTexture.DEPTH_COMPONENT = glenum.DEPTH_COMPONENT;\n/**\n * @type {number}\n */\nTexture.DEPTH_STENCIL = glenum.DEPTH_STENCIL;\n/**\n * @type {number}\n */\nTexture.ALPHA = glenum.ALPHA;\n/**\n * @type {number}\n */\nTexture.RGB = glenum.RGB;\n/**\n * @type {number}\n */\nTexture.RGBA = glenum.RGBA;\n/**\n * @type {number}\n */\nTexture.LUMINANCE = glenum.LUMINANCE;\n/**\n * @type {number}\n */\nTexture.LUMINANCE_ALPHA = glenum.LUMINANCE_ALPHA;\n\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB = 0x8C40;\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB_ALPHA = 0x8C42;\n\n/* Compressed Texture */\nTexture.COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\nTexture.COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\nTexture.COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\nTexture.COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n/* TextureMagFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST = glenum.NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR = glenum.LINEAR;\n\n/* TextureMinFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_NEAREST = glenum.NEAREST_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_NEAREST = glenum.LINEAR_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_LINEAR = glenum.NEAREST_MIPMAP_LINEAR;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_LINEAR = glenum.LINEAR_MIPMAP_LINEAR;\n\n/* TextureWrapMode */\n/**\n * @type {number}\n */\nTexture.REPEAT = glenum.REPEAT;\n/**\n * @type {number}\n */\nTexture.CLAMP_TO_EDGE = glenum.CLAMP_TO_EDGE;\n/**\n * @type {number}\n */\nTexture.MIRRORED_REPEAT = glenum.MIRRORED_REPEAT;\n\n\nexport default Texture;\n","var DIRTY_PREFIX = '__dt__';\n\nvar Cache = function () {\n\n    this._contextId = 0;\n\n    this._caches = [];\n\n    this._context = {};\n};\n\nCache.prototype = {\n\n    use: function (contextId, documentSchema) {\n        var caches = this._caches;\n        if (!caches[contextId]) {\n            caches[contextId] = {};\n\n            if (documentSchema) {\n                caches[contextId] = documentSchema();\n            }\n        }\n        this._contextId = contextId;\n\n        this._context = caches[contextId];\n    },\n\n    put: function (key, value) {\n        this._context[key] = value;\n    },\n\n    get: function (key) {\n        return this._context[key];\n    },\n\n    dirty: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        this.put(key, true);\n    },\n\n    dirtyAll: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var caches = this._caches;\n        for (var i = 0; i < caches.length; i++) {\n            if (caches[i]) {\n                caches[i][key] = true;\n            }\n        }\n    },\n\n    fresh: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        this.put(key, false);\n    },\n\n    freshAll: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var caches = this._caches;\n        for (var i = 0; i < caches.length; i++) {\n            if (caches[i]) {\n                caches[i][key] = false;\n            }\n        }\n    },\n\n    isDirty: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var context = this._context;\n        return  !context.hasOwnProperty(key)\n            || context[key] === true;\n    },\n\n    deleteContext: function (contextId) {\n        delete this._caches[contextId];\n        this._context = {};\n    },\n\n    delete: function (key) {\n        delete this._context[key];\n    },\n\n    clearAll: function () {\n        this._caches = {};\n    },\n\n    getContext: function () {\n        return this._context;\n    },\n\n    eachContext : function (cb, context) {\n        var keys = Object.keys(this._caches);\n        keys.forEach(function (key) {\n            cb && cb.call(context, key);\n        });\n    },\n\n    miss: function (key) {\n        return ! this._context.hasOwnProperty(key);\n    }\n};\n\nCache.prototype.constructor = Cache;\n\nexport default Cache;\n","import Mesh from 'claygl/src/Mesh';\nimport Renderer from 'claygl/src/Renderer';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Shader from 'claygl/src/Shader';\nimport Material from 'claygl/src/Material';\nimport Node3D from 'claygl/src/Node';\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport LRUCache from 'zrender/lib/core/LRU';\nimport textureUtil from 'claygl/src/util/texture';\nimport EChartsSurface from './EChartsSurface';\nimport AmbientCubemapLight from 'claygl/src/light/AmbientCubemap';\nimport AmbientSHLight from 'claygl/src/light/AmbientSH';\nimport shUtil from 'claygl/src/util/sh';\nimport retrieve from './retrieve';\nimport SphereGeometry from 'claygl/src/geometry/Sphere';\nimport PlaneGeometry from 'claygl/src/geometry/Plane';\nimport CubeGeometry from 'claygl/src/geometry/Cube';\nimport AmbientLight from 'claygl/src/light/Ambient';\nimport DirectionalLight from 'claygl/src/light/Directional';\nimport PointLight from 'claygl/src/light/Point';\nimport SpotLight from 'claygl/src/light/Spot';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic'; // Math\n\nimport Vector2 from 'claygl/src/math/Vector2';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector4 from 'claygl/src/math/Vector4';\nimport Quaternion from 'claygl/src/math/Quaternion';\nimport Matrix2 from 'claygl/src/math/Matrix2';\nimport Matrix2d from 'claygl/src/math/Matrix2d';\nimport Matrix3 from 'claygl/src/math/Matrix3';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Plane from 'claygl/src/math/Plane';\nimport Ray from 'claygl/src/math/Ray';\nimport BoundingBox from 'claygl/src/math/BoundingBox';\nimport Frustum from 'claygl/src/math/Frustum';\nimport animatableMixin from './animatableMixin'; // Some common shaders\n\nimport utilGLSL from 'claygl/src/shader/source/util.glsl.js';\nimport prezGLSL from 'claygl/src/shader/source/prez.glsl.js';\nimport commonGLSL from './shader/common.glsl.js';\nimport colorGLSL from './shader/color.glsl.js';\nimport lambertGLSL from './shader/lambert.glsl.js';\nimport realisticGLSL from './shader/realistic.glsl.js';\nimport hatchingGLSL from './shader/hatching.glsl.js';\nimport shadowGLSL from './shader/shadow.glsl.js';\nObject.assign(Node3D.prototype, animatableMixin);\nShader.import(utilGLSL);\nShader.import(prezGLSL);\nShader.import(commonGLSL);\nShader.import(colorGLSL);\nShader.import(lambertGLSL);\nShader.import(realisticGLSL);\nShader.import(hatchingGLSL);\nShader.import(shadowGLSL);\n\nfunction isValueNone(value) {\n  return !value || value === 'none';\n}\n\nfunction isValueImage(value) {\n  return value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof Image;\n}\n\nfunction isECharts(value) {\n  return value.getZr && value.setOption;\n} // Overwrite addToScene and removeFromScene\n\n\nvar oldAddToScene = Scene.prototype.addToScene;\nvar oldRemoveFromScene = Scene.prototype.removeFromScene;\n\nScene.prototype.addToScene = function (node) {\n  oldAddToScene.call(this, node);\n\n  if (this.__zr) {\n    var zr = this.__zr;\n    node.traverse(function (child) {\n      child.__zr = zr;\n\n      if (child.addAnimatorsToZr) {\n        child.addAnimatorsToZr(zr);\n      }\n    });\n  }\n};\n\nScene.prototype.removeFromScene = function (node) {\n  oldRemoveFromScene.call(this, node);\n  node.traverse(function (child) {\n    var zr = child.__zr;\n    child.__zr = null;\n\n    if (zr && child.removeAnimatorsFromZr) {\n      child.removeAnimatorsFromZr(zr);\n    }\n  });\n};\n/**\n * @param {string} textureName\n * @param {string|HTMLImageElement|HTMLCanvasElement} imgValue\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [textureOpts]\n */\n\n\nMaterial.prototype.setTextureImage = function (textureName, imgValue, api, textureOpts) {\n  if (!this.shader) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var material = this;\n  var texture;\n  material.autoUpdateTextureStatus = false; // disableTexture first\n\n  material.disableTexture(textureName);\n\n  if (!isValueNone(imgValue)) {\n    texture = graphicGL.loadTexture(imgValue, api, textureOpts, function (texture) {\n      material.enableTexture(textureName);\n      zr && zr.refresh();\n    }); // Set texture immediately for other code to verify if have this texture.\n\n    material.set(textureName, texture);\n  }\n\n  return texture;\n};\n\nvar graphicGL = {};\ngraphicGL.Renderer = Renderer;\ngraphicGL.Node = Node3D;\ngraphicGL.Mesh = Mesh;\ngraphicGL.Shader = Shader;\ngraphicGL.Material = Material;\ngraphicGL.Texture = Texture;\ngraphicGL.Texture2D = Texture2D; // Geometries\n\ngraphicGL.Geometry = Geometry;\ngraphicGL.SphereGeometry = SphereGeometry;\ngraphicGL.PlaneGeometry = PlaneGeometry;\ngraphicGL.CubeGeometry = CubeGeometry; // Lights\n\ngraphicGL.AmbientLight = AmbientLight;\ngraphicGL.DirectionalLight = DirectionalLight;\ngraphicGL.PointLight = PointLight;\ngraphicGL.SpotLight = SpotLight; // Cameras\n\ngraphicGL.PerspectiveCamera = PerspectiveCamera;\ngraphicGL.OrthographicCamera = OrthographicCamera; // Math\n\ngraphicGL.Vector2 = Vector2;\ngraphicGL.Vector3 = Vector3;\ngraphicGL.Vector4 = Vector4;\ngraphicGL.Quaternion = Quaternion;\ngraphicGL.Matrix2 = Matrix2;\ngraphicGL.Matrix2d = Matrix2d;\ngraphicGL.Matrix3 = Matrix3;\ngraphicGL.Matrix4 = Matrix4;\ngraphicGL.Plane = Plane;\ngraphicGL.Ray = Ray;\ngraphicGL.BoundingBox = BoundingBox;\ngraphicGL.Frustum = Frustum; // Texture utilities\n\nvar blankImage = null;\n\nfunction getBlankImage() {\n  if (blankImage !== null) {\n    return blankImage;\n  }\n\n  blankImage = textureUtil.createBlank('rgba(255,255,255,0)').image;\n  return blankImage;\n}\n\nfunction nearestPowerOfTwo(val) {\n  return Math.pow(2, Math.round(Math.log(val) / Math.LN2));\n}\n\nfunction convertTextureToPowerOfTwo(texture) {\n  if ((texture.wrapS === Texture.REPEAT || texture.wrapT === Texture.REPEAT) && texture.image) {\n    // var canvas = document.createElement('canvas');\n    var width = nearestPowerOfTwo(texture.width);\n    var height = nearestPowerOfTwo(texture.height);\n\n    if (width !== texture.width || height !== texture.height) {\n      var canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(texture.image, 0, 0, width, height);\n      texture.image = canvas;\n    }\n  }\n}\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement} imgValue\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [textureOpts]\n * @param {Function} cb\n */\n// TODO Promise, test\n\n\ngraphicGL.loadTexture = function (imgValue, api, textureOpts, cb) {\n  if (typeof textureOpts === 'function') {\n    cb = textureOpts;\n    textureOpts = {};\n  }\n\n  textureOpts = textureOpts || {};\n  var keys = Object.keys(textureOpts).sort();\n  var prefix = '';\n\n  for (var i = 0; i < keys.length; i++) {\n    prefix += keys[i] + '_' + textureOpts[keys[i]] + '_';\n  }\n\n  var textureCache = api.__textureCache = api.__textureCache || new LRUCache(20);\n\n  if (isECharts(imgValue)) {\n    var id = imgValue.__textureid__;\n    var textureObj = textureCache.get(prefix + id);\n\n    if (!textureObj) {\n      var surface = new EChartsSurface(imgValue);\n\n      surface.onupdate = function () {\n        api.getZr().refresh();\n      };\n\n      textureObj = {\n        texture: surface.getTexture()\n      };\n\n      for (var i = 0; i < keys.length; i++) {\n        textureObj.texture[keys[i]] = textureOpts[keys[i]];\n      }\n\n      id = imgValue.__textureid__ || '__ecgl_ec__' + textureObj.texture.__uid__;\n      imgValue.__textureid__ = id;\n      textureCache.put(prefix + id, textureObj);\n      cb && cb(textureObj.texture);\n    } else {\n      textureObj.texture.surface.setECharts(imgValue);\n      cb && cb(textureObj.texture);\n    }\n\n    return textureObj.texture;\n  } else if (isValueImage(imgValue)) {\n    var id = imgValue.__textureid__;\n    var textureObj = textureCache.get(prefix + id);\n\n    if (!textureObj) {\n      textureObj = {\n        texture: new graphicGL.Texture2D({\n          image: imgValue\n        })\n      };\n\n      for (var i = 0; i < keys.length; i++) {\n        textureObj.texture[keys[i]] = textureOpts[keys[i]];\n      }\n\n      id = imgValue.__textureid__ || '__ecgl_image__' + textureObj.texture.__uid__;\n      imgValue.__textureid__ = id;\n      textureCache.put(prefix + id, textureObj);\n      convertTextureToPowerOfTwo(textureObj.texture); // TODO Next tick?\n\n      cb && cb(textureObj.texture);\n    }\n\n    return textureObj.texture;\n  } else {\n    var textureObj = textureCache.get(prefix + imgValue);\n\n    if (textureObj) {\n      if (textureObj.callbacks) {\n        // Add to pending callbacks\n        textureObj.callbacks.push(cb);\n      } else {\n        // TODO Next tick?\n        cb && cb(textureObj.texture);\n      }\n    } else {\n      // Maybe base64\n      if (imgValue.match(/.hdr$|^data:application\\/octet-stream/)) {\n        textureObj = {\n          callbacks: [cb]\n        };\n        var texture = textureUtil.loadTexture(imgValue, {\n          exposure: textureOpts.exposure,\n          fileType: 'hdr'\n        }, function () {\n          texture.dirty();\n          textureObj.callbacks.forEach(function (cb) {\n            cb && cb(texture);\n          });\n          textureObj.callbacks = null;\n        });\n        textureObj.texture = texture;\n        textureCache.put(prefix + imgValue, textureObj);\n      } else {\n        var texture = new graphicGL.Texture2D({\n          image: new Image()\n        });\n\n        for (var i = 0; i < keys.length; i++) {\n          texture[keys[i]] = textureOpts[keys[i]];\n        }\n\n        textureObj = {\n          texture: texture,\n          callbacks: [cb]\n        };\n        var originalImage = texture.image;\n\n        originalImage.onload = function () {\n          texture.image = originalImage;\n          convertTextureToPowerOfTwo(texture);\n          texture.dirty();\n          textureObj.callbacks.forEach(function (cb) {\n            cb && cb(texture);\n          });\n          textureObj.callbacks = null;\n        };\n\n        originalImage.crossOrigin = 'Anonymous';\n        originalImage.src = imgValue; // Use blank image as place holder.\n\n        texture.image = getBlankImage();\n        textureCache.put(prefix + imgValue, textureObj);\n      }\n    }\n\n    return textureObj.texture;\n  }\n};\n/**\n * Create ambientCubemap and ambientSH light. respectively to have specular and diffuse light\n * @return {Object} { specular, diffuse }\n */\n\n\ngraphicGL.createAmbientCubemap = function (opt, renderer, api, cb) {\n  opt = opt || {};\n  var textureUrl = opt.texture;\n  var exposure = retrieve.firstNotNull(opt.exposure, 1.0);\n  var ambientCubemap = new AmbientCubemapLight({\n    intensity: retrieve.firstNotNull(opt.specularIntensity, 1.0)\n  });\n  var ambientSH = new AmbientSHLight({\n    intensity: retrieve.firstNotNull(opt.diffuseIntensity, 1.0),\n    coefficients: [0.844, 0.712, 0.691, -0.037, 0.083, 0.167, 0.343, 0.288, 0.299, -0.041, -0.021, -0.009, -0.003, -0.041, -0.064, -0.011, -0.007, -0.004, -0.031, 0.034, 0.081, -0.060, -0.049, -0.060, 0.046, 0.056, 0.050]\n  });\n  ambientCubemap.cubemap = graphicGL.loadTexture(textureUrl, api, {\n    exposure: exposure\n  }, function () {\n    // TODO Performance when multiple view\n    ambientCubemap.cubemap.flipY = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var time = Date.now();\n    }\n\n    ambientCubemap.prefilter(renderer, 32);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var dTime = Date.now() - time;\n      console.log('Prefilter environment map: ' + dTime + 'ms');\n    }\n\n    ambientSH.coefficients = shUtil.projectEnvironmentMap(renderer, ambientCubemap.cubemap, {\n      lod: 1\n    });\n    cb && cb(); // TODO Refresh ?\n  });\n  return {\n    specular: ambientCubemap,\n    diffuse: ambientSH\n  };\n};\n/**\n * Create a blank texture for placeholder\n */\n\n\ngraphicGL.createBlankTexture = textureUtil.createBlank;\n/**\n * If value is image\n * @param {*}\n * @return {boolean}\n */\n\ngraphicGL.isImage = isValueImage;\n\ngraphicGL.additiveBlend = function (gl) {\n  gl.blendEquation(gl.FUNC_ADD);\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n};\n/**\n * @param {string|Array.<number>} colorStr\n * @param {Array.<number>} [rgba]\n * @return {Array.<number>} rgba\n */\n\n\ngraphicGL.parseColor = function (colorStr, rgba) {\n  if (colorStr instanceof Array) {\n    if (!rgba) {\n      rgba = [];\n    } // Color has been parsed.\n\n\n    rgba[0] = colorStr[0];\n    rgba[1] = colorStr[1];\n    rgba[2] = colorStr[2];\n\n    if (colorStr.length > 3) {\n      rgba[3] = colorStr[3];\n    } else {\n      rgba[3] = 1;\n    }\n\n    return rgba;\n  }\n\n  rgba = echarts.color.parse(colorStr || '#000', rgba) || [0, 0, 0, 0];\n  rgba[0] /= 255;\n  rgba[1] /= 255;\n  rgba[2] /= 255;\n  return rgba;\n};\n/**\n * Convert alpha beta rotation to direction.\n * @param {number} alpha\n * @param {number} beta\n * @return {Array.<number>}\n */\n\n\ngraphicGL.directionFromAlphaBeta = function (alpha, beta) {\n  var theta = alpha / 180 * Math.PI + Math.PI / 2;\n  var phi = -beta / 180 * Math.PI + Math.PI / 2;\n  var dir = [];\n  var r = Math.sin(theta);\n  dir[0] = r * Math.cos(phi);\n  dir[1] = -Math.cos(theta);\n  dir[2] = r * Math.sin(phi);\n  return dir;\n};\n/**\n * Get shadow resolution from shadowQuality configuration\n */\n\n\ngraphicGL.getShadowResolution = function (shadowQuality) {\n  var shadowResolution = 1024;\n\n  switch (shadowQuality) {\n    case 'low':\n      shadowResolution = 512;\n      break;\n\n    case 'medium':\n      break;\n\n    case 'high':\n      shadowResolution = 2048;\n      break;\n\n    case 'ultra':\n      shadowResolution = 4096;\n      break;\n  }\n\n  return shadowResolution;\n};\n/**\n * Shading utilities\n */\n\n\ngraphicGL.COMMON_SHADERS = ['lambert', 'color', 'realistic', 'hatching', 'shadow'];\n/**\n * Create shader including vertex and fragment\n * @param {string} prefix.\n */\n\ngraphicGL.createShader = function (prefix) {\n  if (prefix === 'ecgl.shadow') {\n    prefix = 'ecgl.displayShadow';\n  }\n\n  var vertexShaderStr = Shader.source(prefix + '.vertex');\n  var fragmentShaderStr = Shader.source(prefix + '.fragment');\n\n  if (!vertexShaderStr) {\n    console.error('Vertex shader of \\'%s\\' not exits', prefix);\n  }\n\n  if (!fragmentShaderStr) {\n    console.error('Fragment shader of \\'%s\\' not exits', prefix);\n  }\n\n  var shader = new Shader(vertexShaderStr, fragmentShaderStr);\n  shader.name = prefix;\n  return shader;\n};\n\ngraphicGL.createMaterial = function (prefix, defines) {\n  if (!(defines instanceof Array)) {\n    defines = [defines];\n  }\n\n  var shader = graphicGL.createShader(prefix);\n  var material = new Material({\n    shader: shader\n  });\n  defines.forEach(function (defineName) {\n    if (typeof defineName === 'string') {\n      material.define(defineName);\n    }\n  });\n  return material;\n};\n/**\n * Set material from model.\n * @param {clay.Material} material\n * @param {module:echarts/model/Model} model\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngraphicGL.setMaterialFromModel = function (shading, material, model, api) {\n  material.autoUpdateTextureStatus = false;\n  var materialModel = model.getModel(shading + 'Material');\n  var detailTexture = materialModel.get('detailTexture');\n  var uvRepeat = retrieve.firstNotNull(materialModel.get('textureTiling'), 1.0);\n  var uvOffset = retrieve.firstNotNull(materialModel.get('textureOffset'), 0.0);\n\n  if (typeof uvRepeat === 'number') {\n    uvRepeat = [uvRepeat, uvRepeat];\n  }\n\n  if (typeof uvOffset === 'number') {\n    uvOffset = [uvOffset, uvOffset];\n  }\n\n  var repeatParam = uvRepeat[0] > 1 || uvRepeat[1] > 1 ? graphicGL.Texture.REPEAT : graphicGL.Texture.CLAMP_TO_EDGE;\n  var textureOpt = {\n    anisotropic: 8,\n    wrapS: repeatParam,\n    wrapT: repeatParam\n  };\n\n  if (shading === 'realistic') {\n    var roughness = materialModel.get('roughness');\n    var metalness = materialModel.get('metalness');\n\n    if (metalness != null) {\n      // Try to treat as a texture, TODO More check\n      if (isNaN(metalness)) {\n        material.setTextureImage('metalnessMap', metalness, api, textureOpt);\n        metalness = retrieve.firstNotNull(materialModel.get('metalnessAdjust'), 0.5);\n      }\n    } else {\n      // Default metalness.\n      metalness = 0;\n    }\n\n    if (roughness != null) {\n      // Try to treat as a texture, TODO More check\n      if (isNaN(roughness)) {\n        material.setTextureImage('roughnessMap', roughness, api, textureOpt);\n        roughness = retrieve.firstNotNull(materialModel.get('roughnessAdjust'), 0.5);\n      }\n    } else {\n      // Default roughness.\n      roughness = 0.5;\n    }\n\n    var normalTextureVal = materialModel.get('normalTexture');\n    material.setTextureImage('detailMap', detailTexture, api, textureOpt);\n    material.setTextureImage('normalMap', normalTextureVal, api, textureOpt);\n    material.set({\n      roughness: roughness,\n      metalness: metalness,\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    }); // var normalTexture = material.get('normalMap');\n    // if (normalTexture) {\n    // PENDING\n    // normalTexture.format = Texture.SRGB;\n    // }\n  } else if (shading === 'lambert') {\n    material.setTextureImage('detailMap', detailTexture, api, textureOpt);\n    material.set({\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    });\n  } else if (shading === 'color') {\n    material.setTextureImage('detailMap', detailTexture, api, textureOpt);\n    material.set({\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    });\n  } else if (shading === 'hatching') {\n    var tams = materialModel.get('hatchingTextures') || [];\n\n    if (tams.length < 6) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Invalid hatchingTextures.');\n      }\n    }\n\n    for (var i = 0; i < 6; i++) {\n      material.setTextureImage('hatch' + (i + 1), tams[i], api, {\n        anisotropic: 8,\n        wrapS: graphicGL.Texture.REPEAT,\n        wrapT: graphicGL.Texture.REPEAT\n      });\n    }\n\n    material.set({\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    });\n  }\n};\n\ngraphicGL.updateVertexAnimation = function (mappingAttributes, previousMesh, currentMesh, seriesModel) {\n  var enableAnimation = seriesModel.get('animation');\n  var duration = seriesModel.get('animationDurationUpdate');\n  var easing = seriesModel.get('animationEasingUpdate');\n  var shadowDepthMaterial = currentMesh.shadowDepthMaterial;\n\n  if (enableAnimation && previousMesh && duration > 0 // Only animate when bar count are not changed\n  && previousMesh.geometry.vertexCount === currentMesh.geometry.vertexCount) {\n    currentMesh.material.define('vertex', 'VERTEX_ANIMATION');\n    currentMesh.ignorePreZ = true;\n\n    if (shadowDepthMaterial) {\n      shadowDepthMaterial.define('vertex', 'VERTEX_ANIMATION');\n    }\n\n    for (var i = 0; i < mappingAttributes.length; i++) {\n      currentMesh.geometry.attributes[mappingAttributes[i][0]].value = previousMesh.geometry.attributes[mappingAttributes[i][1]].value;\n    }\n\n    currentMesh.geometry.dirty();\n    currentMesh.__percent = 0;\n    currentMesh.material.set('percent', 0);\n    currentMesh.stopAnimation();\n    currentMesh.animate().when(duration, {\n      __percent: 1\n    }).during(function () {\n      currentMesh.material.set('percent', currentMesh.__percent);\n\n      if (shadowDepthMaterial) {\n        shadowDepthMaterial.set('percent', currentMesh.__percent);\n      }\n    }).done(function () {\n      currentMesh.ignorePreZ = false;\n      currentMesh.material.undefine('vertex', 'VERTEX_ANIMATION');\n\n      if (shadowDepthMaterial) {\n        shadowDepthMaterial.undefine('vertex', 'VERTEX_ANIMATION');\n      }\n    }).start(easing);\n  } else {\n    currentMesh.material.undefine('vertex', 'VERTEX_ANIMATION');\n\n    if (shadowDepthMaterial) {\n      shadowDepthMaterial.undefine('vertex', 'VERTEX_ANIMATION');\n    }\n  }\n};\n\nexport default graphicGL;","import Renderable from './Renderable';\nimport glenum from './core/glenum';\n\n/**\n * @constructor clay.Mesh\n * @extends clay.Renderable\n */\nvar Mesh = Renderable.extend(/** @lends clay.Mesh# */ {\n    /**\n     * Used when it is a skinned mesh\n     * @type {clay.Skeleton}\n     */\n    skeleton: null,\n    /**\n     * Joints indices Meshes can share the one skeleton instance and each mesh can use one part of joints. Joints indices indicate the index of joint in the skeleton instance\n     * @type {number[]}\n     */\n    joints: null\n\n}, function () {\n    if (!this.joints) {\n        this.joints = [];\n    }\n}, {\n\n    /**\n     * Offset matrix used for multiple skinned mesh clone sharing one skeleton\n     * @type {clay.Matrix4}\n     */\n    offsetMatrix: null,\n\n    isInstancedMesh: function () { return false; },\n\n    isSkinnedMesh: function () {\n        return !!(this.skeleton && this.joints && this.joints.length > 0);\n    },\n\n    clone: function () {\n        var mesh = Renderable.prototype.clone.call(this);\n        mesh.skeleton = this.skeleton;\n        if (this.joints) {\n            mesh.joints = this.joints.slice();\n        }\n        return mesh;\n    }\n});\n\n// Enums\nMesh.POINTS = glenum.POINTS;\nMesh.LINES = glenum.LINES;\nMesh.LINE_LOOP = glenum.LINE_LOOP;\nMesh.LINE_STRIP = glenum.LINE_STRIP;\nMesh.TRIANGLES = glenum.TRIANGLES;\nMesh.TRIANGLE_STRIP = glenum.TRIANGLE_STRIP;\nMesh.TRIANGLE_FAN = glenum.TRIANGLE_FAN;\n\nMesh.BACK = glenum.BACK;\nMesh.FRONT = glenum.FRONT;\nMesh.FRONT_AND_BACK = glenum.FRONT_AND_BACK;\nMesh.CW = glenum.CW;\nMesh.CCW = glenum.CCW;\n\nexport default Mesh;\n","import Texture from './Texture';\nimport glenum from './core/glenum';\nimport vendor from './core/vendor';\nimport mathUtil from './math/util';\nvar isPowerOfTwo = mathUtil.isPowerOfTwo;\n\nfunction nearestPowerOfTwo(val) {\n    return Math.pow(2, Math.round(Math.log(val) / Math.LN2));\n}\nfunction convertTextureToPowerOfTwo(texture, canvas) {\n    // var canvas = document.createElement('canvas');\n    var width = nearestPowerOfTwo(texture.width);\n    var height = nearestPowerOfTwo(texture.height);\n    canvas = canvas || document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(texture.image, 0, 0, width, height);\n\n    return canvas;\n}\n\n/**\n * @constructor clay.Texture2D\n * @extends clay.Texture\n *\n * @example\n *     ...\n *     var mat = new clay.Material({\n *         shader: clay.shader.library.get('clay.phong', 'diffuseMap')\n *     });\n *     var diffuseMap = new clay.Texture2D();\n *     diffuseMap.load('assets/textures/diffuse.jpg');\n *     mat.set('diffuseMap', diffuseMap);\n *     ...\n *     diffuseMap.success(function () {\n *         // Wait for the diffuse texture loaded\n *         animation.on('frame', function (frameTime) {\n *             renderer.render(scene, camera);\n *         });\n *     });\n */\nvar Texture2D = Texture.extend(function () {\n    return /** @lends clay.Texture2D# */ {\n        /**\n         * @type {?HTMLImageElement|HTMLCanvasElemnet}\n         */\n        // TODO mark dirty when assigned.\n        image: null,\n        /**\n         * Pixels data. Will be ignored if image is set.\n         * @type {?Uint8Array|Float32Array}\n         */\n        pixels: null,\n        /**\n         * @type {Array.<Object>}\n         * @example\n         *     [{\n         *         image: mipmap0,\n         *         pixels: null\n         *     }, {\n         *         image: mipmap1,\n         *         pixels: null\n         *     }, ....]\n         */\n        mipmaps: [],\n\n        /**\n         * If convert texture to power-of-two\n         * @type {boolean}\n         */\n        convertToPOT: false\n    };\n}, {\n\n    textureType: 'texture2D',\n\n    update: function (renderer) {\n\n        var _gl = renderer.gl;\n        _gl.bindTexture(_gl.TEXTURE_2D, this._cache.get('webgl_texture'));\n\n        this.updateCommon(renderer);\n\n        var glFormat = this.format;\n        var glType = this.type;\n\n        // Convert to pot is only available when using image/canvas/video element.\n        var convertToPOT = !!(this.convertToPOT\n            && !this.mipmaps.length && this.image\n            && (this.wrapS === Texture.REPEAT || this.wrapT === Texture.REPEAT)\n            && this.NPOT\n        );\n\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, convertToPOT ? this.wrapS : this.getAvailableWrapS());\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, convertToPOT ? this.wrapT : this.getAvailableWrapT());\n\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, convertToPOT ? this.magFilter : this.getAvailableMagFilter());\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, convertToPOT ? this.minFilter : this.getAvailableMinFilter());\n\n        var anisotropicExt = renderer.getGLExtension('EXT_texture_filter_anisotropic');\n        if (anisotropicExt && this.anisotropic > 1) {\n            _gl.texParameterf(_gl.TEXTURE_2D, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropic);\n        }\n\n        // Fallback to float type if browser don't have half float extension\n        if (glType === 36193) {\n            var halfFloatExt = renderer.getGLExtension('OES_texture_half_float');\n            if (!halfFloatExt) {\n                glType = glenum.FLOAT;\n            }\n        }\n\n        if (this.mipmaps.length) {\n            var width = this.width;\n            var height = this.height;\n            for (var i = 0; i < this.mipmaps.length; i++) {\n                var mipmap = this.mipmaps[i];\n                this._updateTextureData(_gl, mipmap, i, width, height, glFormat, glType, false);\n                width /= 2;\n                height /= 2;\n            }\n        }\n        else {\n            this._updateTextureData(_gl, this, 0, this.width, this.height, glFormat, glType, convertToPOT);\n\n            if (this.useMipmap && (!this.NPOT || convertToPOT)) {\n                _gl.generateMipmap(_gl.TEXTURE_2D);\n            }\n        }\n\n        _gl.bindTexture(_gl.TEXTURE_2D, null);\n    },\n\n    _updateTextureData: function (_gl, data, level, width, height, glFormat, glType, convertToPOT) {\n        if (data.image) {\n            var imgData = data.image;\n            if (convertToPOT) {\n                this._potCanvas = convertTextureToPowerOfTwo(this, this._potCanvas);\n                imgData = this._potCanvas;\n            }\n            _gl.texImage2D(_gl.TEXTURE_2D, level, glFormat, glFormat, glType, imgData);\n        }\n        else {\n            // Can be used as a blank texture when writing render to texture(RTT)\n            if (\n                glFormat <= Texture.COMPRESSED_RGBA_S3TC_DXT5_EXT\n                && glFormat >= Texture.COMPRESSED_RGB_S3TC_DXT1_EXT\n            ) {\n                _gl.compressedTexImage2D(_gl.TEXTURE_2D, level, glFormat, width, height, 0, data.pixels);\n            }\n            else {\n                // Is a render target if pixels is null\n                _gl.texImage2D(_gl.TEXTURE_2D, level, glFormat, width, height, 0, glFormat, glType, data.pixels);\n            }\n        }\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     * @memberOf clay.Texture2D.prototype\n     */\n    generateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        if (this.useMipmap && !this.NPOT) {\n            _gl.bindTexture(_gl.TEXTURE_2D, this._cache.get('webgl_texture'));\n            _gl.generateMipmap(_gl.TEXTURE_2D);\n        }\n    },\n\n    isPowerOfTwo: function () {\n        return isPowerOfTwo(this.width) && isPowerOfTwo(this.height);\n    },\n\n    isRenderable: function () {\n        if (this.image) {\n            return this.image.width > 0 && this.image.height > 0;\n        }\n        else {\n            return !!(this.width && this.height);\n        }\n    },\n\n    bind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, this.getWebGLTexture(renderer));\n    },\n\n    unbind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, null);\n    },\n\n    load: function (src, crossOrigin) {\n        var image = vendor.createImage();\n        if (crossOrigin) {\n            image.crossOrigin = crossOrigin;\n        }\n        var self = this;\n        image.onload = function () {\n            self.dirty();\n            self.trigger('success', self);\n        };\n        image.onerror = function () {\n            self.trigger('error', self);\n        };\n\n        image.src = src;\n        this.image = image;\n\n        return this;\n    }\n});\n\nObject.defineProperty(Texture2D.prototype, 'width', {\n    get: function () {\n        if (this.image) {\n            return this.image.width;\n        }\n        return this._width;\n    },\n    set: function (value) {\n        if (this.image) {\n            console.warn('Texture from image can\\'t set width');\n        }\n        else {\n            if (this._width !== value) {\n                this.dirty();\n            }\n            this._width = value;\n        }\n    }\n});\nObject.defineProperty(Texture2D.prototype, 'height', {\n    get: function () {\n        if (this.image) {\n            return this.image.height;\n        }\n        return this._height;\n    },\n    set: function (value) {\n        if (this.image) {\n            console.warn('Texture from image can\\'t set height');\n        }\n        else {\n            if (this._height !== value) {\n                this.dirty();\n            }\n            this._height = value;\n        }\n    }\n});\n\nexport default Texture2D;\n","var mathUtil = {};\n\nmathUtil.isPowerOfTwo = function (value) {\n    return (value & (value - 1)) === 0;\n};\n\nmathUtil.nextPowerOfTwo = function (value) {\n    value --;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value ++;\n\n    return value;\n};\n\nmathUtil.nearestPowerOfTwo = function (value) {\n    return Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n};\n\nexport default mathUtil;\n","import vendor from './core/vendor';\nimport vec3 from './glmatrix/vec3';\nimport mat4 from './glmatrix/mat4';\nimport BoundingBox from './math/BoundingBox';\nimport GeometryBase from './GeometryBase';\n\nvar vec3Create = vec3.create;\nvar vec3Add = vec3.add;\nvar vec3Set = vec3.set;\n\nvar Attribute = GeometryBase.Attribute;\n\n/**\n * Geometry in ClayGL contains vertex attributes of mesh. These vertex attributes will be finally provided to the {@link clay.Shader}.\n * Different {@link clay.Shader} needs different attributes. Here is a list of attributes used in the builtin shaders.\n *\n * + position: `clay.basic`, `clay.lambert`, `clay.standard`\n * + texcoord0: `clay.basic`, `clay.lambert`, `clay.standard`\n * + color: `clay.basic`, `clay.lambert`, `clay.standard`\n * + weight: `clay.basic`, `clay.lambert`, `clay.standard`\n * + joint: `clay.basic`, `clay.lambert`, `clay.standard`\n * + normal: `clay.lambert`, `clay.standard`\n * + tangent: `clay.standard`\n *\n * #### Create a procedural geometry\n *\n * ClayGL provides a couple of builtin procedural geometries. Inlcuding:\n *\n *  + {@link clay.geometry.Cube}\n *  + {@link clay.geometry.Sphere}\n *  + {@link clay.geometry.Plane}\n *  + {@link clay.geometry.Cylinder}\n *  + {@link clay.geometry.Cone}\n *  + {@link clay.geometry.ParametricSurface}\n *\n * It's simple to create a basic geometry with these classes.\n *\n```js\nvar sphere = new clay.geometry.Sphere({\n    radius: 2\n});\n```\n *\n * #### Create the geometry data by yourself\n *\n * Usually the vertex attributes data are created by the {@link clay.loader.GLTF} or procedural geometries like {@link clay.geometry.Sphere}.\n * Besides these, you can create the data manually. Here is a simple example to create a triangle.\n```js\nvar TRIANGLE_POSITIONS = [\n    [-0.5, -0.5, 0],\n    [0.5, -0.5, 0],\n    [0, 0.5, 0]\n];\nvar geometry = new clay.StaticGeometryBase();\n// Add triangle vertices to position attribute.\ngeometry.attributes.position.fromArray(TRIANGLE_POSITIONS);\n```\n * Then you can use the utility methods like `generateVertexNormals`, `generateTangents` to create the remaining necessary attributes.\n *\n *\n * #### Use with custom shaders\n *\n * If you wan't to write custom shaders. Don't forget to add SEMANTICS to these attributes. For example\n *\n ```glsl\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n```\n * These `POSITION`, `TEXCOORD_0`, `NORMAL` are SEMANTICS which will map the attributes in shader to the attributes in the GeometryBase\n *\n * Available attributes SEMANTICS includes `POSITION`, `TEXCOORD_0`, `TEXCOORD_1` `NORMAL`, `TANGENT`, `COLOR`, `WEIGHT`, `JOINT`.\n *\n *\n * @constructor clay.Geometry\n * @extends clay.GeometryBase\n */\nvar Geometry = GeometryBase.extend(function () {\n    return /** @lends clay.Geometry# */ {\n        /**\n         * Attributes of geometry. Including:\n         *  + `position`\n         *  + `texcoord0`\n         *  + `texcoord1`\n         *  + `normal`\n         *  + `tangent`\n         *  + `color`\n         *  + `weight`\n         *  + `joint`\n         *  + `barycentric`\n         *\n         * @type {Object.<string, clay.Geometry.Attribute>}\n         */\n        attributes: {\n            position: new Attribute('position', 'float', 3, 'POSITION'),\n            texcoord0: new Attribute('texcoord0', 'float', 2, 'TEXCOORD_0'),\n            texcoord1: new Attribute('texcoord1', 'float', 2, 'TEXCOORD_1'),\n            normal: new Attribute('normal', 'float', 3, 'NORMAL'),\n            tangent: new Attribute('tangent', 'float', 4, 'TANGENT'),\n            color: new Attribute('color', 'float', 4, 'COLOR'),\n            // Skinning attributes\n            // Each vertex can be bind to 4 bones, because the\n            // sum of weights is 1, so the weights is stored in vec3 and the last\n            // can be calculated by 1-w.x-w.y-w.z\n            weight: new Attribute('weight', 'float', 3, 'WEIGHT'),\n            joint: new Attribute('joint', 'float', 4, 'JOINT'),\n            // For wireframe display\n            // http://codeflow.org/entries/2012/aug/02/easy-wireframe-display-with-barycentric-coordinates/\n            barycentric: new Attribute('barycentric', 'float', 3, null),\n        },\n        /**\n         * Calculated bounding box of geometry.\n         * @type {clay.BoundingBox}\n         */\n        boundingBox: null\n    };\n},\n/** @lends clay.Geometry.prototype */\n{\n\n    mainAttribute: 'position',\n\n    /**\n     * Update boundingBox of Geometry\n     */\n    updateBoundingBox: function () {\n        var bbox = this.boundingBox;\n        if (!bbox) {\n            bbox = this.boundingBox = new BoundingBox();\n        }\n        var posArr = this.attributes.position.value;\n        if (posArr && posArr.length) {\n            var min = bbox.min;\n            var max = bbox.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            vec3.set(minArr, posArr[0], posArr[1], posArr[2]);\n            vec3.set(maxArr, posArr[0], posArr[1], posArr[2]);\n            for (var i = 3; i < posArr.length;) {\n                var x = posArr[i++];\n                var y = posArr[i++];\n                var z = posArr[i++];\n                if (x < minArr[0]) { minArr[0] = x; }\n                if (y < minArr[1]) { minArr[1] = y; }\n                if (z < minArr[2]) { minArr[2] = z; }\n\n                if (x > maxArr[0]) { maxArr[0] = x; }\n                if (y > maxArr[1]) { maxArr[1] = y; }\n                if (z > maxArr[2]) { maxArr[2] = z; }\n            }\n            min._dirty = true;\n            max._dirty = true;\n        }\n    },\n\n    /**\n     * Generate normals per vertex.\n     */\n    generateVertexNormals: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        var indices = this.indices;\n        var attributes = this.attributes;\n        var positions = attributes.position.value;\n        var normals = attributes.normal.value;\n\n        if (!normals || normals.length !== positions.length) {\n            normals = attributes.normal.value = new vendor.Float32Array(positions.length);\n        }\n        else {\n            // Reset\n            for (var i = 0; i < normals.length; i++) {\n                normals[i] = 0;\n            }\n        }\n\n        var p1 = vec3Create();\n        var p2 = vec3Create();\n        var p3 = vec3Create();\n\n        var v21 = vec3Create();\n        var v32 = vec3Create();\n\n        var n = vec3Create();\n\n        var len = indices ? indices.length : this.vertexCount;\n        var i1, i2, i3;\n        for (var f = 0; f < len;) {\n            if (indices) {\n                i1 = indices[f++];\n                i2 = indices[f++];\n                i3 = indices[f++];\n            }\n            else {\n                i1 = f++;\n                i2 = f++;\n                i3 = f++;\n            }\n\n            vec3Set(p1, positions[i1*3], positions[i1*3+1], positions[i1*3+2]);\n            vec3Set(p2, positions[i2*3], positions[i2*3+1], positions[i2*3+2]);\n            vec3Set(p3, positions[i3*3], positions[i3*3+1], positions[i3*3+2]);\n\n            vec3.sub(v21, p1, p2);\n            vec3.sub(v32, p2, p3);\n            vec3.cross(n, v21, v32);\n            // Already be weighted by the triangle area\n            for (var i = 0; i < 3; i++) {\n                normals[i1*3+i] = normals[i1*3+i] + n[i];\n                normals[i2*3+i] = normals[i2*3+i] + n[i];\n                normals[i3*3+i] = normals[i3*3+i] + n[i];\n            }\n        }\n\n        for (var i = 0; i < normals.length;) {\n            vec3Set(n, normals[i], normals[i+1], normals[i+2]);\n            vec3.normalize(n, n);\n            normals[i++] = n[0];\n            normals[i++] = n[1];\n            normals[i++] = n[2];\n        }\n        this.dirty();\n    },\n\n    /**\n     * Generate normals per face.\n     */\n    generateFaceNormals: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        if (!this.isUniqueVertex()) {\n            this.generateUniqueVertex();\n        }\n\n        var indices = this.indices;\n        var attributes = this.attributes;\n        var positions = attributes.position.value;\n        var normals = attributes.normal.value;\n\n        var p1 = vec3Create();\n        var p2 = vec3Create();\n        var p3 = vec3Create();\n\n        var v21 = vec3Create();\n        var v32 = vec3Create();\n        var n = vec3Create();\n\n        if (!normals) {\n            normals = attributes.normal.value = new Float32Array(positions.length);\n        }\n        var len = indices ? indices.length : this.vertexCount;\n        var i1, i2, i3;\n        for (var f = 0; f < len;) {\n            if (indices) {\n                i1 = indices[f++];\n                i2 = indices[f++];\n                i3 = indices[f++];\n            }\n            else {\n                i1 = f++;\n                i2 = f++;\n                i3 = f++;\n            }\n\n            vec3Set(p1, positions[i1*3], positions[i1*3+1], positions[i1*3+2]);\n            vec3Set(p2, positions[i2*3], positions[i2*3+1], positions[i2*3+2]);\n            vec3Set(p3, positions[i3*3], positions[i3*3+1], positions[i3*3+2]);\n\n            vec3.sub(v21, p1, p2);\n            vec3.sub(v32, p2, p3);\n            vec3.cross(n, v21, v32);\n\n            vec3.normalize(n, n);\n\n            for (var i = 0; i < 3; i++) {\n                normals[i1*3 + i] = n[i];\n                normals[i2*3 + i] = n[i];\n                normals[i3*3 + i] = n[i];\n            }\n        }\n        this.dirty();\n    },\n\n    /**\n     * Generate tangents attributes.\n     */\n    generateTangents: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        var nVertex = this.vertexCount;\n        var attributes = this.attributes;\n        if (!attributes.tangent.value) {\n            attributes.tangent.value = new Float32Array(nVertex * 4);\n        }\n        var texcoords = attributes.texcoord0.value;\n        var positions = attributes.position.value;\n        var tangents = attributes.tangent.value;\n        var normals = attributes.normal.value;\n\n        if (!texcoords) {\n            console.warn('Geometry without texcoords can\\'t generate tangents.');\n            return;\n        }\n\n        var tan1 = [];\n        var tan2 = [];\n        for (var i = 0; i < nVertex; i++) {\n            tan1[i] = [0.0, 0.0, 0.0];\n            tan2[i] = [0.0, 0.0, 0.0];\n        }\n\n        var sdir = [0.0, 0.0, 0.0];\n        var tdir = [0.0, 0.0, 0.0];\n        var indices = this.indices;\n\n        var len = indices ? indices.length : this.vertexCount;\n        var i1, i2, i3;\n        for (var i = 0; i < len;) {\n            if (indices) {\n                i1 = indices[i++];\n                i2 = indices[i++];\n                i3 = indices[i++];\n            }\n            else {\n                i1 = i++;\n                i2 = i++;\n                i3 = i++;\n            }\n\n            var st1s = texcoords[i1 * 2],\n                st2s = texcoords[i2 * 2],\n                st3s = texcoords[i3 * 2],\n                st1t = texcoords[i1 * 2 + 1],\n                st2t = texcoords[i2 * 2 + 1],\n                st3t = texcoords[i3 * 2 + 1],\n\n                p1x = positions[i1 * 3],\n                p2x = positions[i2 * 3],\n                p3x = positions[i3 * 3],\n                p1y = positions[i1 * 3 + 1],\n                p2y = positions[i2 * 3 + 1],\n                p3y = positions[i3 * 3 + 1],\n                p1z = positions[i1 * 3 + 2],\n                p2z = positions[i2 * 3 + 2],\n                p3z = positions[i3 * 3 + 2];\n\n            var x1 = p2x - p1x,\n                x2 = p3x - p1x,\n                y1 = p2y - p1y,\n                y2 = p3y - p1y,\n                z1 = p2z - p1z,\n                z2 = p3z - p1z;\n\n            var s1 = st2s - st1s,\n                s2 = st3s - st1s,\n                t1 = st2t - st1t,\n                t2 = st3t - st1t;\n\n            var r = 1.0 / (s1 * t2 - t1 * s2);\n            sdir[0] = (t2 * x1 - t1 * x2) * r;\n            sdir[1] = (t2 * y1 - t1 * y2) * r;\n            sdir[2] = (t2 * z1 - t1 * z2) * r;\n\n            tdir[0] = (s1 * x2 - s2 * x1) * r;\n            tdir[1] = (s1 * y2 - s2 * y1) * r;\n            tdir[2] = (s1 * z2 - s2 * z1) * r;\n\n            vec3Add(tan1[i1], tan1[i1], sdir);\n            vec3Add(tan1[i2], tan1[i2], sdir);\n            vec3Add(tan1[i3], tan1[i3], sdir);\n            vec3Add(tan2[i1], tan2[i1], tdir);\n            vec3Add(tan2[i2], tan2[i2], tdir);\n            vec3Add(tan2[i3], tan2[i3], tdir);\n        }\n        var tmp = vec3Create();\n        var nCrossT = vec3Create();\n        var n = vec3Create();\n        for (var i = 0; i < nVertex; i++) {\n            n[0] = normals[i * 3];\n            n[1] = normals[i * 3 + 1];\n            n[2] = normals[i * 3 + 2];\n            var t = tan1[i];\n\n            // Gram-Schmidt orthogonalize\n            vec3.scale(tmp, n, vec3.dot(n, t));\n            vec3.sub(tmp, t, tmp);\n            vec3.normalize(tmp, tmp);\n            // Calculate handedness.\n            vec3.cross(nCrossT, n, t);\n            tangents[i * 4] = tmp[0];\n            tangents[i * 4 + 1] = tmp[1];\n            tangents[i * 4 + 2] = tmp[2];\n            // PENDING can config ?\n            tangents[i * 4 + 3] = vec3.dot(nCrossT, tan2[i]) < 0.0 ? -1.0 : 1.0;\n        }\n        this.dirty();\n    },\n\n    /**\n     * If vertices are not shared by different indices.\n     */\n    isUniqueVertex: function () {\n        if (this.isUseIndices()) {\n            return this.vertexCount === this.indices.length;\n        }\n        else {\n            return true;\n        }\n    },\n    /**\n     * Create a unique vertex for each index.\n     */\n    generateUniqueVertex: function () {\n        if (!this.vertexCount || !this.indices) {\n            return;\n        }\n\n        if (this.indices.length > 0xffff) {\n            this.indices = new vendor.Uint32Array(this.indices);\n        }\n\n        var attributes = this.attributes;\n        var indices = this.indices;\n\n        var attributeNameList = this.getEnabledAttributes();\n\n        var oldAttrValues = {};\n        for (var a = 0; a < attributeNameList.length; a++) {\n            var name = attributeNameList[a];\n            oldAttrValues[name] = attributes[name].value;\n            attributes[name].init(this.indices.length);\n        }\n\n        var cursor = 0;\n        for (var i = 0; i < indices.length; i++) {\n            var ii = indices[i];\n            for (var a = 0; a < attributeNameList.length; a++) {\n                var name = attributeNameList[a];\n                var array = attributes[name].value;\n                var size = attributes[name].size;\n\n                for (var k = 0; k < size; k++) {\n                    array[cursor * size + k] = oldAttrValues[name][ii * size + k];\n                }\n            }\n            indices[i] = cursor;\n            cursor++;\n        }\n\n        this.dirty();\n    },\n\n    /**\n     * Generate barycentric coordinates for wireframe draw.\n     */\n    generateBarycentric: function () {\n        if (!this.vertexCount) {\n            return;\n        }\n\n        if (!this.isUniqueVertex()) {\n            this.generateUniqueVertex();\n        }\n\n        var attributes = this.attributes;\n        var array = attributes.barycentric.value;\n        var indices = this.indices;\n        // Already existed;\n        if (array && array.length === indices.length * 3) {\n            return;\n        }\n        array = attributes.barycentric.value = new Float32Array(indices.length * 3);\n\n        for (var i = 0; i < (indices ? indices.length : this.vertexCount / 3);) {\n            for (var j = 0; j < 3; j++) {\n                var ii = indices ? indices[i++] : (i * 3 + j);\n                array[ii * 3 + j] = 1;\n            }\n        }\n        this.dirty();\n    },\n\n    /**\n     * Apply transform to geometry attributes.\n     * @param {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n\n        var attributes = this.attributes;\n        var positions = attributes.position.value;\n        var normals = attributes.normal.value;\n        var tangents = attributes.tangent.value;\n\n        matrix = matrix.array;\n        // Normal Matrix\n        var inverseTransposeMatrix = mat4.create();\n        mat4.invert(inverseTransposeMatrix, matrix);\n        mat4.transpose(inverseTransposeMatrix, inverseTransposeMatrix);\n\n        var vec3TransformMat4 = vec3.transformMat4;\n        var vec3ForEach = vec3.forEach;\n        vec3ForEach(positions, 3, 0, null, vec3TransformMat4, matrix);\n        if (normals) {\n            vec3ForEach(normals, 3, 0, null, vec3TransformMat4, inverseTransposeMatrix);\n        }\n        if (tangents) {\n            vec3ForEach(tangents, 4, 0, null, vec3TransformMat4, inverseTransposeMatrix);\n        }\n\n        if (this.boundingBox) {\n            this.updateBoundingBox();\n        }\n    },\n    /**\n     * Dispose geometry data in GL context.\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n        var chunks = cache.get('chunks');\n        if (chunks) {\n            for (var c = 0; c < chunks.length; c++) {\n                var chunk = chunks[c];\n\n                for (var k = 0; k < chunk.attributeBuffers.length; k++) {\n                    var attribs = chunk.attributeBuffers[k];\n                    renderer.gl.deleteBuffer(attribs.buffer);\n                }\n\n                if (chunk.indicesBuffer) {\n                    renderer.gl.deleteBuffer(chunk.indicesBuffer.buffer);\n                }\n            }\n        }\n        if (this.__vaoCache) {\n            var vaoExt = renderer.getGLExtension('OES_vertex_array_object');\n            for (var id in this.__vaoCache) {\n                var vao = this.__vaoCache[id].vao;\n                if (vao) {\n                    vaoExt.deleteVertexArrayOES(vao);\n                }\n            }\n        }\n        this.__vaoCache = {};\n        cache.deleteContext(renderer.__uid__);\n    }\n\n});\n\nGeometry.STATIC_DRAW = GeometryBase.STATIC_DRAW;\nGeometry.DYNAMIC_DRAW = GeometryBase.DYNAMIC_DRAW;\nGeometry.STREAM_DRAW = GeometryBase.STREAM_DRAW;\n\nGeometry.AttributeBuffer = GeometryBase.AttributeBuffer;\nGeometry.IndicesBuffer = GeometryBase.IndicesBuffer;\n\nGeometry.Attribute = Attribute;\n\nexport default Geometry;\n","import Base from './core/Base';\nimport glenum from './core/glenum';\nimport Cache from './core/Cache';\nimport vendor from './core/vendor';\n\nfunction getArrayCtorByType (type) {\n    return ({\n        'byte': vendor.Int8Array,\n        'ubyte': vendor.Uint8Array,\n        'short': vendor.Int16Array,\n        'ushort': vendor.Uint16Array\n    })[type] || vendor.Float32Array;\n}\n\nfunction makeAttrKey(attrName) {\n    return 'attr_' + attrName;\n}\n/**\n * GeometryBase attribute\n * @alias clay.GeometryBase.Attribute\n * @constructor\n */\nfunction Attribute(name, type, size, semantic) {\n    /**\n     * Attribute name\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * Attribute type\n     * Possible values:\n     *  + `'byte'`\n     *  + `'ubyte'`\n     *  + `'short'`\n     *  + `'ushort'`\n     *  + `'float'` Most commonly used.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * Size of attribute component. 1 - 4.\n     * @type {number}\n     */\n    this.size = size;\n    /**\n     * Semantic of this attribute.\n     * Possible values:\n     *  + `'POSITION'`\n     *  + `'NORMAL'`\n     *  + `'BINORMAL'`\n     *  + `'TANGENT'`\n     *  + `'TEXCOORD'`\n     *  + `'TEXCOORD_0'`\n     *  + `'TEXCOORD_1'`\n     *  + `'COLOR'`\n     *  + `'JOINT'`\n     *  + `'WEIGHT'`\n     *\n     * In shader, attribute with same semantic will be automatically mapped. For example:\n     * ```glsl\n     * attribute vec3 pos: POSITION\n     * ```\n     * will use the attribute value with semantic POSITION in geometry, no matter what name it used.\n     * @type {string}\n     */\n    this.semantic = semantic || '';\n\n    /**\n     * Value of the attribute.\n     * @type {TypedArray}\n     */\n    this.value = null;\n\n    // Init getter setter\n    switch (size) {\n        case 1:\n            this.get = function (idx) {\n                return this.value[idx];\n            };\n            this.set = function (idx, value) {\n                this.value[idx] = value;\n            };\n            // Copy from source to target\n            this.copy = function (target, source) {\n                this.value[target] = this.value[target];\n            };\n            break;\n        case 2:\n            this.get = function (idx, out) {\n                var arr = this.value;\n                out[0] = arr[idx * 2];\n                out[1] = arr[idx * 2 + 1];\n                return out;\n            };\n            this.set = function (idx, val) {\n                var arr = this.value;\n                arr[idx * 2] = val[0];\n                arr[idx * 2 + 1] = val[1];\n            };\n            this.copy = function (target, source) {\n                var arr = this.value;\n                source *= 2;\n                target *= 2;\n                arr[target] = arr[source];\n                arr[target + 1] = arr[source + 1];\n            };\n            break;\n        case 3:\n            this.get = function (idx, out) {\n                var idx3 = idx * 3;\n                var arr = this.value;\n                out[0] = arr[idx3];\n                out[1] = arr[idx3 + 1];\n                out[2] = arr[idx3 + 2];\n                return out;\n            };\n            this.set = function (idx, val) {\n                var idx3 = idx * 3;\n                var arr = this.value;\n                arr[idx3] = val[0];\n                arr[idx3 + 1] = val[1];\n                arr[idx3 + 2] = val[2];\n            };\n            this.copy = function (target, source) {\n                var arr = this.value;\n                source *= 3;\n                target *= 3;\n                arr[target] = arr[source];\n                arr[target + 1] = arr[source + 1];\n                arr[target + 2] = arr[source + 2];\n            };\n            break;\n        case 4:\n            this.get = function (idx, out) {\n                var arr = this.value;\n                var idx4 = idx * 4;\n                out[0] = arr[idx4];\n                out[1] = arr[idx4 + 1];\n                out[2] = arr[idx4 + 2];\n                out[3] = arr[idx4 + 3];\n                return out;\n            };\n            this.set = function (idx, val) {\n                var arr = this.value;\n                var idx4 = idx * 4;\n                arr[idx4] = val[0];\n                arr[idx4 + 1] = val[1];\n                arr[idx4 + 2] = val[2];\n                arr[idx4 + 3] = val[3];\n            };\n            this.copy = function (target, source) {\n                var arr = this.value;\n                source *= 4;\n                target *= 4;\n                // copyWithin is extremely slow\n                arr[target] = arr[source];\n                arr[target + 1] = arr[source + 1];\n                arr[target + 2] = arr[source + 2];\n                arr[target + 3] = arr[source + 3];\n            };\n    }\n}\n\n/**\n * Set item value at give index. Second parameter val is number if size is 1\n * @function\n * @name clay.GeometryBase.Attribute#set\n * @param {number} idx\n * @param {number[]|number} val\n * @example\n * geometry.getAttribute('position').set(0, [1, 1, 1]);\n */\n\n/**\n * Get item value at give index. Second parameter out is no need if size is 1\n * @function\n * @name clay.GeometryBase.Attribute#set\n * @param {number} idx\n * @param {number[]} [out]\n * @example\n * geometry.getAttribute('position').get(0, out);\n */\n\n/**\n * Initialize attribute with given vertex count\n * @param {number} nVertex\n */\nAttribute.prototype.init = function (nVertex) {\n    if (!this.value || this.value.length !== nVertex * this.size) {\n        var ArrayConstructor = getArrayCtorByType(this.type);\n        this.value = new ArrayConstructor(nVertex * this.size);\n    }\n};\n\n/**\n * Initialize attribute with given array. Which can be 1 dimensional or 2 dimensional\n * @param {Array} array\n * @example\n *  geometry.getAttribute('position').fromArray(\n *      [-1, 0, 0, 1, 0, 0, 0, 1, 0]\n *  );\n *  geometry.getAttribute('position').fromArray(\n *      [ [-1, 0, 0], [1, 0, 0], [0, 1, 0] ]\n *  );\n */\nAttribute.prototype.fromArray = function (array) {\n    var ArrayConstructor = getArrayCtorByType(this.type);\n    var value;\n    // Convert 2d array to flat\n    if (array[0] && (array[0].length)) {\n        var n = 0;\n        var size = this.size;\n        value = new ArrayConstructor(array.length * size);\n        for (var i = 0; i < array.length; i++) {\n            for (var j = 0; j < size; j++) {\n                value[n++] = array[i][j];\n            }\n        }\n    }\n    else {\n        value = new ArrayConstructor(array);\n    }\n    this.value = value;\n};\n\nAttribute.prototype.clone = function(copyValue) {\n    var ret = new Attribute(this.name, this.type, this.size, this.semantic);\n    // FIXME\n    if (copyValue) {\n        console.warn('todo');\n    }\n    return ret;\n};\n\nfunction AttributeBuffer(name, type, buffer, size, semantic) {\n    this.name = name;\n    this.type = type;\n    this.buffer = buffer;\n    this.size = size;\n    this.semantic = semantic;\n\n    // To be set in mesh\n    // symbol in the shader\n    this.symbol = '';\n\n    // Needs remove flag\n    this.needsRemove = false;\n}\n\nfunction IndicesBuffer(buffer) {\n    this.buffer = buffer;\n    this.count = 0;\n}\n\n/**\n * Base of all geometry. Use {@link clay.Geometry} for common 3D usage.\n * @constructor clay.GeometryBase\n * @extends clay.core.Base\n */\nvar GeometryBase = Base.extend(function () {\n    return /** @lends clay.GeometryBase# */ {\n        /**\n         * Attributes of geometry.\n         * @type {Object.<string, clay.GeometryBase.Attribute>}\n         */\n        attributes: {},\n\n        /**\n         * Indices of geometry.\n         * @type {Uint16Array|Uint32Array}\n         */\n        indices: null,\n\n        /**\n         * Is vertices data dynamically updated.\n         * Attributes value can't be changed after first render if dyanmic is false.\n         * @type {boolean}\n         */\n        dynamic: true,\n\n        _enabledAttributes: null,\n\n        // PENDING\n        // Init it here to avoid deoptimization when it's assigned in application dynamically\n        __used: 0\n    };\n}, function () {\n    // Use cache\n    this._cache = new Cache();\n\n    this._attributeList = Object.keys(this.attributes);\n\n    this.__vaoCache = {};\n},\n/** @lends clay.GeometryBase.prototype */\n{\n    /**\n     * Main attribute will be used to count vertex number\n     * @type {string}\n     */\n    mainAttribute: '',\n    /**\n     * User defined picking algorithm instead of default\n     * triangle ray intersection\n     * x, y are NDC.\n     * ```typescript\n     * (x, y, renderer, camera, renderable, out) => boolean\n     * ```\n     * @type {?Function}\n     */\n    pick: null,\n\n    /**\n     * User defined ray picking algorithm instead of default\n     * triangle ray intersection\n     * ```typescript\n     * (ray: clay.Ray, renderable: clay.Renderable, out: Array) => boolean\n     * ```\n     * @type {?Function}\n     */\n    pickByRay: null,\n\n    /**\n     * Mark attributes and indices in geometry needs to update.\n     * Usually called after you change the data in attributes.\n     */\n    dirty: function () {\n        var enabledAttributes = this.getEnabledAttributes();\n        for (var i = 0; i < enabledAttributes.length; i++) {\n            this.dirtyAttribute(enabledAttributes[i]);\n        }\n        this.dirtyIndices();\n        this._enabledAttributes = null;\n\n        this._cache.dirty('any');\n    },\n    /**\n     * Mark the indices needs to update.\n     */\n    dirtyIndices: function () {\n        this._cache.dirtyAll('indices');\n    },\n    /**\n     * Mark the attributes needs to update.\n     * @param {string} [attrName]\n     */\n    dirtyAttribute: function (attrName) {\n        this._cache.dirtyAll(makeAttrKey(attrName));\n        this._cache.dirtyAll('attributes');\n    },\n    /**\n     * Get indices of triangle at given index.\n     * @param {number} idx\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     */\n    getTriangleIndices: function (idx, out) {\n        if (idx < this.triangleCount && idx >= 0) {\n            if (!out) {\n                out = [];\n            }\n            var indices = this.indices;\n            out[0] = indices[idx * 3];\n            out[1] = indices[idx * 3 + 1];\n            out[2] = indices[idx * 3 + 2];\n            return out;\n        }\n    },\n\n    /**\n     * Set indices of triangle at given index.\n     * @param {number} idx\n     * @param {Array.<number>} arr\n     */\n    setTriangleIndices: function (idx, arr) {\n        var indices = this.indices;\n        indices[idx * 3] = arr[0];\n        indices[idx * 3 + 1] = arr[1];\n        indices[idx * 3 + 2] = arr[2];\n    },\n\n    isUseIndices: function () {\n        return !!this.indices;\n    },\n\n    /**\n     * Initialize indices from an array.\n     * @param {Array} array\n     */\n    initIndicesFromArray: function (array) {\n        var value;\n        var ArrayConstructor = this.vertexCount > 0xffff\n            ? vendor.Uint32Array : vendor.Uint16Array;\n        // Convert 2d array to flat\n        if (array[0] && (array[0].length)) {\n            var n = 0;\n            var size = 3;\n\n            value = new ArrayConstructor(array.length * size);\n            for (var i = 0; i < array.length; i++) {\n                for (var j = 0; j < size; j++) {\n                    value[n++] = array[i][j];\n                }\n            }\n        }\n        else {\n            value = new ArrayConstructor(array);\n        }\n\n        this.indices = value;\n    },\n    /**\n     * Create a new attribute\n     * @param {string} name\n     * @param {string} type\n     * @param {number} size\n     * @param {string} [semantic]\n     */\n    createAttribute: function (name, type, size, semantic) {\n        var attrib = new Attribute(name, type, size, semantic);\n        if (this.attributes[name]) {\n            this.removeAttribute(name);\n        }\n        this.attributes[name] = attrib;\n        this._attributeList.push(name);\n        return attrib;\n    },\n    /**\n     * Remove attribute\n     * @param {string} name\n     */\n    removeAttribute: function (name) {\n        var attributeList = this._attributeList;\n        var idx = attributeList.indexOf(name);\n        if (idx >= 0) {\n            attributeList.splice(idx, 1);\n            delete this.attributes[name];\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Get attribute\n     * @param {string} name\n     * @return {clay.GeometryBase.Attribute}\n     */\n    getAttribute: function (name) {\n        return this.attributes[name];\n    },\n\n    /**\n     * Get enabled attributes name list\n     * Attribute which has the same vertex number with position is treated as a enabled attribute\n     * @return {string[]}\n     */\n    getEnabledAttributes: function () {\n        var enabledAttributes = this._enabledAttributes;\n        var attributeList = this._attributeList;\n        // Cache\n        if (enabledAttributes) {\n            return enabledAttributes;\n        }\n\n        var result = [];\n        var nVertex = this.vertexCount;\n\n        for (var i = 0; i < attributeList.length; i++) {\n            var name = attributeList[i];\n            var attrib = this.attributes[name];\n            if (attrib.value) {\n                if (attrib.value.length === nVertex * attrib.size) {\n                    result.push(name);\n                }\n            }\n        }\n\n        this._enabledAttributes = result;\n\n        return result;\n    },\n\n    getBufferChunks: function (renderer) {\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n        var isAttributesDirty = cache.isDirty('attributes');\n        var isIndicesDirty = cache.isDirty('indices');\n        if (isAttributesDirty || isIndicesDirty) {\n            this._updateBuffer(renderer.gl, isAttributesDirty, isIndicesDirty);\n            var enabledAttributes = this.getEnabledAttributes();\n            for (var i = 0; i < enabledAttributes.length; i++) {\n                cache.fresh(makeAttrKey(enabledAttributes[i]));\n            }\n            cache.fresh('attributes');\n            cache.fresh('indices');\n        }\n        cache.fresh('any');\n        return cache.get('chunks');\n    },\n\n    _updateBuffer: function (_gl, isAttributesDirty, isIndicesDirty) {\n        var cache = this._cache;\n        var chunks = cache.get('chunks');\n        var firstUpdate = false;\n        if (!chunks) {\n            chunks = [];\n            // Intialize\n            chunks[0] = {\n                attributeBuffers: [],\n                indicesBuffer: null\n            };\n            cache.put('chunks', chunks);\n            firstUpdate = true;\n        }\n\n        var chunk = chunks[0];\n        var attributeBuffers = chunk.attributeBuffers;\n        var indicesBuffer = chunk.indicesBuffer;\n\n        if (isAttributesDirty || firstUpdate) {\n            var attributeList = this.getEnabledAttributes();\n\n            var attributeBufferMap = {};\n            if (!firstUpdate) {\n                for (var i = 0; i < attributeBuffers.length; i++) {\n                    attributeBufferMap[attributeBuffers[i].name] = attributeBuffers[i];\n                }\n            }\n            // FIXME If some attributes removed\n            for (var k = 0; k < attributeList.length; k++) {\n                var name = attributeList[k];\n                var attribute = this.attributes[name];\n\n                var bufferInfo;\n\n                if (!firstUpdate) {\n                    bufferInfo = attributeBufferMap[name];\n                }\n                var buffer;\n                if (bufferInfo) {\n                    buffer = bufferInfo.buffer;\n                }\n                else {\n                    buffer = _gl.createBuffer();\n                }\n                if (cache.isDirty(makeAttrKey(name))) {\n                    // Only update when they are dirty.\n                    // TODO: Use BufferSubData?\n                    _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n                    _gl.bufferData(_gl.ARRAY_BUFFER, attribute.value, this.dynamic ? _gl.DYNAMIC_DRAW : _gl.STATIC_DRAW);\n                }\n\n                attributeBuffers[k] = new AttributeBuffer(name, attribute.type, buffer, attribute.size, attribute.semantic);\n            }\n            // Remove unused attributes buffers.\n            // PENDING\n            for (var i = k; i < attributeBuffers.length; i++) {\n                _gl.deleteBuffer(attributeBuffers[i].buffer);\n            }\n            attributeBuffers.length = k;\n\n        }\n\n        if (this.isUseIndices() && (isIndicesDirty || firstUpdate)) {\n            if (!indicesBuffer) {\n                indicesBuffer = new IndicesBuffer(_gl.createBuffer());\n                chunk.indicesBuffer = indicesBuffer;\n            }\n            indicesBuffer.count = this.indices.length;\n            _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, indicesBuffer.buffer);\n            _gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER, this.indices, this.dynamic ? _gl.DYNAMIC_DRAW : _gl.STATIC_DRAW);\n        }\n    },\n\n    /**\n     * Dispose geometry data in GL context.\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n        var chunks = cache.get('chunks');\n        if (chunks) {\n            for (var c = 0; c < chunks.length; c++) {\n                var chunk = chunks[c];\n\n                for (var k = 0; k < chunk.attributeBuffers.length; k++) {\n                    var attribs = chunk.attributeBuffers[k];\n                    renderer.gl.deleteBuffer(attribs.buffer);\n                }\n\n                if (chunk.indicesBuffer) {\n                    renderer.gl.deleteBuffer(chunk.indicesBuffer.buffer);\n                }\n            }\n        }\n        if (this.__vaoCache) {\n            var vaoExt = renderer.getGLExtension('OES_vertex_array_object');\n            for (var id in this.__vaoCache) {\n                var vao = this.__vaoCache[id].vao;\n                if (vao) {\n                    vaoExt.deleteVertexArrayOES(vao);\n                }\n            }\n        }\n        this.__vaoCache = {};\n        cache.deleteContext(renderer.__uid__);\n    }\n\n});\n\nif (Object.defineProperty) {\n    /**\n     * @name clay.GeometryBase#vertexCount\n     * @type {number}\n     * @readOnly\n     */\n    Object.defineProperty(GeometryBase.prototype, 'vertexCount', {\n\n        enumerable: false,\n\n        get: function () {\n\n            var mainAttribute = this.attributes[this.mainAttribute];\n\n            if (!mainAttribute) {\n                mainAttribute = this.attributes[this._attributeList[0]];\n            }\n\n            if (!mainAttribute || !mainAttribute.value) {\n                return 0;\n            }\n            return mainAttribute.value.length / mainAttribute.size;\n        }\n    });\n    /**\n     * @name clay.GeometryBase#triangleCount\n     * @type {number}\n     * @readOnly\n     */\n    Object.defineProperty(GeometryBase.prototype, 'triangleCount', {\n\n        enumerable: false,\n\n        get: function () {\n            var indices = this.indices;\n            if (!indices) {\n                return 0;\n            }\n            else {\n                return indices.length / 3;\n            }\n        }\n    });\n}\n\nGeometryBase.STATIC_DRAW = glenum.STATIC_DRAW;\nGeometryBase.DYNAMIC_DRAW = glenum.DYNAMIC_DRAW;\nGeometryBase.STREAM_DRAW = glenum.STREAM_DRAW;\n\nGeometryBase.AttributeBuffer = AttributeBuffer;\nGeometryBase.IndicesBuffer = IndicesBuffer;\n\nGeometryBase.Attribute = Attribute;\n\nexport default GeometryBase;\n","import Node from './Node';\nimport Light from './Light';\nimport Camera from './Camera';\nimport BoundingBox from './math/BoundingBox';\nimport util from './core/util';\nimport mat4 from './glmatrix/mat4';\nimport LRUCache from './core/LRU';\nimport Matrix4 from './math/Matrix4';\n\nvar IDENTITY = mat4.create();\nvar WORLDVIEW = mat4.create();\n\nvar programKeyCache = {};\n\nfunction getProgramKey(lightNumbers) {\n    var defineStr = [];\n    var lightTypes = Object.keys(lightNumbers);\n    lightTypes.sort();\n    for (var i = 0; i < lightTypes.length; i++) {\n        var lightType = lightTypes[i];\n        defineStr.push(lightType + ' ' + lightNumbers[lightType]);\n    }\n    var key = defineStr.join('\\n');\n\n    if (programKeyCache[key]) {\n        return programKeyCache[key];\n    }\n\n    var id = util.genGUID();\n    programKeyCache[key] = id;\n    return id;\n}\n\nfunction RenderList() {\n\n    this.opaque = [];\n    this.transparent = [];\n\n    this._opaqueCount = 0;\n    this._transparentCount = 0;\n}\n\nRenderList.prototype.startCount = function () {\n    this._opaqueCount = 0;\n    this._transparentCount = 0;\n};\n\nRenderList.prototype.add = function (object, isTransparent) {\n    if (isTransparent) {\n        this.transparent[this._transparentCount++] = object;\n    }\n    else {\n        this.opaque[this._opaqueCount++] = object;\n    }\n};\n\nRenderList.prototype.endCount = function () {\n    this.transparent.length = this._transparentCount;\n    this.opaque.length = this._opaqueCount;\n};\n\n/**\n * @typedef {Object} clay.Scene.RenderList\n * @property {Array.<clay.Renderable>} opaque\n * @property {Array.<clay.Renderable>} transparent\n */\n\n/**\n * @constructor clay.Scene\n * @extends clay.Node\n */\nvar Scene = Node.extend(function () {\n    return /** @lends clay.Scene# */ {\n        /**\n         * Global material of scene\n         * @type {clay.Material}\n         */\n        material: null,\n\n        lights: [],\n\n        /**\n         * Scene bounding box in view space.\n         * Used when camera needs to adujst the near and far plane automatically\n         * so that the view frustum contains the visible objects as tightly as possible.\n         * Notice:\n         *  It is updated after rendering (in the step of frustum culling passingly). So may be not so accurate, but saves a lot of calculation\n         *\n         * @type {clay.BoundingBox}\n         */\n        viewBoundingBoxLastFrame: new BoundingBox(),\n\n        // Uniforms for shadow map.\n        shadowUniforms: {},\n\n        _cameraList: [],\n\n        // Properties to save the light information in the scene\n        // Will be set in the render function\n        _lightUniforms: {},\n\n        _previousLightNumber: {},\n\n        _lightNumber: {\n            // groupId: {\n                // POINT_LIGHT: 0,\n                // DIRECTIONAL_LIGHT: 0,\n                // SPOT_LIGHT: 0,\n                // AMBIENT_LIGHT: 0,\n                // AMBIENT_SH_LIGHT: 0\n            // }\n        },\n\n        _lightProgramKeys: {},\n\n        _nodeRepository: {},\n\n        _renderLists: new LRUCache(20)\n\n    };\n}, function () {\n    this._scene = this;\n},\n/** @lends clay.Scene.prototype. */\n{\n\n    // Add node to scene\n    addToScene: function (node) {\n        if (node instanceof Camera) {\n            if (this._cameraList.length > 0) {\n                console.warn('Found multiple camera in one scene. Use the fist one.');\n            }\n            this._cameraList.push(node);\n        }\n        else if (node instanceof Light) {\n            this.lights.push(node);\n        }\n        if (node.name) {\n            this._nodeRepository[node.name] = node;\n        }\n    },\n\n    // Remove node from scene\n    removeFromScene: function (node) {\n        var idx;\n        if (node instanceof Camera) {\n            idx = this._cameraList.indexOf(node);\n            if (idx >= 0) {\n                this._cameraList.splice(idx, 1);\n            }\n        }\n        else if (node instanceof Light) {\n            idx = this.lights.indexOf(node);\n            if (idx >= 0) {\n                this.lights.splice(idx, 1);\n            }\n        }\n        if (node.name) {\n            delete this._nodeRepository[node.name];\n        }\n    },\n\n    /**\n     * Get node by name\n     * @param  {string} name\n     * @return {Node}\n     * @DEPRECATED\n     */\n    getNode: function (name) {\n        return this._nodeRepository[name];\n    },\n\n    /**\n     * Set main camera of the scene.\n     * @param {claygl.Camera} camera\n     */\n    setMainCamera: function (camera) {\n        var idx = this._cameraList.indexOf(camera);\n        if (idx >= 0) {\n            this._cameraList.splice(idx, 1);\n        }\n        this._cameraList.unshift(camera);\n    },\n    /**\n     * Get main camera of the scene.\n     */\n    getMainCamera: function () {\n        return this._cameraList[0];\n    },\n\n    getLights: function () {\n        return this.lights;\n    },\n\n    updateLights: function () {\n        var lights = this.lights;\n        this._previousLightNumber = this._lightNumber;\n\n        var lightNumber = {};\n        for (var i = 0; i < lights.length; i++) {\n            var light = lights[i];\n            if (light.invisible) {\n                continue;\n            }\n            var group = light.group;\n            if (!lightNumber[group]) {\n                lightNumber[group] = {};\n            }\n            // User can use any type of light\n            lightNumber[group][light.type] = lightNumber[group][light.type] || 0;\n            lightNumber[group][light.type]++;\n        }\n        this._lightNumber = lightNumber;\n\n        for (var groupId in lightNumber) {\n            this._lightProgramKeys[groupId] = getProgramKey(lightNumber[groupId]);\n        }\n\n        this._updateLightUniforms();\n    },\n\n    /**\n     * Clone a node and it's children, including mesh, camera, light, etc.\n     * Unlike using `Node#clone`. It will clone skeleton and remap the joints. Material will also be cloned.\n     *\n     * @param {clay.Node} node\n     * @return {clay.Node}\n     */\n    cloneNode: function (node) {\n        var newNode = node.clone();\n        var clonedNodesMap = {};\n        function buildNodesMap(sNode, tNode) {\n            clonedNodesMap[sNode.__uid__] = tNode;\n\n            for (var i = 0; i < sNode._children.length; i++) {\n                var sChild = sNode._children[i];\n                var tChild = tNode._children[i];\n                buildNodesMap(sChild, tChild);\n            }\n        }\n        buildNodesMap(node, newNode);\n\n        newNode.traverse(function (newChild) {\n            if (newChild.skeleton) {\n                newChild.skeleton = newChild.skeleton.clone(clonedNodesMap);\n            }\n            if (newChild.material) {\n                newChild.material = newChild.material.clone();\n            }\n        });\n\n        return newNode;\n    },\n\n    /**\n     * Traverse the scene and add the renderable object to the render list.\n     * It needs camera for the frustum culling.\n     *\n     * @param {clay.Camera} camera\n     * @param {boolean} updateSceneBoundingBox\n     * @return {clay.Scene.RenderList}\n     */\n    updateRenderList: function (camera, updateSceneBoundingBox) {\n        var id = camera.__uid__;\n        var renderList = this._renderLists.get(id);\n        if (!renderList) {\n            renderList = new RenderList();\n            this._renderLists.put(id, renderList);\n        }\n        renderList.startCount();\n\n        if (updateSceneBoundingBox) {\n            this.viewBoundingBoxLastFrame.min.set(Infinity, Infinity, Infinity);\n            this.viewBoundingBoxLastFrame.max.set(-Infinity, -Infinity, -Infinity);\n        }\n\n        var sceneMaterialTransparent = this.material && this.material.transparent || false;\n        this._doUpdateRenderList(this, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox);\n\n        renderList.endCount();\n\n        return renderList;\n    },\n\n    /**\n     * Get render list. Used after {@link clay.Scene#updateRenderList}\n     * @param {clay.Camera} camera\n     * @return {clay.Scene.RenderList}\n     */\n    getRenderList: function (camera) {\n        return this._renderLists.get(camera.__uid__);\n    },\n\n    _doUpdateRenderList: function (parent, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox) {\n        if (parent.invisible) {\n            return;\n        }\n        // TODO Optimize\n        for (var i = 0; i < parent._children.length; i++) {\n            var child = parent._children[i];\n\n            if (child.isRenderable()) {\n                // Frustum culling\n                var worldM = child.isSkinnedMesh() ? IDENTITY : child.worldTransform.array;\n                var geometry = child.geometry;\n\n                mat4.multiplyAffine(WORLDVIEW, camera.viewMatrix.array, worldM);\n                if (updateSceneBoundingBox && !geometry.boundingBox || !this.isFrustumCulled(child, camera, WORLDVIEW)) {\n                    renderList.add(child, child.material.transparent || sceneMaterialTransparent);\n                }\n            }\n            if (child._children.length > 0) {\n                this._doUpdateRenderList(child, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox);\n            }\n        }\n    },\n\n    /**\n     * If an scene object is culled by camera frustum\n     *\n     * Object can be a renderable or a light\n     *\n     * @param {clay.Node} object\n     * @param {clay.Camera} camera\n     * @param {Array.<number>} worldViewMat represented with array\n     * @param {Array.<number>} projectionMat represented with array\n     */\n    isFrustumCulled: (function () {\n        // Frustum culling\n        // http://www.cse.chalmers.se/~uffe/vfc_bbox.pdf\n        var cullingBoundingBox = new BoundingBox();\n        var cullingMatrix = new Matrix4();\n        return function(object, camera, worldViewMat) {\n            // Bounding box can be a property of object(like light) or renderable.geometry\n            // PENDING\n            var geoBBox = object.boundingBox;\n            if (!geoBBox) {\n                if (object.skeleton && object.skeleton.boundingBox) {\n                    geoBBox = object.skeleton.boundingBox;\n                }\n                else {\n                    geoBBox = object.geometry.boundingBox;\n                }\n            }\n\n            if (!geoBBox) {\n                return false;\n            }\n\n            cullingMatrix.array = worldViewMat;\n            cullingBoundingBox.transformFrom(geoBBox, cullingMatrix);\n\n            // Passingly update the scene bounding box\n            // FIXME exclude very large mesh like ground plane or terrain ?\n            // FIXME Only rendererable which cast shadow ?\n\n            // FIXME boundingBox becomes much larger after transformd.\n            if (object.castShadow) {\n                this.viewBoundingBoxLastFrame.union(cullingBoundingBox);\n            }\n            // Ignore frustum culling if object is skinned mesh.\n            if (object.frustumCulling)  {\n                if (!cullingBoundingBox.intersectBoundingBox(camera.frustum.boundingBox)) {\n                    return true;\n                }\n\n                cullingMatrix.array = camera.projectionMatrix.array;\n                if (\n                    cullingBoundingBox.max.array[2] > 0 &&\n                    cullingBoundingBox.min.array[2] < 0\n                ) {\n                    // Clip in the near plane\n                    cullingBoundingBox.max.array[2] = -1e-20;\n                }\n\n                cullingBoundingBox.applyProjection(cullingMatrix);\n\n                var min = cullingBoundingBox.min.array;\n                var max = cullingBoundingBox.max.array;\n\n                if (\n                    max[0] < -1 || min[0] > 1\n                    || max[1] < -1 || min[1] > 1\n                    || max[2] < -1 || min[2] > 1\n                ) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    })(),\n\n    _updateLightUniforms: function () {\n        var lights = this.lights;\n        // Put the light cast shadow before the light not cast shadow\n        lights.sort(lightSortFunc);\n\n        var lightUniforms = this._lightUniforms;\n        for (var group in lightUniforms) {\n            for (var symbol in lightUniforms[group]) {\n                lightUniforms[group][symbol].value.length = 0;\n            }\n        }\n        for (var i = 0; i < lights.length; i++) {\n\n            var light = lights[i];\n\n            if (light.invisible) {\n                continue;\n            }\n\n            var group = light.group;\n\n            for (var symbol in light.uniformTemplates) {\n                var uniformTpl = light.uniformTemplates[symbol];\n                var value = uniformTpl.value(light);\n                if (value == null) {\n                    continue;\n                }\n                if (!lightUniforms[group]) {\n                    lightUniforms[group] = {};\n                }\n                if (!lightUniforms[group][symbol]) {\n                    lightUniforms[group][symbol] = {\n                        type: '',\n                        value: []\n                    };\n                }\n                var lu = lightUniforms[group][symbol];\n                lu.type = uniformTpl.type + 'v';\n                switch (uniformTpl.type) {\n                    case '1i':\n                    case '1f':\n                    case 't':\n                        lu.value.push(value);\n                        break;\n                    case '2f':\n                    case '3f':\n                    case '4f':\n                        for (var j = 0; j < value.length; j++) {\n                            lu.value.push(value[j]);\n                        }\n                        break;\n                    default:\n                        console.error('Unkown light uniform type ' + uniformTpl.type);\n                }\n            }\n        }\n    },\n\n    getLightGroups: function () {\n        var lightGroups = [];\n        for (var groupId in this._lightNumber) {\n            lightGroups.push(groupId);\n        }\n        return lightGroups;\n    },\n\n    getNumberChangedLightGroups: function () {\n        var lightGroups = [];\n        for (var groupId in this._lightNumber) {\n            if (this.isLightNumberChanged(groupId)) {\n                lightGroups.push(groupId);\n            }\n        }\n        return lightGroups;\n    },\n\n    // Determine if light group is different with since last frame\n    // Used to determine whether to update shader and scene's uniforms in Renderer.render\n    isLightNumberChanged: function (lightGroup) {\n        var prevLightNumber = this._previousLightNumber;\n        var currentLightNumber = this._lightNumber;\n        // PENDING Performance\n        for (var type in currentLightNumber[lightGroup]) {\n            if (!prevLightNumber[lightGroup]) {\n                return true;\n            }\n            if (currentLightNumber[lightGroup][type] !== prevLightNumber[lightGroup][type]) {\n                return true;\n            }\n        }\n        for (var type in prevLightNumber[lightGroup]) {\n            if (!currentLightNumber[lightGroup]) {\n                return true;\n            }\n            if (currentLightNumber[lightGroup][type] !== prevLightNumber[lightGroup][type]) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    getLightsNumbers: function (lightGroup) {\n        return this._lightNumber[lightGroup];\n    },\n\n    getProgramKey: function (lightGroup) {\n        return this._lightProgramKeys[lightGroup];\n    },\n\n    setLightUniforms: (function () {\n        function setUniforms(uniforms, program, renderer) {\n            for (var symbol in uniforms) {\n                var lu = uniforms[symbol];\n                if (lu.type === 'tv') {\n                    if (!program.hasUniform(symbol)) {\n                        continue;\n                    }\n                    var texSlots = [];\n                    for (var i = 0; i < lu.value.length; i++) {\n                        var texture = lu.value[i];\n                        var slot = program.takeCurrentTextureSlot(renderer, texture);\n                        texSlots.push(slot);\n                    }\n                    program.setUniform(renderer.gl, '1iv', symbol, texSlots);\n                }\n                else {\n                    program.setUniform(renderer.gl, lu.type, symbol, lu.value);\n                }\n            }\n        }\n\n        return function (program, lightGroup, renderer) {\n            setUniforms(this._lightUniforms[lightGroup], program, renderer);\n            // Set shadows\n            setUniforms(this.shadowUniforms, program, renderer);\n        };\n    })(),\n\n    /**\n     * Dispose self, clear all the scene objects\n     * But resources of gl like texuture, shader will not be disposed.\n     * Mostly you should use disposeScene method in Renderer to do dispose.\n     */\n    dispose: function () {\n        this.material = null;\n        this._opaqueList = [];\n        this._transparentList = [];\n\n        this.lights = [];\n\n        this._lightUniforms = {};\n\n        this._lightNumber = {};\n        this._nodeRepository = {};\n    }\n});\n\nfunction lightSortFunc(a, b) {\n    if (b.castShadow && !a.castShadow) {\n        return true;\n    }\n}\n\nexport default Scene;\n","import Node from './Node';\nimport Shader from './Shader';\n\nimport lightShader from './shader/source/header/light';\nShader['import'](lightShader);\n\n/**\n * @constructor clay.Light\n * @extends clay.Node\n */\nvar Light = Node.extend(function(){\n    return /** @lends clay.Light# */ {\n        /**\n         * Light RGB color\n         * @type {number[]}\n         */\n        color: [1, 1, 1],\n\n        /**\n         * Light intensity\n         * @type {number}\n         */\n        intensity: 1.0,\n\n        // Config for shadow map\n        /**\n         * If light cast shadow\n         * @type {boolean}\n         */\n        castShadow: true,\n\n        /**\n         * Shadow map size\n         * @type {number}\n         */\n        shadowResolution: 512,\n\n        /**\n         * Light group, shader with same `lightGroup` will be affected\n         *\n         * Only useful in forward rendering\n         * @type {number}\n         */\n        group: 0\n    };\n},\n/** @lends clay.Light.prototype. */\n{\n    /**\n     * Light type\n     * @type {string}\n     * @memberOf clay.Light#\n     */\n    type: '',\n\n    /**\n     * @return {clay.Light}\n     * @memberOf clay.Light.prototype\n     */\n    clone: function() {\n        var light = Node.prototype.clone.call(this);\n        light.color = Array.prototype.slice.call(this.color);\n        light.intensity = this.intensity;\n        light.castShadow = this.castShadow;\n        light.shadowResolution = this.shadowResolution;\n\n        return light;\n    }\n});\n\nexport default Light;\n","import calcAmbientSHLightEssl from './calcAmbientSHLight.glsl.js';\n\nvar uniformVec3Prefix = 'uniform vec3 ';\nvar uniformFloatPrefix = 'uniform float ';\nvar exportHeaderPrefix = '@export clay.header.';\nvar exportEnd = '@end';\nvar unconfigurable = ':unconfigurable;';\nexport default [\n    exportHeaderPrefix + 'directional_light',\n    uniformVec3Prefix + 'directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'directionalLightColor[DIRECTIONAL_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'ambient_light',\n    uniformVec3Prefix + 'ambientLightColor[AMBIENT_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'ambient_sh_light',\n    uniformVec3Prefix + 'ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]' + unconfigurable,\n    calcAmbientSHLightEssl,\n    exportEnd,\n\n    exportHeaderPrefix + 'ambient_cubemap_light',\n    uniformVec3Prefix + 'ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]' + unconfigurable,\n    'uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]' + unconfigurable,\n    'uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'point_light',\n    uniformVec3Prefix + 'pointLightPosition[POINT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'pointLightRange[POINT_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'pointLightColor[POINT_LIGHT_COUNT]' + unconfigurable,\n    exportEnd,\n\n    exportHeaderPrefix + 'spot_light',\n    uniformVec3Prefix + 'spotLightPosition[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'spotLightDirection[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightRange[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformFloatPrefix + 'spotLightFalloffFactor[SPOT_LIGHT_COUNT]' + unconfigurable,\n    uniformVec3Prefix + 'spotLightColor[SPOT_LIGHT_COUNT]' + unconfigurable,\n    exportEnd\n].join('\\n');\n","export default \"vec3 calcAmbientSHLight(int idx, vec3 N) {\\n int offset = 9 * idx;\\n return ambientSHLightCoefficients[0]\\n + ambientSHLightCoefficients[1] * N.x\\n + ambientSHLightCoefficients[2] * N.y\\n + ambientSHLightCoefficients[3] * N.z\\n + ambientSHLightCoefficients[4] * N.x * N.z\\n + ambientSHLightCoefficients[5] * N.z * N.y\\n + ambientSHLightCoefficients[6] * N.y * N.x\\n + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\\n + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\\n}\";\n","import Node from './Node';\nimport Matrix4 from './math/Matrix4';\nimport Frustum from './math/Frustum';\nimport Ray from './math/Ray';\n\nimport vec4 from './glmatrix/vec4';\nimport vec3 from './glmatrix/vec3';\n\n\n/**\n * @constructor clay.Camera\n * @extends clay.Node\n */\nvar Camera = Node.extend(function () {\n    return /** @lends clay.Camera# */ {\n        /**\n         * Camera projection matrix\n         * @type {clay.Matrix4}\n         */\n        projectionMatrix: new Matrix4(),\n\n        /**\n         * Inverse of camera projection matrix\n         * @type {clay.Matrix4}\n         */\n        invProjectionMatrix: new Matrix4(),\n\n        /**\n         * View matrix, equal to inverse of camera's world matrix\n         * @type {clay.Matrix4}\n         */\n        viewMatrix: new Matrix4(),\n\n        /**\n         * Camera frustum in view space\n         * @type {clay.Frustum}\n         */\n        frustum: new Frustum()\n    };\n}, function () {\n    this.update(true);\n},\n/** @lends clay.Camera.prototype */\n{\n\n    update: function (force) {\n        Node.prototype.update.call(this, force);\n        Matrix4.invert(this.viewMatrix, this.worldTransform);\n\n        this.updateProjectionMatrix();\n        Matrix4.invert(this.invProjectionMatrix, this.projectionMatrix);\n\n        this.frustum.setFromProjection(this.projectionMatrix);\n    },\n\n    /**\n     * Set camera view matrix\n     */\n    setViewMatrix: function (viewMatrix) {\n        Matrix4.copy(this.viewMatrix, viewMatrix);\n        Matrix4.invert(this.worldTransform, viewMatrix);\n        this.decomposeWorldTransform();\n    },\n\n    /**\n     * Decompose camera projection matrix\n     */\n    decomposeProjectionMatrix: function () {},\n\n    /**\n     * Set camera projection matrix\n     * @param {clay.Matrix4} projectionMatrix\n     */\n    setProjectionMatrix: function (projectionMatrix) {\n        Matrix4.copy(this.projectionMatrix, projectionMatrix);\n        Matrix4.invert(this.invProjectionMatrix, projectionMatrix);\n        this.decomposeProjectionMatrix();\n    },\n    /**\n     * Update projection matrix, called after update\n     */\n    updateProjectionMatrix: function () {},\n\n    /**\n     * Cast a picking ray from camera near plane to far plane\n     * @function\n     * @param {clay.Vector2} ndc\n     * @param {clay.Ray} [out]\n     * @return {clay.Ray}\n     */\n    castRay: (function () {\n        var v4 = vec4.create();\n        return function (ndc, out) {\n            var ray = out !== undefined ? out : new Ray();\n            var x = ndc.array[0];\n            var y = ndc.array[1];\n            vec4.set(v4, x, y, -1, 1);\n            vec4.transformMat4(v4, v4, this.invProjectionMatrix.array);\n            vec4.transformMat4(v4, v4, this.worldTransform.array);\n            vec3.scale(ray.origin.array, v4, 1 / v4[3]);\n\n            vec4.set(v4, x, y, 1, 1);\n            vec4.transformMat4(v4, v4, this.invProjectionMatrix.array);\n            vec4.transformMat4(v4, v4, this.worldTransform.array);\n            vec3.scale(v4, v4, 1 / v4[3]);\n            vec3.sub(ray.direction.array, v4, ray.origin.array);\n\n            vec3.normalize(ray.direction.array, ray.direction.array);\n            ray.direction._dirty = true;\n            ray.origin._dirty = true;\n\n            return ray;\n        };\n    })(),\n\n    /**\n     * @function\n     * @name clone\n     * @return {clay.Camera}\n     * @memberOf clay.Camera.prototype\n     */\n});\n\nexport default Camera;\n","import BoundingBox from './BoundingBox';\nimport Plane from './Plane';\n\nimport vec3 from '../glmatrix/vec3';\n\nvar vec3Set = vec3.set;\nvar vec3Copy = vec3.copy;\nvar vec3TranformMat4 = vec3.transformMat4;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @constructor\n * @alias clay.Frustum\n */\nvar Frustum = function() {\n\n    /**\n     * Eight planes to enclose the frustum\n     * @type {clay.Plane[]}\n     */\n    this.planes = [];\n\n    for (var i = 0; i < 6; i++) {\n        this.planes.push(new Plane());\n    }\n\n    /**\n     * Bounding box of frustum\n     * @type {clay.BoundingBox}\n     */\n    this.boundingBox = new BoundingBox();\n\n    /**\n     * Eight vertices of frustum\n     * @type {Float32Array[]}\n     */\n    this.vertices = [];\n    for (var i = 0; i < 8; i++) {\n        this.vertices[i] = vec3.fromValues(0, 0, 0);\n    }\n};\n\nFrustum.prototype = {\n\n    // http://web.archive.org/web/20120531231005/http://crazyjoke.free.fr/doc/3D/plane%20extraction.pdf\n    /**\n     * Set frustum from a projection matrix\n     * @param {clay.Matrix4} projectionMatrix\n     */\n    setFromProjection: function(projectionMatrix) {\n\n        var planes = this.planes;\n        var m = projectionMatrix.array;\n        var m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3];\n        var m4 = m[4], m5 = m[5], m6 = m[6], m7 = m[7];\n        var m8 = m[8], m9 = m[9], m10 = m[10], m11 = m[11];\n        var m12 = m[12], m13 = m[13], m14 = m[14], m15 = m[15];\n\n        // Update planes\n        vec3Set(planes[0].normal.array, m3 - m0, m7 - m4, m11 - m8);\n        planes[0].distance = -(m15 - m12);\n        planes[0].normalize();\n\n        vec3Set(planes[1].normal.array, m3 + m0, m7 + m4, m11 + m8);\n        planes[1].distance = -(m15 + m12);\n        planes[1].normalize();\n\n        vec3Set(planes[2].normal.array, m3 + m1, m7 + m5, m11 + m9);\n        planes[2].distance = -(m15 + m13);\n        planes[2].normalize();\n\n        vec3Set(planes[3].normal.array, m3 - m1, m7 - m5, m11 - m9);\n        planes[3].distance = -(m15 - m13);\n        planes[3].normalize();\n\n        vec3Set(planes[4].normal.array, m3 - m2, m7 - m6, m11 - m10);\n        planes[4].distance = -(m15 - m14);\n        planes[4].normalize();\n\n        vec3Set(planes[5].normal.array, m3 + m2, m7 + m6, m11 + m10);\n        planes[5].distance = -(m15 + m14);\n        planes[5].normalize();\n\n        // Perspective projection\n        var boundingBox = this.boundingBox;\n        var vertices = this.vertices;\n        if (m15 === 0)  {\n            var aspect = m5 / m0;\n            var zNear = -m14 / (m10 - 1);\n            var zFar = -m14 / (m10 + 1);\n            var farY = -zFar / m5;\n            var nearY = -zNear / m5;\n            // Update bounding box\n            boundingBox.min.set(-farY * aspect, -farY, zFar);\n            boundingBox.max.set(farY * aspect, farY, zNear);\n            // update vertices\n            //--- min z\n            // min x\n            vec3Set(vertices[0], -farY * aspect, -farY, zFar);\n            vec3Set(vertices[1], -farY * aspect, farY, zFar);\n            // max x\n            vec3Set(vertices[2], farY * aspect, -farY, zFar);\n            vec3Set(vertices[3], farY * aspect, farY, zFar);\n            //-- max z\n            vec3Set(vertices[4], -nearY * aspect, -nearY, zNear);\n            vec3Set(vertices[5], -nearY * aspect, nearY, zNear);\n            vec3Set(vertices[6], nearY * aspect, -nearY, zNear);\n            vec3Set(vertices[7], nearY * aspect, nearY, zNear);\n        }\n        else { // Orthographic projection\n            var left = (-1 - m12) / m0;\n            var right = (1 - m12) / m0;\n            var top = (1 - m13) / m5;\n            var bottom = (-1 - m13) / m5;\n            var near = (-1 - m14) / m10;\n            var far = (1 - m14) / m10;\n\n\n            boundingBox.min.set(Math.min(left, right), Math.min(bottom, top), Math.min(far, near));\n            boundingBox.max.set(Math.max(right, left), Math.max(top, bottom), Math.max(near, far));\n\n            var min = boundingBox.min.array;\n            var max = boundingBox.max.array;\n            //--- min z\n            // min x\n            vec3Set(vertices[0], min[0], min[1], min[2]);\n            vec3Set(vertices[1], min[0], max[1], min[2]);\n            // max x\n            vec3Set(vertices[2], max[0], min[1], min[2]);\n            vec3Set(vertices[3], max[0], max[1], min[2]);\n            //-- max z\n            vec3Set(vertices[4], min[0], min[1], max[2]);\n            vec3Set(vertices[5], min[0], max[1], max[2]);\n            vec3Set(vertices[6], max[0], min[1], max[2]);\n            vec3Set(vertices[7], max[0], max[1], max[2]);\n        }\n    },\n\n    /**\n     * Apply a affine transform matrix and set to the given bounding box\n     * @function\n     * @param {clay.BoundingBox}\n     * @param {clay.Matrix4}\n     * @return {clay.BoundingBox}\n     */\n    getTransformedBoundingBox: (function() {\n\n        var tmpVec3 = vec3.create();\n\n        return function(bbox, matrix) {\n            var vertices = this.vertices;\n\n            var m4 = matrix.array;\n            var min = bbox.min;\n            var max = bbox.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            var v = vertices[0];\n            vec3TranformMat4(tmpVec3, v, m4);\n            vec3Copy(minArr, tmpVec3);\n            vec3Copy(maxArr, tmpVec3);\n\n            for (var i = 1; i < 8; i++) {\n                v = vertices[i];\n                vec3TranformMat4(tmpVec3, v, m4);\n\n                minArr[0] = mathMin(tmpVec3[0], minArr[0]);\n                minArr[1] = mathMin(tmpVec3[1], minArr[1]);\n                minArr[2] = mathMin(tmpVec3[2], minArr[2]);\n\n                maxArr[0] = mathMax(tmpVec3[0], maxArr[0]);\n                maxArr[1] = mathMax(tmpVec3[1], maxArr[1]);\n                maxArr[2] = mathMax(tmpVec3[2], maxArr[2]);\n            }\n\n            min._dirty = true;\n            max._dirty = true;\n\n            return bbox;\n        };\n    }) ()\n};\nexport default Frustum;\n","import Vector3 from './Vector3';\nimport mat4 from '../glmatrix/mat4';\nimport vec3 from '../glmatrix/vec3';\nimport vec4 from '../glmatrix/vec4';\n\n/**\n * @constructor\n * @alias clay.Plane\n * @param {clay.Vector3} [normal]\n * @param {number} [distance]\n */\nvar Plane = function(normal, distance) {\n    /**\n     * Normal of the plane\n     * @type {clay.Vector3}\n     */\n    this.normal = normal || new Vector3(0, 1, 0);\n\n    /**\n     * Constant of the plane equation, used as distance to the origin\n     * @type {number}\n     */\n    this.distance = distance || 0;\n};\n\nPlane.prototype = {\n\n    constructor: Plane,\n\n    /**\n     * Distance from a given point to the plane\n     * @param  {clay.Vector3} point\n     * @return {number}\n     */\n    distanceToPoint: function(point) {\n        return vec3.dot(point.array, this.normal.array) - this.distance;\n    },\n\n    /**\n     * Calculate the projection point on the plane\n     * @param  {clay.Vector3} point\n     * @param  {clay.Vector3} out\n     * @return {clay.Vector3}\n     */\n    projectPoint: function(point, out) {\n        if (!out) {\n            out = new Vector3();\n        }\n        var d = this.distanceToPoint(point);\n        vec3.scaleAndAdd(out.array, point.array, this.normal.array, -d);\n        out._dirty = true;\n        return out;\n    },\n\n    /**\n     * Normalize the plane's normal and calculate the distance\n     */\n    normalize: function() {\n        var invLen = 1 / vec3.len(this.normal.array);\n        vec3.scale(this.normal.array, invLen);\n        this.distance *= invLen;\n    },\n\n    /**\n     * If the plane intersect a frustum\n     * @param  {clay.Frustum} Frustum\n     * @return {boolean}\n     */\n    intersectFrustum: function(frustum) {\n        // Check if all coords of frustum is on plane all under plane\n        var coords = frustum.vertices;\n        var normal = this.normal.array;\n        var onPlane = vec3.dot(coords[0].array, normal) > this.distance;\n        for (var i = 1; i < 8; i++) {\n            if ((vec3.dot(coords[i].array, normal) > this.distance) != onPlane) {\n                return true;\n            }\n        }\n    },\n\n    /**\n     * Calculate the intersection point between plane and a given line\n     * @function\n     * @param {clay.Vector3} start start point of line\n     * @param {clay.Vector3} end end point of line\n     * @param {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    intersectLine: (function() {\n        var rd = vec3.create();\n        return function(start, end, out) {\n            var d0 = this.distanceToPoint(start);\n            var d1 = this.distanceToPoint(end);\n            if ((d0 > 0 && d1 > 0) || (d0 < 0 && d1 < 0)) {\n                return null;\n            }\n            // Ray intersection\n            var pn = this.normal.array;\n            var d = this.distance;\n            var ro = start.array;\n            // direction\n            vec3.sub(rd, end.array, start.array);\n            vec3.normalize(rd, rd);\n\n            var divider = vec3.dot(pn, rd);\n            // ray is parallel to the plane\n            if (divider === 0) {\n                return null;\n            }\n            if (!out) {\n                out = new Vector3();\n            }\n            var t = (vec3.dot(pn, ro) - d) / divider;\n            vec3.scaleAndAdd(out.array, ro, rd, -t);\n            out._dirty = true;\n            return out;\n        };\n    })(),\n\n    /**\n     * Apply an affine transform matrix to plane\n     * @function\n     * @return {clay.Matrix4}\n     */\n    applyTransform: (function() {\n        var inverseTranspose = mat4.create();\n        var normalv4 = vec4.create();\n        var pointv4 = vec4.create();\n        pointv4[3] = 1;\n        return function(m4) {\n            m4 = m4.array;\n            // Transform point on plane\n            vec3.scale(pointv4, this.normal.array, this.distance);\n            vec4.transformMat4(pointv4, pointv4, m4);\n            this.distance = vec3.dot(pointv4, this.normal.array);\n            // Transform plane normal\n            mat4.invert(inverseTranspose, m4);\n            mat4.transpose(inverseTranspose, inverseTranspose);\n            normalv4[3] = 0;\n            vec3.copy(normalv4, this.normal.array);\n            vec4.transformMat4(normalv4, normalv4, inverseTranspose);\n            vec3.copy(this.normal.array, normalv4);\n        };\n    })(),\n\n    /**\n     * Copy from another plane\n     * @param  {clay.Vector3} plane\n     */\n    copy: function(plane) {\n        vec3.copy(this.normal.array, plane.normal.array);\n        this.normal._dirty = true;\n        this.distance = plane.distance;\n    },\n\n    /**\n     * Clone a new plane\n     * @return {clay.Plane}\n     */\n    clone: function() {\n        var plane = new Plane();\n        plane.copy(this);\n        return plane;\n    }\n};\n\nexport default Plane;\n","import Texture2D from '../Texture2D';\nimport TextureCube from '../TextureCube';\nimport vendor from '../core/vendor';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport Skydome from '../plugin/Skydome';\nimport Scene from '../Scene';\n\nimport dds from './dds';\nimport hdr from './hdr';\n\n/**\n * @alias clay.util.texture\n */\nvar textureUtil = {\n    /**\n     * @param  {string|object} path\n     * @param  {object} [option]\n     * @param  {Function} [onsuccess]\n     * @param  {Function} [onerror]\n     * @return {clay.Texture}\n     */\n    loadTexture: function (path, option, onsuccess, onerror) {\n        var texture;\n        if (typeof(option) === 'function') {\n            onsuccess = option;\n            onerror = onsuccess;\n            option = {};\n        }\n        else {\n            option = option || {};\n        }\n        if (typeof(path) === 'string') {\n            if (path.match(/.hdr$/) || option.fileType === 'hdr') {\n                texture = new Texture2D({\n                    width: 0,\n                    height: 0,\n                    sRGB: false\n                });\n                textureUtil._fetchTexture(\n                    path,\n                    function (data) {\n                        hdr.parseRGBE(data, texture, option.exposure);\n                        texture.dirty();\n                        onsuccess && onsuccess(texture);\n                    },\n                    onerror\n                );\n                return texture;\n            }\n            else if (path.match(/.dds$/) || option.fileType === 'dds') {\n                texture = new Texture2D({\n                    width: 0,\n                    height: 0\n                });\n                textureUtil._fetchTexture(\n                    path,\n                    function (data) {\n                        dds.parse(data, texture);\n                        texture.dirty();\n                        onsuccess && onsuccess(texture);\n                    },\n                    onerror\n                );\n            }\n            else {\n                texture = new Texture2D();\n                texture.load(path);\n                texture.success(onsuccess);\n                texture.error(onerror);\n            }\n        }\n        else if (typeof path === 'object' && typeof(path.px) !== 'undefined') {\n            texture = new TextureCube();\n            texture.load(path);\n            texture.success(onsuccess);\n            texture.error(onerror);\n        }\n        return texture;\n    },\n\n    /**\n     * Load a panorama texture and render it to a cube map\n     * @param  {clay.Renderer} renderer\n     * @param  {string} path\n     * @param  {clay.TextureCube} cubeMap\n     * @param  {object} [option]\n     * @param  {boolean} [option.encodeRGBM]\n     * @param  {number} [option.exposure]\n     * @param  {Function} [onsuccess]\n     * @param  {Function} [onerror]\n     */\n    loadPanorama: function (renderer, path, cubeMap, option, onsuccess, onerror) {\n        var self = this;\n\n        if (typeof(option) === 'function') {\n            onsuccess = option;\n            onerror = onsuccess;\n            option = {};\n        }\n        else {\n            option = option || {};\n        }\n\n        textureUtil.loadTexture(path, option, function (texture) {\n            // PENDING\n            texture.flipY = option.flipY || false;\n            self.panoramaToCubeMap(renderer, texture, cubeMap, option);\n            texture.dispose(renderer);\n            onsuccess && onsuccess(cubeMap);\n        }, onerror);\n    },\n\n    /**\n     * Render a panorama texture to a cube map\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.Texture2D} panoramaMap\n     * @param  {clay.TextureCube} cubeMap\n     * @param  {Object} option\n     * @param  {boolean} [option.encodeRGBM]\n     */\n    panoramaToCubeMap: function (renderer, panoramaMap, cubeMap, option) {\n        var environmentMapPass = new EnvironmentMapPass();\n        var skydome = new Skydome({\n            scene: new Scene()\n        });\n        skydome.setEnvironmentMap(panoramaMap);\n\n        option = option || {};\n        if (option.encodeRGBM) {\n            skydome.material.define('fragment', 'RGBM_ENCODE');\n        }\n\n        // Share sRGB\n        cubeMap.sRGB = panoramaMap.sRGB;\n\n        environmentMapPass.texture = cubeMap;\n        environmentMapPass.render(renderer, skydome.scene);\n        environmentMapPass.texture = null;\n        environmentMapPass.dispose(renderer);\n        return cubeMap;\n    },\n\n    /**\n     * Convert height map to normal map\n     * @param {HTMLImageElement|HTMLCanvasElement} image\n     * @param {boolean} [checkBump=false]\n     * @return {HTMLCanvasElement}\n     */\n    heightToNormal: function (image, checkBump) {\n        var canvas = document.createElement('canvas');\n        var width = canvas.width = image.width;\n        var height = canvas.height = image.height;\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(image, 0, 0, width, height);\n        checkBump = checkBump || false;\n        var srcData = ctx.getImageData(0, 0, width, height);\n        var dstData = ctx.createImageData(width, height);\n        for (var i = 0; i < srcData.data.length; i += 4) {\n            if (checkBump) {\n                var r = srcData.data[i];\n                var g = srcData.data[i + 1];\n                var b = srcData.data[i + 2];\n                var diff = Math.abs(r - g) + Math.abs(g - b);\n                if (diff > 20) {\n                    console.warn('Given image is not a height map');\n                    return image;\n                }\n            }\n            // Modified from http://mrdoob.com/lab/javascript/height2normal/\n            var x1, y1, x2, y2;\n            if (i % (width * 4) === 0) {\n                // left edge\n                x1 = srcData.data[i];\n                x2 = srcData.data[i + 4];\n            }\n            else if (i % (width * 4) === (width - 1) * 4) {\n                // right edge\n                x1 = srcData.data[i - 4];\n                x2 = srcData.data[i];\n            }\n            else {\n                x1 = srcData.data[i - 4];\n                x2 = srcData.data[i + 4];\n            }\n\n            if (i < width * 4) {\n                // top edge\n                y1 = srcData.data[i];\n                y2 = srcData.data[i + width * 4];\n            }\n            else if (i > width * (height - 1) * 4) {\n                // bottom edge\n                y1 = srcData.data[i - width * 4];\n                y2 = srcData.data[i];\n            }\n            else {\n                y1 = srcData.data[i - width * 4];\n                y2 = srcData.data[i + width * 4];\n            }\n\n            dstData.data[i] = (x1 - x2) + 127;\n            dstData.data[i + 1] = (y1 - y2) + 127;\n            dstData.data[i + 2] = 255;\n            dstData.data[i + 3] = 255;\n        }\n        ctx.putImageData(dstData, 0, 0);\n        return canvas;\n    },\n\n    /**\n     * Convert height map to normal map\n     * @param {HTMLImageElement|HTMLCanvasElement} image\n     * @param {boolean} [checkBump=false]\n     * @param {number} [threshold=20]\n     * @return {HTMLCanvasElement}\n     */\n    isHeightImage: function (img, downScaleSize, threshold) {\n        if (!img || !img.width || !img.height) {\n            return false;\n        }\n\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var size = downScaleSize || 32;\n        threshold = threshold || 20;\n        canvas.width = canvas.height = size;\n        ctx.drawImage(img, 0, 0, size, size);\n        var srcData = ctx.getImageData(0, 0, size, size);\n        for (var i = 0; i < srcData.data.length; i += 4) {\n            var r = srcData.data[i];\n            var g = srcData.data[i + 1];\n            var b = srcData.data[i + 2];\n            var diff = Math.abs(r - g) + Math.abs(g - b);\n            if (diff > threshold) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    _fetchTexture: function (path, onsuccess, onerror) {\n        vendor.request.get({\n            url: path,\n            responseType: 'arraybuffer',\n            onload: onsuccess,\n            onerror: onerror\n        });\n    },\n\n    /**\n     * Create a chessboard texture\n     * @param  {number} [size]\n     * @param  {number} [unitSize]\n     * @param  {string} [color1]\n     * @param  {string} [color2]\n     * @return {clay.Texture2D}\n     */\n    createChessboard: function (size, unitSize, color1, color2) {\n        size = size || 512;\n        unitSize = unitSize || 64;\n        color1 = color1 || 'black';\n        color2 = color2 || 'white';\n\n        var repeat = Math.ceil(size / unitSize);\n\n        var canvas = document.createElement('canvas');\n        canvas.width = size;\n        canvas.height = size;\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = color2;\n        ctx.fillRect(0, 0, size, size);\n\n        ctx.fillStyle = color1;\n        for (var i = 0; i < repeat; i++) {\n            for (var j = 0; j < repeat; j++) {\n                var isFill = j % 2 ? (i % 2) : (i % 2 - 1);\n                if (isFill) {\n                    ctx.fillRect(i * unitSize, j * unitSize, unitSize, unitSize);\n                }\n            }\n        }\n\n        var texture = new Texture2D({\n            image: canvas,\n            anisotropic: 8\n        });\n\n        return texture;\n    },\n\n    /**\n     * Create a blank pure color 1x1 texture\n     * @param  {string} color\n     * @return {clay.Texture2D}\n     */\n    createBlank: function (color) {\n        var canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = 1;\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = color;\n        ctx.fillRect(0, 0, 1, 1);\n\n        var texture = new Texture2D({\n            image: canvas\n        });\n\n        return texture;\n    }\n};\n\nexport default textureUtil;\n","import Texture from './Texture';\nimport glenum from './core/glenum';\nimport util from './core/util';\nimport mathUtil from './math/util';\nimport vendor from './core/vendor';\nvar isPowerOfTwo = mathUtil.isPowerOfTwo;\n\nvar targetList = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n/**\n * @constructor clay.TextureCube\n * @extends clay.Texture\n *\n * @example\n *     ...\n *     var mat = new clay.Material({\n *         shader: clay.shader.library.get('clay.phong', 'environmentMap')\n *     });\n *     var envMap = new clay.TextureCube();\n *     envMap.load({\n *         'px': 'assets/textures/sky/px.jpg',\n *         'nx': 'assets/textures/sky/nx.jpg'\n *         'py': 'assets/textures/sky/py.jpg'\n *         'ny': 'assets/textures/sky/ny.jpg'\n *         'pz': 'assets/textures/sky/pz.jpg'\n *         'nz': 'assets/textures/sky/nz.jpg'\n *     });\n *     mat.set('environmentMap', envMap);\n *     ...\n *     envMap.success(function () {\n *         // Wait for the sky texture loaded\n *         animation.on('frame', function (frameTime) {\n *             renderer.render(scene, camera);\n *         });\n *     });\n */\nvar TextureCube = Texture.extend(function () {\n    return /** @lends clay.TextureCube# */{\n\n        /**\n         * @type {boolean}\n         * @default false\n         */\n        // PENDING cubemap should not flipY in default.\n        // flipY: false,\n\n        /**\n         * @type {Object}\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} px\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} nx\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} py\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} ny\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} pz\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} nz\n         */\n        image: {\n            px: null,\n            nx: null,\n            py: null,\n            ny: null,\n            pz: null,\n            nz: null\n        },\n        /**\n         * Pixels data of each side. Will be ignored if images are set.\n         * @type {Object}\n         * @property {?Uint8Array} px\n         * @property {?Uint8Array} nx\n         * @property {?Uint8Array} py\n         * @property {?Uint8Array} ny\n         * @property {?Uint8Array} pz\n         * @property {?Uint8Array} nz\n         */\n        pixels: {\n            px: null,\n            nx: null,\n            py: null,\n            ny: null,\n            pz: null,\n            nz: null\n        },\n\n        /**\n         * @type {Array.<Object>}\n         */\n        mipmaps: []\n    };\n}, {\n\n    textureType: 'textureCube',\n\n    update: function (renderer) {\n        var _gl = renderer.gl;\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, this._cache.get('webgl_texture'));\n\n        this.updateCommon(renderer);\n\n        var glFormat = this.format;\n        var glType = this.type;\n\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_WRAP_S, this.getAvailableWrapS());\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_WRAP_T, this.getAvailableWrapT());\n\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_MAG_FILTER, this.getAvailableMagFilter());\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_MIN_FILTER, this.getAvailableMinFilter());\n\n        var anisotropicExt = renderer.getGLExtension('EXT_texture_filter_anisotropic');\n        if (anisotropicExt && this.anisotropic > 1) {\n            _gl.texParameterf(_gl.TEXTURE_CUBE_MAP, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropic);\n        }\n\n        // Fallback to float type if browser don't have half float extension\n        if (glType === 36193) {\n            var halfFloatExt = renderer.getGLExtension('OES_texture_half_float');\n            if (!halfFloatExt) {\n                glType = glenum.FLOAT;\n            }\n        }\n\n        if (this.mipmaps.length) {\n            var width = this.width;\n            var height = this.height;\n            for (var i = 0; i < this.mipmaps.length; i++) {\n                var mipmap = this.mipmaps[i];\n                this._updateTextureData(_gl, mipmap, i, width, height, glFormat, glType);\n                width /= 2;\n                height /= 2;\n            }\n        }\n        else {\n            this._updateTextureData(_gl, this, 0, this.width, this.height, glFormat, glType);\n\n            if (!this.NPOT && this.useMipmap) {\n                _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n            }\n        }\n\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    },\n\n    _updateTextureData: function (_gl, data, level, width, height, glFormat, glType) {\n        for (var i = 0; i < 6; i++) {\n            var target = targetList[i];\n            var img = data.image && data.image[target];\n            if (img) {\n                _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, glFormat, glFormat, glType, img);\n            }\n            else {\n                _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, glFormat, width, height, 0, glFormat, glType, data.pixels && data.pixels[target]);\n            }\n        }\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     * @memberOf clay.TextureCube.prototype\n     */\n    generateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        if (this.useMipmap && !this.NPOT) {\n            _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, this._cache.get('webgl_texture'));\n            _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n    },\n\n    bind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_CUBE_MAP, this.getWebGLTexture(renderer));\n    },\n\n    unbind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_CUBE_MAP, null);\n    },\n\n    // Overwrite the isPowerOfTwo method\n    isPowerOfTwo: function () {\n        if (this.image.px) {\n            return isPowerOfTwo(this.image.px.width)\n                && isPowerOfTwo(this.image.px.height);\n        }\n        else {\n            return isPowerOfTwo(this.width)\n                && isPowerOfTwo(this.height);\n        }\n    },\n\n    isRenderable: function () {\n        if (this.image.px) {\n            return isImageRenderable(this.image.px)\n                && isImageRenderable(this.image.nx)\n                && isImageRenderable(this.image.py)\n                && isImageRenderable(this.image.ny)\n                && isImageRenderable(this.image.pz)\n                && isImageRenderable(this.image.nz);\n        }\n        else {\n            return !!(this.width && this.height);\n        }\n    },\n\n    load: function (imageList, crossOrigin) {\n        var loading = 0;\n        var self = this;\n        util.each(imageList, function (src, target){\n            var image = vendor.createImage();\n            if (crossOrigin) {\n                image.crossOrigin = crossOrigin;\n            }\n            image.onload = function () {\n                loading --;\n                if (loading === 0){\n                    self.dirty();\n                    self.trigger('success', self);\n                }\n            };\n            image.onerror = function () {\n                loading --;\n            };\n\n            loading++;\n            image.src = src;\n            self.image[target] = image;\n        });\n\n        return this;\n    }\n});\n\nObject.defineProperty(TextureCube.prototype, 'width', {\n    get: function () {\n        if (this.image && this.image.px) {\n            return this.image.px.width;\n        }\n        return this._width;\n    },\n    set: function (value) {\n        if (this.image && this.image.px) {\n            console.warn('Texture from image can\\'t set width');\n        }\n        else {\n            if (this._width !== value) {\n                this.dirty();\n            }\n            this._width = value;\n        }\n    }\n});\nObject.defineProperty(TextureCube.prototype, 'height', {\n    get: function () {\n        if (this.image && this.image.px) {\n            return this.image.px.height;\n        }\n        return this._height;\n    },\n    set: function (value) {\n        if (this.image && this.image.px) {\n            console.warn('Texture from image can\\'t set height');\n        }\n        else {\n            if (this._height !== value) {\n                this.dirty();\n            }\n            this._height = value;\n        }\n    }\n});\nfunction isImageRenderable(image) {\n    return image.width > 0 && image.height > 0;\n}\n\nexport default TextureCube;\n","import Base from '../core/Base';\nimport Vector3 from '../math/Vector3';\nimport PerspectiveCamera from '../camera/Perspective';\nimport FrameBuffer from '../FrameBuffer';\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n/**\n * Pass rendering scene to a environment cube map\n *\n * @constructor clay.prePass.EnvironmentMap\n * @extends clay.core.Base\n * @example\n *     // Example of car reflection\n *     var envMap = new clay.TextureCube({\n *         width: 256,\n *         height: 256\n *     });\n *     var envPass = new clay.prePass.EnvironmentMap({\n *         position: car.position,\n *         texture: envMap\n *     });\n *     var carBody = car.getChildByName('body');\n *     carBody.material.enableTexture('environmentMap');\n *     carBody.material.set('environmentMap', envMap);\n *     ...\n *     animation.on('frame', function(frameTime) {\n *         envPass.render(renderer, scene);\n *         renderer.render(scene, camera);\n *     });\n */\nvar EnvironmentMapPass = Base.extend(function() {\n    var ret = /** @lends clay.prePass.EnvironmentMap# */ {\n        /**\n         * Camera position\n         * @type {clay.Vector3}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        position: new Vector3(),\n        /**\n         * Camera far plane\n         * @type {number}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        far: 1000,\n        /**\n         * Camera near plane\n         * @type {number}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        near: 0.1,\n        /**\n         * Environment cube map\n         * @type {clay.TextureCube}\n         * @memberOf clay.prePass.EnvironmentMap#\n         */\n        texture: null,\n\n        /**\n         * Used if you wan't have shadow in environment map\n         * @type {clay.prePass.ShadowMap}\n         */\n        shadowMapPass: null,\n    };\n    var cameras = ret._cameras = {\n        px: new PerspectiveCamera({ fov: 90 }),\n        nx: new PerspectiveCamera({ fov: 90 }),\n        py: new PerspectiveCamera({ fov: 90 }),\n        ny: new PerspectiveCamera({ fov: 90 }),\n        pz: new PerspectiveCamera({ fov: 90 }),\n        nz: new PerspectiveCamera({ fov: 90 })\n    };\n    cameras.px.lookAt(Vector3.POSITIVE_X, Vector3.NEGATIVE_Y);\n    cameras.nx.lookAt(Vector3.NEGATIVE_X, Vector3.NEGATIVE_Y);\n    cameras.py.lookAt(Vector3.POSITIVE_Y, Vector3.POSITIVE_Z);\n    cameras.ny.lookAt(Vector3.NEGATIVE_Y, Vector3.NEGATIVE_Z);\n    cameras.pz.lookAt(Vector3.POSITIVE_Z, Vector3.NEGATIVE_Y);\n    cameras.nz.lookAt(Vector3.NEGATIVE_Z, Vector3.NEGATIVE_Y);\n\n    // FIXME In windows, use one framebuffer only renders one side of cubemap\n    ret._frameBuffer = new FrameBuffer();\n\n    return ret;\n},  /** @lends clay.prePass.EnvironmentMap# */ {\n    /**\n     * @param  {string} target\n     * @return  {clay.Camera}\n     */\n    getCamera: function (target) {\n        return this._cameras[target];\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.Scene} scene\n     * @param  {boolean} [notUpdateScene=false]\n     */\n    render: function(renderer, scene, notUpdateScene) {\n        var _gl = renderer.gl;\n        if (!notUpdateScene) {\n            scene.update();\n        }\n        // Tweak fov\n        // http://the-witness.net/news/2012/02/seamless-cube-map-filtering/\n        var n = this.texture.width;\n        var fov = 2 * Math.atan(n / (n - 0.5)) / Math.PI * 180;\n\n        for (var i = 0; i < 6; i++) {\n            var target = targets[i];\n            var camera = this._cameras[target];\n            Vector3.copy(camera.position, this.position);\n\n            camera.far = this.far;\n            camera.near = this.near;\n            camera.fov = fov;\n\n            if (this.shadowMapPass) {\n                camera.update();\n\n                // update boundingBoxLastFrame\n                var bbox = scene.getBoundingBox();\n                bbox.applyTransform(camera.viewMatrix);\n                scene.viewBoundingBoxLastFrame.copy(bbox);\n\n                this.shadowMapPass.render(renderer, scene, camera, true);\n            }\n            this._frameBuffer.attach(\n                this.texture, _gl.COLOR_ATTACHMENT0,\n                _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i\n            );\n            this._frameBuffer.bind(renderer);\n            renderer.render(scene, camera, true);\n            this._frameBuffer.unbind(renderer);\n        }\n    },\n    /**\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this._frameBuffer.dispose(renderer);\n    }\n});\n\nexport default EnvironmentMapPass;\n","import Camera from '../Camera';\n\n/**\n * @constructor clay.camera.Perspective\n * @extends clay.Camera\n */\nvar Perspective = Camera.extend(/** @lends clay.camera.Perspective# */{\n    /**\n     * Vertical field of view in degrees\n     * @type {number}\n     */\n    fov: 50,\n    /**\n     * Aspect ratio, typically viewport width / height\n     * @type {number}\n     */\n    aspect: 1,\n    /**\n     * Near bound of the frustum\n     * @type {number}\n     */\n    near: 0.1,\n    /**\n     * Far bound of the frustum\n     * @type {number}\n     */\n    far: 2000\n},\n/** @lends clay.camera.Perspective.prototype */\n{\n\n    updateProjectionMatrix: function() {\n        var rad = this.fov / 180 * Math.PI;\n        this.projectionMatrix.perspective(rad, this.aspect, this.near, this.far);\n    },\n    decomposeProjectionMatrix: function () {\n        var m = this.projectionMatrix.array;\n        var rad = Math.atan(1 / m[5]) * 2;\n        this.fov = rad / Math.PI * 180;\n        this.aspect = m[5] / m[0];\n        this.near = m[14] / (m[10] - 1);\n        this.far = m[14] / (m[10] + 1);\n    },\n    /**\n     * @return {clay.camera.Perspective}\n     */\n    clone: function() {\n        var camera = Camera.prototype.clone.call(this);\n        camera.fov = this.fov;\n        camera.aspect = this.aspect;\n        camera.near = this.near;\n        camera.far = this.far;\n\n        return camera;\n    }\n});\n\nexport default Perspective;\n","import Base from './core/Base';\nimport Texture from './Texture';\nimport TextureCube from './TextureCube';\nimport glenum from './core/glenum';\nimport Cache from './core/Cache';\n\nvar KEY_FRAMEBUFFER = 'framebuffer';\nvar KEY_RENDERBUFFER = 'renderbuffer';\nvar KEY_RENDERBUFFER_WIDTH = KEY_RENDERBUFFER + '_width';\nvar KEY_RENDERBUFFER_HEIGHT = KEY_RENDERBUFFER + '_height';\nvar KEY_RENDERBUFFER_ATTACHED = KEY_RENDERBUFFER + '_attached';\nvar KEY_DEPTHTEXTURE_ATTACHED = 'depthtexture_attached';\n\nvar GL_FRAMEBUFFER = glenum.FRAMEBUFFER;\nvar GL_RENDERBUFFER = glenum.RENDERBUFFER;\nvar GL_DEPTH_ATTACHMENT = glenum.DEPTH_ATTACHMENT;\nvar GL_COLOR_ATTACHMENT0 = glenum.COLOR_ATTACHMENT0;\n/**\n * @constructor clay.FrameBuffer\n * @extends clay.core.Base\n */\nvar FrameBuffer = Base.extend(\n/** @lends clay.FrameBuffer# */\n{\n    /**\n     * If use depth buffer\n     * @type {boolean}\n     */\n    depthBuffer: true,\n\n    /**\n     * @type {Object}\n     */\n    viewport: null,\n\n    _width: 0,\n    _height: 0,\n\n    _textures: null,\n\n    _boundRenderer: null,\n}, function () {\n    // Use cache\n    this._cache = new Cache();\n\n    this._textures = {};\n},\n\n/**@lends clay.FrameBuffer.prototype. */\n{\n    /**\n     * Get attached texture width\n     * {number}\n     */\n    // FIXME Can't use before #bind\n    getTextureWidth: function () {\n        return this._width;\n    },\n\n    /**\n     * Get attached texture height\n     * {number}\n     */\n    getTextureHeight: function () {\n        return this._height;\n    },\n\n    /**\n     * Bind the framebuffer to given renderer before rendering\n     * @param  {clay.Renderer} renderer\n     */\n    bind: function (renderer) {\n\n        if (renderer.__currentFrameBuffer) {\n            // Already bound\n            if (renderer.__currentFrameBuffer === this) {\n                return;\n            }\n\n            console.warn('Renderer already bound with another framebuffer. Unbind it first');\n        }\n        renderer.__currentFrameBuffer = this;\n\n        var _gl = renderer.gl;\n\n        _gl.bindFramebuffer(GL_FRAMEBUFFER, this._getFrameBufferGL(renderer));\n        this._boundRenderer = renderer;\n        var cache = this._cache;\n\n        cache.put('viewport', renderer.viewport);\n\n        var hasTextureAttached = false;\n        var width;\n        var height;\n        for (var attachment in this._textures) {\n            hasTextureAttached = true;\n            var obj = this._textures[attachment];\n            if (obj) {\n                // TODO Do width, height checking, make sure size are same\n                width = obj.texture.width;\n                height = obj.texture.height;\n                // Attach textures\n                this._doAttach(renderer, obj.texture, attachment, obj.target);\n            }\n        }\n\n        this._width = width;\n        this._height = height;\n\n        if (!hasTextureAttached && this.depthBuffer) {\n            console.error('Must attach texture before bind, or renderbuffer may have incorrect width and height.')\n        }\n\n        if (this.viewport) {\n            renderer.setViewport(this.viewport);\n        }\n        else {\n            renderer.setViewport(0, 0, width, height, 1);\n        }\n\n        var attachedTextures = cache.get('attached_textures');\n        if (attachedTextures) {\n            for (var attachment in attachedTextures) {\n                if (!this._textures[attachment]) {\n                    var target = attachedTextures[attachment];\n                    this._doDetach(_gl, attachment, target);\n                }\n            }\n        }\n        if (!cache.get(KEY_DEPTHTEXTURE_ATTACHED) && this.depthBuffer) {\n            // Create a new render buffer\n            if (cache.miss(KEY_RENDERBUFFER)) {\n                cache.put(KEY_RENDERBUFFER, _gl.createRenderbuffer());\n            }\n            var renderbuffer = cache.get(KEY_RENDERBUFFER);\n\n            if (width !== cache.get(KEY_RENDERBUFFER_WIDTH)\n                    || height !== cache.get(KEY_RENDERBUFFER_HEIGHT)) {\n                _gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer);\n                _gl.renderbufferStorage(GL_RENDERBUFFER, _gl.DEPTH_COMPONENT16, width, height);\n                cache.put(KEY_RENDERBUFFER_WIDTH, width);\n                cache.put(KEY_RENDERBUFFER_HEIGHT, height);\n                _gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n            }\n            if (!cache.get(KEY_RENDERBUFFER_ATTACHED)) {\n                _gl.framebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_RENDERBUFFER, renderbuffer);\n                cache.put(KEY_RENDERBUFFER_ATTACHED, true);\n            }\n        }\n    },\n\n    /**\n     * Unbind the frame buffer after rendering\n     * @param  {clay.Renderer} renderer\n     */\n    unbind: function (renderer) {\n        // Remove status record on renderer\n        renderer.__currentFrameBuffer = null;\n\n        var _gl = renderer.gl;\n\n        _gl.bindFramebuffer(GL_FRAMEBUFFER, null);\n        this._boundRenderer = null;\n\n        this._cache.use(renderer.__uid__);\n        var viewport = this._cache.get('viewport');\n        // Reset viewport;\n        if (viewport) {\n            renderer.setViewport(viewport);\n        }\n\n        this.updateMipmap(renderer);\n    },\n\n    // Because the data of texture is changed over time,\n    // Here update the mipmaps of texture each time after rendered;\n    updateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        for (var attachment in this._textures) {\n            var obj = this._textures[attachment];\n            if (obj) {\n                var texture = obj.texture;\n                // FIXME some texture format can't generate mipmap\n                if (!texture.NPOT && texture.useMipmap\n                    && texture.minFilter === Texture.LINEAR_MIPMAP_LINEAR) {\n                    var target = texture.textureType === 'textureCube' ? glenum.TEXTURE_CUBE_MAP : glenum.TEXTURE_2D;\n                    _gl.bindTexture(target, texture.getWebGLTexture(renderer));\n                    _gl.generateMipmap(target);\n                    _gl.bindTexture(target, null);\n                }\n            }\n        }\n    },\n\n\n    // 0x8CD5, 36053, FRAMEBUFFER_COMPLETE\n    // 0x8CD6, 36054, FRAMEBUFFER_INCOMPLETE_ATTACHMENT\n    // 0x8CD7, 36055, FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n    // 0x8CD9, 36057, FRAMEBUFFER_INCOMPLETE_DIMENSIONS\n    // 0x8CDD, 36061, FRAMEBUFFER_UNSUPPORTED\n    checkStatus: function (_gl) {\n        return _gl.checkFramebufferStatus(GL_FRAMEBUFFER);\n    },\n\n    _getFrameBufferGL: function (renderer) {\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n\n        if (cache.miss(KEY_FRAMEBUFFER)) {\n            cache.put(KEY_FRAMEBUFFER, renderer.gl.createFramebuffer());\n        }\n\n        return cache.get(KEY_FRAMEBUFFER);\n    },\n\n    /**\n     * Attach a texture(RTT) to the framebuffer\n     * @param  {clay.Texture} texture\n     * @param  {number} [attachment=gl.COLOR_ATTACHMENT0]\n     * @param  {number} [target=gl.TEXTURE_2D]\n     */\n    attach: function (texture, attachment, target) {\n\n        if (!texture.width) {\n            throw new Error('The texture attached to color buffer is not a valid.');\n        }\n        // TODO width and height check\n\n        // If the depth_texture extension is enabled, developers\n        // Can attach a depth texture to the depth buffer\n        // http://blog.tojicode.com/2012/07/using-webgldepthtexture.html\n        attachment = attachment || GL_COLOR_ATTACHMENT0;\n        target = target || glenum.TEXTURE_2D;\n\n        var boundRenderer = this._boundRenderer;\n        var _gl = boundRenderer && boundRenderer.gl;\n        var attachedTextures;\n\n        if (_gl) {\n            var cache = this._cache;\n            cache.use(boundRenderer.__uid__);\n            attachedTextures = cache.get('attached_textures');\n        }\n\n        // Check if texture attached\n        var previous = this._textures[attachment];\n        if (previous && previous.target === target\n            && previous.texture === texture\n            && (attachedTextures && attachedTextures[attachment] != null)\n        ) {\n            return;\n        }\n\n        var canAttach = true;\n        if (boundRenderer) {\n            canAttach = this._doAttach(boundRenderer, texture, attachment, target);\n            // Set viewport again incase attached to different size textures.\n            if (!this.viewport) {\n                boundRenderer.setViewport(0, 0, texture.width, texture.height, 1);\n            }\n        }\n\n        if (canAttach) {\n            this._textures[attachment] = this._textures[attachment] || {};\n            this._textures[attachment].texture = texture;\n            this._textures[attachment].target = target;\n        }\n    },\n\n    _doAttach: function (renderer, texture, attachment, target) {\n        var _gl = renderer.gl;\n        // Make sure texture is always updated\n        // Because texture width or height may be changed and in this we can't be notified\n        // FIXME awkward;\n        var webglTexture = texture.getWebGLTexture(renderer);\n        // Assume cache has been used.\n        var attachedTextures = this._cache.get('attached_textures');\n        if (attachedTextures && attachedTextures[attachment]) {\n            var obj = attachedTextures[attachment];\n            // Check if texture and target not changed\n            if (obj.texture === texture && obj.target === target) {\n                return;\n            }\n        }\n        attachment = +attachment;\n\n        var canAttach = true;\n        if (attachment === GL_DEPTH_ATTACHMENT || attachment === glenum.DEPTH_STENCIL_ATTACHMENT) {\n            var extension = renderer.getGLExtension('WEBGL_depth_texture');\n\n            if (!extension) {\n                console.error('Depth texture is not supported by the browser');\n                canAttach = false;\n            }\n            if (texture.format !== glenum.DEPTH_COMPONENT\n                && texture.format !== glenum.DEPTH_STENCIL\n            ) {\n                console.error('The texture attached to depth buffer is not a valid.');\n                canAttach = false;\n            }\n\n            // Dispose render buffer created previous\n            if (canAttach) {\n                var renderbuffer = this._cache.get(KEY_RENDERBUFFER);\n                if (renderbuffer) {\n                    _gl.framebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_RENDERBUFFER, null);\n                    _gl.deleteRenderbuffer(renderbuffer);\n                    this._cache.put(KEY_RENDERBUFFER, false);\n                }\n\n                this._cache.put(KEY_RENDERBUFFER_ATTACHED, false);\n                this._cache.put(KEY_DEPTHTEXTURE_ATTACHED, true);\n            }\n        }\n\n        // Mipmap level can only be 0\n        _gl.framebufferTexture2D(GL_FRAMEBUFFER, attachment, target, webglTexture, 0);\n\n        if (!attachedTextures) {\n            attachedTextures = {};\n            this._cache.put('attached_textures', attachedTextures);\n        }\n        attachedTextures[attachment] = attachedTextures[attachment] || {};\n        attachedTextures[attachment].texture = texture;\n        attachedTextures[attachment].target = target;\n\n        return canAttach;\n    },\n\n    _doDetach: function (_gl, attachment, target) {\n        // Detach a texture from framebuffer\n        // https://github.com/KhronosGroup/WebGL/blob/master/conformance-suites/1.0.0/conformance/framebuffer-test.html#L145\n        _gl.framebufferTexture2D(GL_FRAMEBUFFER, attachment, target, null, 0);\n\n        // Assume cache has been used.\n        var attachedTextures = this._cache.get('attached_textures');\n        if (attachedTextures && attachedTextures[attachment]) {\n            attachedTextures[attachment] = null;\n        }\n\n        if (attachment === GL_DEPTH_ATTACHMENT || attachment === glenum.DEPTH_STENCIL_ATTACHMENT) {\n            this._cache.put(KEY_DEPTHTEXTURE_ATTACHED, false);\n        }\n    },\n\n    /**\n     * Detach a texture\n     * @param  {number} [attachment=gl.COLOR_ATTACHMENT0]\n     * @param  {number} [target=gl.TEXTURE_2D]\n     */\n    detach: function (attachment, target) {\n        // TODO depth extension check ?\n        this._textures[attachment] = null;\n        if (this._boundRenderer) {\n            var cache = this._cache;\n            cache.use(this._boundRenderer.__uid__);\n            this._doDetach(this._boundRenderer.gl, attachment, target);\n        }\n    },\n    /**\n     * Dispose\n     * @param  {WebGLRenderingContext} _gl\n     */\n    dispose: function (renderer) {\n\n        var _gl = renderer.gl;\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n\n        var renderBuffer = cache.get(KEY_RENDERBUFFER);\n        if (renderBuffer) {\n            _gl.deleteRenderbuffer(renderBuffer);\n        }\n        var frameBuffer = cache.get(KEY_FRAMEBUFFER);\n        if (frameBuffer) {\n            _gl.deleteFramebuffer(frameBuffer);\n        }\n        cache.deleteContext(renderer.__uid__);\n\n        // Clear cache for reusing\n        this._textures = {};\n\n    }\n});\n\nFrameBuffer.DEPTH_ATTACHMENT = GL_DEPTH_ATTACHMENT;\nFrameBuffer.COLOR_ATTACHMENT0 = GL_COLOR_ATTACHMENT0;\nFrameBuffer.STENCIL_ATTACHMENT = glenum.STENCIL_ATTACHMENT;\nFrameBuffer.DEPTH_STENCIL_ATTACHMENT = glenum.DEPTH_STENCIL_ATTACHMENT;\n\nexport default FrameBuffer;\n","import Skybox from './Skybox';\n\nexport default Skybox;","// TODO Should not derived from mesh?\nimport Mesh from '../Mesh';\nimport CubeGeometry from '../geometry/Cube';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport Texture from '../Texture';\nimport PerspectiveCamera from '../camera/Perspective';\nimport Matrix4 from '../math/Matrix4';\n\nimport skyboxEssl from '../shader/source/skybox.glsl.js';\nShader.import(skyboxEssl);\n/**\n * @constructor clay.plugin.Skybox\n *\n * @example\n *     var skyTex = new clay.TextureCube();\n *     skyTex.load({\n *         'px': 'assets/textures/sky/px.jpg',\n *         'nx': 'assets/textures/sky/nx.jpg'\n *         'py': 'assets/textures/sky/py.jpg'\n *         'ny': 'assets/textures/sky/ny.jpg'\n *         'pz': 'assets/textures/sky/pz.jpg'\n *         'nz': 'assets/textures/sky/nz.jpg'\n *     });\n *     var skybox = new clay.plugin.Skybox({\n *         scene: scene\n *     });\n *     skybox.material.set('environmentMap', skyTex);\n */\nvar Skybox = Mesh.extend(function () {\n\n    var skyboxShader = new Shader({\n        vertex: Shader.source('clay.skybox.vertex'),\n        fragment: Shader.source('clay.skybox.fragment')\n    });\n    var material = new Material({\n        shader: skyboxShader,\n        depthMask: false\n    });\n\n    return {\n        /**\n         * @type {clay.Scene}\n         * @memberOf clay.plugin.Skybox.prototype\n         */\n        scene: null,\n\n        geometry: new CubeGeometry(),\n\n        material: material,\n\n        environmentMap: null,\n\n        culling: false,\n\n        _dummyCamera: new PerspectiveCamera()\n    };\n}, function () {\n    var scene = this.scene;\n    if (scene) {\n        this.attachScene(scene);\n    }\n    if (this.environmentMap) {\n        this.setEnvironmentMap(this.environmentMap);\n    }\n}, /** @lends clay.plugin.Skybox# */ {\n    /**\n     * Attach the skybox to the scene\n     * @param  {clay.Scene} scene\n     */\n    attachScene: function (scene) {\n        if (this.scene) {\n            this.detachScene();\n        }\n        scene.skybox = this;\n\n        this.scene = scene;\n        scene.on('beforerender', this._beforeRenderScene, this);\n    },\n    /**\n     * Detach from scene\n     */\n    detachScene: function () {\n        if (this.scene) {\n            this.scene.off('beforerender', this._beforeRenderScene);\n            this.scene.skybox = null;\n        }\n        this.scene = null;\n    },\n\n    /**\n     * Dispose skybox\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this.detachScene();\n        this.geometry.dispose(renderer);\n    },\n    /**\n     * Set environment map\n     * @param {clay.TextureCube} envMap\n     */\n    setEnvironmentMap: function (envMap) {\n        if (envMap.textureType === 'texture2D') {\n            this.material.define('EQUIRECTANGULAR');\n            // LINEAR filter can remove the artifacts in pole\n            envMap.minFilter = Texture.LINEAR;\n        }\n        else {\n            this.material.undefine('EQUIRECTANGULAR');\n        }\n        this.material.set('environmentMap', envMap);\n    },\n    /**\n     * Get environment map\n     * @return {clay.TextureCube}\n     */\n    getEnvironmentMap: function () {\n        return this.material.get('environmentMap');\n    },\n\n    _beforeRenderScene: function(renderer, scene, camera) {\n        this.renderSkybox(renderer, camera);\n    },\n\n    renderSkybox: function (renderer, camera) {\n        var dummyCamera = this._dummyCamera;\n        dummyCamera.aspect = renderer.getViewportAspect();\n        dummyCamera.fov = camera.fov || 50;\n        dummyCamera.updateProjectionMatrix();\n        Matrix4.invert(dummyCamera.invProjectionMatrix, dummyCamera.projectionMatrix);\n        dummyCamera.worldTransform.copy(camera.worldTransform);\n        dummyCamera.viewMatrix.copy(camera.viewMatrix);\n\n        this.position.copy(camera.getWorldPosition());\n        this.update();\n\n        // Don't remember to disable blend\n        renderer.gl.disable(renderer.gl.BLEND);\n        if (this.material.get('lod') > 0) {\n            this.material.define('fragment', 'LOD');\n        }\n        else {\n            this.material.undefine('fragment', 'LOD');\n        }\n        renderer.renderPass([this], dummyCamera);\n    }\n});\n\nexport default Skybox;\n","import Geometry from '../Geometry';\nimport Plane from './Plane';\nimport Matrix4 from '../math/Matrix4';\nimport Vector3 from '../math/Vector3';\nimport BoundingBox from '../math/BoundingBox';\nimport vendor from '../core/vendor';\n\nvar planeMatrix = new Matrix4();\n\n/**\n * @constructor clay.geometry.Cube\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n * @param {number} [opt.depthSegments]\n * @param {boolean} [opt.inside]\n */\nvar Cube = Geometry.extend(\n/**@lends clay.geometry.Cube# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1,\n    /**\n     * @type {number}\n     */\n    depthSegments: 1,\n    /**\n     * @type {boolean}\n     */\n    inside: false\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Cube.prototype */\n{\n    /**\n     * Build cube geometry\n     */\n    build: function() {\n\n        var planes = {\n            'px': createPlane('px', this.depthSegments, this.heightSegments),\n            'nx': createPlane('nx', this.depthSegments, this.heightSegments),\n            'py': createPlane('py', this.widthSegments, this.depthSegments),\n            'ny': createPlane('ny', this.widthSegments, this.depthSegments),\n            'pz': createPlane('pz', this.widthSegments, this.heightSegments),\n            'nz': createPlane('nz', this.widthSegments, this.heightSegments),\n        };\n\n        var attrList = ['position', 'texcoord0', 'normal'];\n        var vertexNumber = 0;\n        var faceNumber = 0;\n        for (var pos in planes) {\n            vertexNumber += planes[pos].vertexCount;\n            faceNumber += planes[pos].indices.length;\n        }\n        for (var k = 0; k < attrList.length; k++) {\n            this.attributes[attrList[k]].init(vertexNumber);\n        }\n        this.indices = new vendor.Uint16Array(faceNumber);\n        var faceOffset = 0;\n        var vertexOffset = 0;\n        for (var pos in planes) {\n            var plane = planes[pos];\n            for (var k = 0; k < attrList.length; k++) {\n                var attrName = attrList[k];\n                var attrArray = plane.attributes[attrName].value;\n                var attrSize = plane.attributes[attrName].size;\n                var isNormal = attrName === 'normal';\n                for (var i = 0; i < attrArray.length; i++) {\n                    var value = attrArray[i];\n                    if (this.inside && isNormal) {\n                        value = -value;\n                    }\n                    this.attributes[attrName].value[i + attrSize * vertexOffset] = value;\n                }\n            }\n            var len = plane.indices.length;\n            for (var i = 0; i < plane.indices.length; i++) {\n                this.indices[i + faceOffset] = vertexOffset + plane.indices[this.inside ? (len - i - 1) : i];\n            }\n            faceOffset += plane.indices.length;\n            vertexOffset += plane.vertexCount;\n        }\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.max.set(1, 1, 1);\n        this.boundingBox.min.set(-1, -1, -1);\n    }\n});\n\nfunction createPlane(pos, widthSegments, heightSegments) {\n\n    planeMatrix.identity();\n\n    var plane = new Plane({\n        widthSegments: widthSegments,\n        heightSegments: heightSegments\n    });\n\n    switch(pos) {\n        case 'px':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'nx':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'py':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'ny':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'pz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Z);\n            break;\n        case 'nz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Z);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI);\n            break;\n    }\n    plane.applyTransform(planeMatrix);\n    return plane;\n}\n\nexport default Cube;\n","import Geometry from '../Geometry';\nimport BoundingBox from '../math/BoundingBox';\n\n/**\n * @constructor clay.geometry.Plane\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n */\nvar Plane = Geometry.extend(\n/** @lends clay.geometry.Plane# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Plane.prototype */\n{\n    /**\n     * Build plane geometry\n     */\n    build: function() {\n        var heightSegments = this.heightSegments;\n        var widthSegments = this.widthSegments;\n        var attributes = this.attributes;\n        var positions = [];\n        var texcoords = [];\n        var normals = [];\n        var faces = [];\n\n        for (var y = 0; y <= heightSegments; y++) {\n            var t = y / heightSegments;\n            for (var x = 0; x <= widthSegments; x++) {\n                var s = x / widthSegments;\n\n                positions.push([2 * s - 1, 2 * t - 1, 0]);\n                if (texcoords) {\n                    texcoords.push([s, t]);\n                }\n                if (normals) {\n                    normals.push([0, 0, 1]);\n                }\n                if (x < widthSegments && y < heightSegments) {\n                    var i = x + y * (widthSegments + 1);\n                    faces.push([i, i + 1, i + widthSegments + 1]);\n                    faces.push([i + widthSegments + 1, i + 1, i + widthSegments + 2]);\n                }\n            }\n        }\n\n        attributes.position.fromArray(positions);\n        attributes.texcoord0.fromArray(texcoords);\n        attributes.normal.fromArray(normals);\n\n        this.initIndicesFromArray(faces);\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.min.set(-1, -1, 0);\n        this.boundingBox.max.set(1, 1, 0);\n    }\n});\n\nexport default Plane;\n","export default \"@export clay.skybox.vertex\\n#define SHADER_NAME skybox\\nuniform mat4 world : WORLD;\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nattribute vec3 position : POSITION;\\nvarying vec3 v_WorldPosition;\\nvoid main()\\n{\\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n}\\n@end\\n@export clay.skybox.fragment\\n#define PI 3.1415926\\nuniform mat4 viewInverse : VIEWINVERSE;\\n#ifdef EQUIRECTANGULAR\\nuniform sampler2D environmentMap;\\n#else\\nuniform samplerCube environmentMap;\\n#endif\\nuniform float lod: 0.0;\\nvarying vec3 v_WorldPosition;\\n@import clay.util.rgbm\\n@import clay.util.srgb\\n@import clay.util.ACES\\nvoid main()\\n{\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(v_WorldPosition - eyePos);\\n#ifdef EQUIRECTANGULAR\\n float phi = acos(V.y);\\n float theta = atan(-V.x, V.z) + PI * 0.5;\\n vec2 uv = vec2(theta / 2.0 / PI, phi / PI);\\n vec4 texel = decodeHDR(texture2D(environmentMap, fract(uv)));\\n#else\\n #if defined(LOD) || defined(SUPPORT_TEXTURE_LOD)\\n vec4 texel = decodeHDR(textureCubeLodEXT(environmentMap, V, lod));\\n #else\\n vec4 texel = decodeHDR(textureCube(environmentMap, V));\\n #endif\\n#endif\\n#ifdef SRGB_DECODE\\n texel = sRGBToLinear(texel);\\n#endif\\n#ifdef TONEMAPPING\\n texel.rgb = ACESToneMapping(texel.rgb);\\n#endif\\n#ifdef SRGB_ENCODE\\n texel = linearTosRGB(texel);\\n#endif\\n gl_FragColor = encodeHDR(vec4(texel.rgb, 1.0));\\n}\\n@end\";\n","import Texture from '../Texture';\nimport Texture2D from '../Texture2D';\nimport TextureCube from '../TextureCube';\n\n// http://msdn.microsoft.com/en-us/library/windows/desktop/bb943991(v=vs.85).aspx\n// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\nvar DDS_MAGIC = 0x20534444;\n\nvar DDSD_CAPS = 0x1;\nvar DDSD_HEIGHT = 0x2;\nvar DDSD_WIDTH = 0x4;\nvar DDSD_PITCH = 0x8;\nvar DDSD_PIXELFORMAT = 0x1000;\nvar DDSD_MIPMAPCOUNT = 0x20000;\nvar DDSD_LINEARSIZE = 0x80000;\nvar DDSD_DEPTH = 0x800000;\n\nvar DDSCAPS_COMPLEX = 0x8;\nvar DDSCAPS_MIPMAP = 0x400000;\nvar DDSCAPS_TEXTURE = 0x1000;\n\nvar DDSCAPS2_CUBEMAP = 0x200;\nvar DDSCAPS2_CUBEMAP_POSITIVEX = 0x400;\nvar DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800;\nvar DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000;\nvar DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000;\nvar DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000;\nvar DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000;\nvar DDSCAPS2_VOLUME = 0x200000;\n\nvar DDPF_ALPHAPIXELS = 0x1;\nvar DDPF_ALPHA = 0x2;\nvar DDPF_FOURCC = 0x4;\nvar DDPF_RGB = 0x40;\nvar DDPF_YUV = 0x200;\nvar DDPF_LUMINANCE = 0x20000;\n\nfunction fourCCToInt32(value) {\n    return value.charCodeAt(0) +\n        (value.charCodeAt(1) << 8) +\n        (value.charCodeAt(2) << 16) +\n        (value.charCodeAt(3) << 24);\n}\n\nfunction int32ToFourCC(value) {\n    return String.fromCharCode(\n        value & 0xff,\n        (value >> 8) & 0xff,\n        (value >> 16) & 0xff,\n        (value >> 24) & 0xff\n    );\n}\n\nvar headerLengthInt = 31; // The header length in 32 bit ints\n\nvar FOURCC_DXT1 = fourCCToInt32('DXT1');\nvar FOURCC_DXT3 = fourCCToInt32('DXT3');\nvar FOURCC_DXT5 = fourCCToInt32('DXT5');\n// Offsets into the header array\nvar off_magic = 0;\n\nvar off_size = 1;\nvar off_flags = 2;\nvar off_height = 3;\nvar off_width = 4;\n\nvar off_mipmapCount = 7;\n\nvar off_pfFlags = 20;\nvar off_pfFourCC = 21;\n\nvar off_caps = 27;\nvar off_caps2 = 28;\nvar off_caps3 = 29;\nvar off_caps4 = 30;\n\nvar ret = {\n    parse: function(arrayBuffer, out) {\n        var header = new Int32Array(arrayBuffer, 0, headerLengthInt);\n        if (header[off_magic] !== DDS_MAGIC) {\n            return null;\n        }\n        if (!header(off_pfFlags) & DDPF_FOURCC) {\n            return null;\n        }\n\n        var fourCC = header(off_pfFourCC);\n        var width = header[off_width];\n        var height = header[off_height];\n        var isCubeMap = header[off_caps2] & DDSCAPS2_CUBEMAP;\n        var hasMipmap = header[off_flags] & DDSD_MIPMAPCOUNT;\n        var blockBytes, internalFormat;\n        switch(fourCC) {\n            case FOURCC_DXT1:\n                blockBytes = 8;\n                internalFormat = Texture.COMPRESSED_RGB_S3TC_DXT1_EXT;\n                break;\n            case FOURCC_DXT3:\n                blockBytes = 16;\n                internalFormat = Texture.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                break;\n            case FOURCC_DXT5:\n                blockBytes = 16;\n                internalFormat = Texture.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                break;\n            default:\n                return null;\n        }\n        var dataOffset = header[off_size] + 4;\n        // TODO: Suppose all face are existed\n        var faceNumber = isCubeMap ? 6 : 1;\n        var mipmapCount = 1;\n        if (hasMipmap) {\n            mipmapCount = Math.max(1, header[off_mipmapCount]);\n        }\n\n        var textures = [];\n        for (var f = 0; f < faceNumber; f++) {\n            var _width = width;\n            var _height = height;\n            textures[f] = new Texture2D({\n                width: _width,\n                height: _height,\n                format: internalFormat\n            });\n            var mipmaps = [];\n            for (var i = 0; i < mipmapCount; i++) {\n                var dataLength = Math.max(4, _width) / 4 * Math.max(4, _height) / 4 * blockBytes;\n                var byteArray = new Uint8Array(arrayBuffer, dataOffset, dataLength);\n\n                dataOffset += dataLength;\n                _width *= 0.5;\n                _height *= 0.5;\n                mipmaps[i] = byteArray;\n            }\n            textures[f].pixels = mipmaps[0];\n            if (hasMipmap) {\n                textures[f].mipmaps = mipmaps;\n            }\n        }\n        // TODO\n        // return isCubeMap ? textures : textures[0];\n        if (out) {\n            out.width = textures[0].width;\n            out.height = textures[0].height;\n            out.format = textures[0].format;\n            out.pixels = textures[0].pixels;\n            out.mipmaps = textures[0].mipmaps;\n        }\n        else {\n            return textures[0];\n        }\n    }\n};\n\nexport default ret;\n","import Texture from '../Texture';\nimport Texture2D from '../Texture2D';\nvar toChar = String.fromCharCode;\n\nvar MINELEN = 8;\nvar MAXELEN = 0x7fff;\nfunction rgbe2float(rgbe, buffer, offset, exposure) {\n    if (rgbe[3] > 0) {\n        var f = Math.pow(2.0, rgbe[3] - 128 - 8 + exposure);\n        buffer[offset + 0] = rgbe[0] * f;\n        buffer[offset + 1] = rgbe[1] * f;\n        buffer[offset + 2] = rgbe[2] * f;\n    }\n    else {\n        buffer[offset + 0] = 0;\n        buffer[offset + 1] = 0;\n        buffer[offset + 2] = 0;\n    }\n    buffer[offset + 3] = 1.0;\n    return buffer;\n}\n\nfunction uint82string(array, offset, size) {\n    var str = '';\n    for (var i = offset; i < size; i++) {\n        str += toChar(array[i]);\n    }\n    return str;\n}\n\nfunction copyrgbe(s, t) {\n    t[0] = s[0];\n    t[1] = s[1];\n    t[2] = s[2];\n    t[3] = s[3];\n}\n\n// TODO : check\nfunction oldReadColors(scan, buffer, offset, xmax) {\n    var rshift = 0, x = 0, len = xmax;\n    while (len > 0) {\n        scan[x][0] = buffer[offset++];\n        scan[x][1] = buffer[offset++];\n        scan[x][2] = buffer[offset++];\n        scan[x][3] = buffer[offset++];\n        if (scan[x][0] === 1 && scan[x][1] === 1 && scan[x][2] === 1) {\n            // exp is count of repeated pixels\n            for (var i = (scan[x][3] << rshift) >>> 0; i > 0; i--) {\n                copyrgbe(scan[x-1], scan[x]);\n                x++;\n                len--;\n            }\n            rshift += 8;\n        } else {\n            x++;\n            len--;\n            rshift = 0;\n        }\n    }\n    return offset;\n}\n\nfunction readColors(scan, buffer, offset, xmax) {\n    if ((xmax < MINELEN) | (xmax > MAXELEN)) {\n        return oldReadColors(scan, buffer, offset, xmax);\n    }\n    var i = buffer[offset++];\n    if (i != 2) {\n        return oldReadColors(scan, buffer, offset - 1, xmax);\n    }\n    scan[0][1] = buffer[offset++];\n    scan[0][2] = buffer[offset++];\n\n    i = buffer[offset++];\n    if ((((scan[0][2] << 8) >>> 0) | i) >>> 0 !== xmax) {\n        return null;\n    }\n    for (var i = 0; i < 4; i++) {\n        for (var x = 0; x < xmax;) {\n            var code = buffer[offset++];\n            if (code > 128) {\n                code = (code & 127) >>> 0;\n                var val = buffer[offset++];\n                while (code--) {\n                    scan[x++][i] = val;\n                }\n            } else {\n                while (code--) {\n                    scan[x++][i] = buffer[offset++];\n                }\n            }\n        }\n    }\n    return offset;\n}\n\n\nvar ret = {\n    // http://www.graphics.cornell.edu/~bjw/rgbe.html\n    // Blender source\n    // http://radsite.lbl.gov/radiance/refer/Notes/picture_format.html\n    parseRGBE: function(arrayBuffer, texture, exposure) {\n        if (exposure == null) {\n            exposure = 0;\n        }\n        var data = new Uint8Array(arrayBuffer);\n        var size = data.length;\n        if (uint82string(data, 0, 2) !== '#?') {\n            return;\n        }\n        // find empty line, next line is resolution info\n        for (var i = 2; i < size; i++) {\n            if (toChar(data[i]) === '\\n' && toChar(data[i+1]) === '\\n') {\n                break;\n            }\n        }\n        if (i >= size) { // not found\n            return;\n        }\n        // find resolution info line\n        i += 2;\n        var str = '';\n        for (; i < size; i++) {\n            var _char = toChar(data[i]);\n            if (_char === '\\n') {\n                break;\n            }\n            str += _char;\n        }\n        // -Y M +X N\n        var tmp = str.split(' ');\n        var height = parseInt(tmp[1]);\n        var width = parseInt(tmp[3]);\n        if (!width || !height) {\n            return;\n        }\n\n        // read and decode actual data\n        var offset = i+1;\n        var scanline = [];\n        // memzero\n        for (var x = 0; x < width; x++) {\n            scanline[x] = [];\n            for (var j = 0; j < 4; j++) {\n                scanline[x][j] = 0;\n            }\n        }\n        var pixels = new Float32Array(width * height * 4);\n        var offset2 = 0;\n        for (var y = 0; y < height; y++) {\n            var offset = readColors(scanline, data, offset, width);\n            if (!offset) {\n                return null;\n            }\n            for (var x = 0; x < width; x++) {\n                rgbe2float(scanline[x], pixels, offset2, exposure);\n                offset2 += 4;\n            }\n        }\n\n        if (!texture) {\n            texture = new Texture2D();\n        }\n        texture.width = width;\n        texture.height = height;\n        texture.pixels = pixels;\n        // HALF_FLOAT can't use Float32Array\n        texture.type = Texture.FLOAT;\n        return texture;\n    },\n\n    parseRGBEFromPNG: function(png) {\n\n    }\n};\n\nexport default ret;\n","/**\n * Surface texture in the 3D scene.\n * Provide management and rendering of zrender shapes and groups\n *\n * @module echarts-gl/util/EChartsSurface\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Texture2D from 'claygl/src/Texture2D';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nvar events = ['mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'click', 'dblclick', 'contextmenu'];\n\nfunction makeHandlerName(eventName) {\n  return '_on' + eventName;\n}\n/**\n * @constructor\n * @alias echarts-gl/util/EChartsSurface\n * @param {module:echarts~ECharts} chart\n */\n\n\nvar EChartsSurface = function (chart) {\n  var self = this;\n  this._texture = new Texture2D({\n    anisotropic: 32,\n    flipY: false,\n    surface: this,\n    dispose: function (renderer) {\n      self.dispose();\n      Texture2D.prototype.dispose.call(this, renderer);\n    }\n  });\n  events.forEach(function (eventName) {\n    this[makeHandlerName(eventName)] = function (eveObj) {\n      if (!eveObj.triangle) {\n        return;\n      }\n\n      this._meshes.forEach(function (mesh) {\n        this.dispatchEvent(eventName, mesh, eveObj.triangle, eveObj.point);\n      }, this);\n    };\n  }, this);\n  this._meshes = [];\n\n  if (chart) {\n    this.setECharts(chart);\n  } // Texture updated callback;\n\n\n  this.onupdate = null;\n};\n\nEChartsSurface.prototype = {\n  constructor: EChartsSurface,\n  getTexture: function () {\n    return this._texture;\n  },\n  setECharts: function (chart) {\n    this._chart = chart;\n    var canvas = chart.getDom();\n\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      console.error('ECharts must init on canvas if it is used as texture.'); // Use an empty canvas\n\n      canvas = document.createElement('canvas');\n    } else {\n      var self = this; // Wrap refreshImmediately\n\n      var zr = chart.getZr();\n      var oldRefreshImmediately = zr.__oldRefreshImmediately || zr.refreshImmediately;\n\n      zr.refreshImmediately = function () {\n        oldRefreshImmediately.call(this);\n\n        self._texture.dirty();\n\n        self.onupdate && self.onupdate();\n      };\n\n      zr.__oldRefreshImmediately = oldRefreshImmediately;\n    }\n\n    this._texture.image = canvas;\n\n    this._texture.dirty();\n\n    this.onupdate && this.onupdate();\n  },\n\n  /**\n   * @method\n   * @param {clay.Mesh} attachedMesh\n   * @param {Array.<number>} triangle Triangle indices\n   * @param {clay.math.Vector3} point\n   */\n  dispatchEvent: function () {\n    var p0 = new Vector3();\n    var p1 = new Vector3();\n    var p2 = new Vector3();\n    var uv0 = new Vector2();\n    var uv1 = new Vector2();\n    var uv2 = new Vector2();\n    var uv = new Vector2();\n    var vCross = new Vector3();\n    return function (eventName, attachedMesh, triangle, point) {\n      var geo = attachedMesh.geometry;\n      var position = geo.attributes.position;\n      var texcoord = geo.attributes.texcoord0;\n      var dot = Vector3.dot;\n      var cross = Vector3.cross;\n      position.get(triangle[0], p0.array);\n      position.get(triangle[1], p1.array);\n      position.get(triangle[2], p2.array);\n      texcoord.get(triangle[0], uv0.array);\n      texcoord.get(triangle[1], uv1.array);\n      texcoord.get(triangle[2], uv2.array);\n      cross(vCross, p1, p2);\n      var det = dot(p0, vCross);\n      var t = dot(point, vCross) / det;\n      cross(vCross, p2, p0);\n      var u = dot(point, vCross) / det;\n      cross(vCross, p0, p1);\n      var v = dot(point, vCross) / det;\n      Vector2.scale(uv, uv0, t);\n      Vector2.scaleAndAdd(uv, uv, uv1, u);\n      Vector2.scaleAndAdd(uv, uv, uv2, v);\n\n      var x = uv.x * this._chart.getWidth();\n\n      var y = uv.y * this._chart.getHeight();\n\n      this._chart.getZr().handler.dispatch(eventName, {\n        zrX: x,\n        zrY: y\n      });\n    };\n  }(),\n  attachToMesh: function (mesh) {\n    if (this._meshes.indexOf(mesh) >= 0) {\n      return;\n    }\n\n    events.forEach(function (eventName) {\n      mesh.on(eventName, this[makeHandlerName(eventName)], this);\n    }, this);\n\n    this._meshes.push(mesh);\n  },\n  detachFromMesh: function (mesh) {\n    var idx = this._meshes.indexOf(mesh);\n\n    if (idx >= 0) {\n      this._meshes.splice(idx, 1);\n    }\n\n    events.forEach(function (eventName) {\n      mesh.off(eventName, this[makeHandlerName(eventName)]);\n    }, this);\n  },\n  dispose: function () {\n    this._meshes.forEach(function (mesh) {\n      this.detachFromMesh(mesh);\n    }, this);\n  }\n};\nexport default EChartsSurface;","// https://docs.unrealengine.com/latest/INT/Engine/Rendering/LightingAndShadows/AmbientCubemap/\nimport Light from '../Light';\nimport cubemapUtil from '../util/cubemap';\n\n/**\n * Ambient cubemap light provides specular parts of Image Based Lighting.\n * Which is a basic requirement for Physically Based Rendering\n * @constructor clay.light.AmbientCubemap\n * @extends clay.Light\n */\nvar AmbientCubemapLight = Light.extend({\n\n    /**\n     * @type {clay.TextureCube}\n     * @memberOf clay.light.AmbientCubemap#\n     */\n    cubemap: null,\n\n    // TODO\n    // range: 100,\n\n    castShadow: false,\n\n    _normalDistribution: null,\n    _brdfLookup: null\n\n}, /** @lends clay.light.AmbientCubemap# */ {\n\n    type: 'AMBIENT_CUBEMAP_LIGHT',\n\n    /**\n     * Do prefitering the cubemap\n     * @param {clay.Renderer} renderer\n     * @param {number} [size=32]\n     */\n    prefilter: function (renderer, size) {\n        if (!renderer.getGLExtension('EXT_shader_texture_lod')) {\n            console.warn('Device not support textureCubeLodEXT');\n            return;\n        }\n        if (!this._brdfLookup) {\n            this._normalDistribution = cubemapUtil.generateNormalDistribution();\n            this._brdfLookup = cubemapUtil.integrateBRDF(renderer, this._normalDistribution);\n        }\n        var cubemap = this.cubemap;\n        if (cubemap.__prefiltered) {\n            return;\n        }\n\n        var result = cubemapUtil.prefilterEnvironmentMap(\n            renderer, cubemap, {\n                encodeRGBM: true,\n                width: size,\n                height: size\n            }, this._normalDistribution, this._brdfLookup\n        );\n        this.cubemap = result.environmentMap;\n        this.cubemap.__prefiltered = true;\n\n        cubemap.dispose(renderer);\n    },\n\n    getBRDFLookup: function () {\n        return this._brdfLookup;\n    },\n\n    uniformTemplates: {\n        ambientCubemapLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0]*intensity, color[1]*intensity, color[2]*intensity];\n            }\n        },\n\n        ambientCubemapLightCubemap: {\n            type: 't',\n            value: function (instance) {\n                return instance.cubemap;\n            }\n        },\n\n        ambientCubemapLightBRDFLookup: {\n            type: 't',\n            value: function (instance) {\n                return instance._brdfLookup;\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.AmbientCubemap}\n     * @memberOf clay.light.AmbientCubemap.prototype\n     */\n});\n\nexport default AmbientCubemapLight;\n","// Cubemap prefilter utility\n// http://www.unrealengine.com/files/downloads/2013SiggraphPresentationsNotes.pdf\n// http://http.developer.nvidia.com/GPUGems3/gpugems3_ch20.html\nimport Texture2D from '../Texture2D';\nimport TextureCube from '../TextureCube';\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Pass from '../compositor/Pass';\nimport Material from '../Material';\nimport Shader from '../Shader';\nimport Skybox from '../plugin/Skybox';\nimport Scene from '../Scene';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport vendor from '../core/vendor';\nimport textureUtil from './texture';\n\nimport integrateBRDFShaderCode from './shader/integrateBRDF.glsl.js';\nimport prefilterFragCode from './shader/prefilter.glsl.js';\n\nvar cubemapUtil = {};\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// TODO Downsample\n/**\n * @name clay.util.cubemap.prefilterEnvironmentMap\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {number} [textureOpts.width=64]\n * @param  {number} [textureOpts.height=64]\n * @param  {number} [textureOpts.type]\n * @param  {boolean} [textureOpts.encodeRGBM=false]\n * @param  {boolean} [textureOpts.decodeRGBM=false]\n * @param  {clay.Texture2D} [normalDistribution]\n * @param  {clay.Texture2D} [brdfLookup]\n */\ncubemapUtil.prefilterEnvironmentMap = function (\n    renderer, envMap, textureOpts, normalDistribution, brdfLookup\n) {\n    // Not create other renderer, it is easy having issue of cross reference of resources like framebuffer\n    // PENDING preserveDrawingBuffer?\n    if (!brdfLookup || !normalDistribution) {\n        normalDistribution = cubemapUtil.generateNormalDistribution();\n        brdfLookup = cubemapUtil.integrateBRDF(renderer, normalDistribution);\n    }\n    textureOpts = textureOpts || {};\n\n    var width = textureOpts.width || 64;\n    var height = textureOpts.height || 64;\n\n    var textureType = textureOpts.type || envMap.type;\n\n    // Use same type with given envMap\n    var prefilteredCubeMap = new TextureCube({\n        width: width,\n        height: height,\n        type: textureType,\n        flipY: false,\n        mipmaps: []\n    });\n\n    if (!prefilteredCubeMap.isPowerOfTwo()) {\n        console.warn('Width and height must be power of two to enable mipmap.');\n    }\n\n    var size = Math.min(width, height);\n    var mipmapNum = Math.log(size) / Math.log(2) + 1;\n\n    var prefilterMaterial = new Material({\n        shader: new Shader({\n            vertex: Shader.source('clay.skybox.vertex'),\n            fragment: prefilterFragCode\n        })\n    });\n    prefilterMaterial.set('normalDistribution', normalDistribution);\n\n    textureOpts.encodeRGBM && prefilterMaterial.define('fragment', 'RGBM_ENCODE');\n    textureOpts.decodeRGBM && prefilterMaterial.define('fragment', 'RGBM_DECODE');\n\n    var dummyScene = new Scene();\n    var skyEnv;\n\n    if (envMap.textureType === 'texture2D') {\n        // Convert panorama to cubemap\n        var envCubemap = new TextureCube({\n            width: width,\n            height: height,\n            // FIXME FLOAT type will cause GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT error on iOS\n            type: textureType === Texture.FLOAT ?\n                Texture.HALF_FLOAT : textureType\n        });\n        textureUtil.panoramaToCubeMap(renderer, envMap, envCubemap, {\n            // PENDING encodeRGBM so it can be decoded as RGBM\n            encodeRGBM: textureOpts.decodeRGBM\n        });\n        envMap = envCubemap;\n    }\n    skyEnv = new Skybox({\n        scene: dummyScene,\n        material: prefilterMaterial\n    });\n    skyEnv.material.set('environmentMap', envMap);\n\n    var envMapPass = new EnvironmentMapPass({\n        texture: prefilteredCubeMap\n    });\n\n    // Force to be UNSIGNED_BYTE\n    if (textureOpts.encodeRGBM) {\n        textureType = prefilteredCubeMap.type = Texture.UNSIGNED_BYTE;\n    }\n\n    var renderTargetTmp = new Texture2D({\n        width: width,\n        height: height,\n        type: textureType\n    });\n    var frameBuffer = new FrameBuffer({\n        depthBuffer: false\n    });\n    var ArrayCtor = vendor[textureType === Texture.UNSIGNED_BYTE ? 'Uint8Array' : 'Float32Array'];\n    for (var i = 0; i < mipmapNum; i++) {\n        // console.time('prefilter');\n        prefilteredCubeMap.mipmaps[i] = {\n            pixels: {}\n        };\n        skyEnv.material.set('roughness', i / (mipmapNum - 1));\n\n        // Tweak fov\n        // http://the-witness.net/news/2012/02/seamless-cube-map-filtering/\n        var n = renderTargetTmp.width;\n        var fov = 2 * Math.atan(n / (n - 0.5)) / Math.PI * 180;\n\n        for (var j = 0; j < targets.length; j++) {\n            var pixels = new ArrayCtor(renderTargetTmp.width * renderTargetTmp.height * 4);\n            frameBuffer.attach(renderTargetTmp);\n            frameBuffer.bind(renderer);\n\n            var camera = envMapPass.getCamera(targets[j]);\n            camera.fov = fov;\n            renderer.render(dummyScene, camera);\n            renderer.gl.readPixels(\n                0, 0, renderTargetTmp.width, renderTargetTmp.height,\n                Texture.RGBA, textureType, pixels\n            );\n\n            // var canvas = document.createElement('canvas');\n            // var ctx = canvas.getContext('2d');\n            // canvas.width = renderTargetTmp.width;\n            // canvas.height = renderTargetTmp.height;\n            // var imageData = ctx.createImageData(renderTargetTmp.width, renderTargetTmp.height);\n            // for (var k = 0; k < pixels.length; k++) {\n            //     imageData.data[k] = pixels[k];\n            // }\n            // ctx.putImageData(imageData, 0, 0);\n            // document.body.appendChild(canvas);\n\n            frameBuffer.unbind(renderer);\n            prefilteredCubeMap.mipmaps[i].pixels[targets[j]] = pixels;\n        }\n\n        renderTargetTmp.width /= 2;\n        renderTargetTmp.height /= 2;\n        renderTargetTmp.dirty();\n        // console.timeEnd('prefilter');\n    }\n\n    frameBuffer.dispose(renderer);\n    renderTargetTmp.dispose(renderer);\n    skyEnv.dispose(renderer);\n    // Remove gpu resource allucated in renderer\n    normalDistribution.dispose(renderer);\n\n    // renderer.dispose();\n\n    return {\n        environmentMap: prefilteredCubeMap,\n        brdfLookup: brdfLookup,\n        normalDistribution: normalDistribution,\n        maxMipmapLevel: mipmapNum\n    };\n};\n\ncubemapUtil.integrateBRDF = function (renderer, normalDistribution) {\n    normalDistribution = normalDistribution || cubemapUtil.generateNormalDistribution();\n    var framebuffer = new FrameBuffer({\n        depthBuffer: false\n    });\n    var pass = new Pass({\n        fragment: integrateBRDFShaderCode\n    });\n\n    var texture = new Texture2D({\n        width: 512,\n        height: 256,\n        type: Texture.HALF_FLOAT,\n        wrapS: Texture.CLAMP_TO_EDGE,\n        wrapT: Texture.CLAMP_TO_EDGE,\n        minFilter: Texture.NEAREST,\n        magFilter: Texture.NEAREST,\n        useMipmap: false\n    });\n    pass.setUniform('normalDistribution', normalDistribution);\n    pass.setUniform('viewportSize', [512, 256]);\n    pass.attachOutput(texture);\n    pass.render(renderer, framebuffer);\n\n    // FIXME Only chrome and firefox can readPixels with float type.\n    // framebuffer.bind(renderer);\n    // var pixels = new Float32Array(512 * 256 * 4);\n    // renderer.gl.readPixels(\n    //     0, 0, texture.width, texture.height,\n    //     Texture.RGBA, Texture.FLOAT, pixels\n    // );\n    // texture.pixels = pixels;\n    // texture.flipY = false;\n    // texture.dirty();\n    // framebuffer.unbind(renderer);\n\n    framebuffer.dispose(renderer);\n\n    return texture;\n};\n\ncubemapUtil.generateNormalDistribution = function (roughnessLevels, sampleSize) {\n\n    // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n    // GLSL not support bit operation, use lookup instead\n    // V -> i / N, U -> roughness\n    var roughnessLevels = roughnessLevels || 256;\n    var sampleSize = sampleSize || 1024;\n\n    var normalDistribution = new Texture2D({\n        width: roughnessLevels,\n        height: sampleSize,\n        type: Texture.FLOAT,\n        minFilter: Texture.NEAREST,\n        magFilter: Texture.NEAREST,\n        wrapS: Texture.CLAMP_TO_EDGE,\n        wrapT: Texture.CLAMP_TO_EDGE,\n        useMipmap: false\n    });\n    var pixels = new Float32Array(sampleSize * roughnessLevels * 4);\n    var tmp = [];\n\n    // function sortFunc(a, b) {\n    //     return Math.abs(b) - Math.abs(a);\n    // }\n    for (var j = 0; j < roughnessLevels; j++) {\n        var roughness = j / roughnessLevels;\n        var a = roughness * roughness;\n\n        for (var i = 0; i < sampleSize; i++) {\n            // http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\n            // http://stackoverflow.com/questions/1908492/unsigned-integer-in-javascript\n            // http://stackoverflow.com/questions/1822350/what-is-the-javascript-operator-and-how-do-you-use-it\n            var y = (i << 16 | i >>> 16) >>> 0;\n            y = ((y & 1431655765) << 1 | (y & 2863311530) >>> 1) >>> 0;\n            y = ((y & 858993459) << 2 | (y & 3435973836) >>> 2) >>> 0;\n            y = ((y & 252645135) << 4 | (y & 4042322160) >>> 4) >>> 0;\n            y = (((y & 16711935) << 8 | (y & 4278255360) >>> 8) >>> 0) / 4294967296;\n\n            // CDF\n            var cosTheta = Math.sqrt((1 - y) / (1 + (a * a - 1.0) * y));\n            tmp[i] = cosTheta;\n        }\n\n        for (var i = 0; i < sampleSize; i++) {\n            var offset = (i * roughnessLevels + j) * 4;\n            var cosTheta = tmp[i];\n            var sinTheta = Math.sqrt(1.0 - cosTheta * cosTheta);\n            var x = i / sampleSize;\n            var phi = 2.0 * Math.PI * x;\n            pixels[offset] = sinTheta * Math.cos(phi);\n            pixels[offset + 1] = cosTheta;\n            pixels[offset + 2] = sinTheta * Math.sin(phi);\n            pixels[offset + 3] = 1.0;\n        }\n    }\n    normalDistribution.pixels = pixels;\n\n    return normalDistribution;\n};\n\nexport default cubemapUtil;\n","import Base from '../core/Base';\nimport OrthoCamera from '../camera/Orthographic';\nimport Plane from '../geometry/Plane';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport Mesh from '../Mesh';\nimport glenum from '../core/glenum';\nimport vertexGlsl from '../shader/source/compositor/vertex.glsl.js';\n\nShader['import'](vertexGlsl);\n\nvar planeGeo = new Plane();\nvar mesh = new Mesh({\n    geometry: planeGeo,\n    frustumCulling: false\n});\nvar camera = new OrthoCamera();\n\n/**\n * @constructor clay.compositor.Pass\n * @extends clay.core.Base\n */\nvar Pass = Base.extend(function () {\n    return /** @lends clay.compositor.Pass# */ {\n        /**\n         * Fragment shader string\n         * @type {string}\n         */\n        // PENDING shader or fragment ?\n        fragment: '',\n\n        /**\n         * @type {Object}\n         */\n        outputs: null,\n\n        /**\n         * @type {clay.Material}\n         */\n        material: null,\n\n        /**\n         * @type {Boolean}\n         */\n        blendWithPrevious: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearColor: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearDepth: true\n    };\n}, function() {\n\n    var shader = new Shader(Shader.source('clay.compositor.vertex'), this.fragment);\n    var material = new Material({\n        shader: shader\n    });\n    material.enableTexturesAll();\n\n    this.material = material;\n\n},\n/** @lends clay.compositor.Pass.prototype */\n{\n    /**\n     * @param {string} name\n     * @param {} value\n     */\n    setUniform: function(name, value) {\n        this.material.setUniform(name, value);\n    },\n    /**\n     * @param  {string} name\n     * @return {}\n     */\n    getUniform: function(name) {\n        var uniform = this.material.uniforms[name];\n        if (uniform) {\n            return uniform.value;\n        }\n    },\n    /**\n     * @param  {clay.Texture} texture\n     * @param  {number} attachment\n     */\n    attachOutput: function(texture, attachment) {\n        if (!this.outputs) {\n            this.outputs = {};\n        }\n        attachment = attachment || glenum.COLOR_ATTACHMENT0;\n        this.outputs[attachment] = texture;\n    },\n    /**\n     * @param  {clay.Texture} texture\n     */\n    detachOutput: function(texture) {\n        for (var attachment in this.outputs) {\n            if (this.outputs[attachment] === texture) {\n                this.outputs[attachment] = null;\n            }\n        }\n    },\n\n    bind: function(renderer, frameBuffer) {\n\n        if (this.outputs) {\n            for (var attachment in this.outputs) {\n                var texture = this.outputs[attachment];\n                if (texture) {\n                    frameBuffer.attach(texture, attachment);\n                }\n            }\n        }\n\n        if (frameBuffer) {\n            frameBuffer.bind(renderer);\n        }\n    },\n\n    unbind: function(renderer, frameBuffer) {\n        frameBuffer.unbind(renderer);\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.FrameBuffer} [frameBuffer]\n     */\n    render: function(renderer, frameBuffer) {\n\n        var _gl = renderer.gl;\n\n        if (frameBuffer) {\n            this.bind(renderer, frameBuffer);\n            // MRT Support in chrome\n            // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n            var ext = renderer.getGLExtension('EXT_draw_buffers');\n            if (ext && this.outputs) {\n                var bufs = [];\n                for (var attachment in this.outputs) {\n                    attachment = +attachment;\n                    if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n                        bufs.push(attachment);\n                    }\n                }\n                ext.drawBuffersEXT(bufs);\n            }\n        }\n\n        this.trigger('beforerender', this, renderer);\n\n        // FIXME Don't clear in each pass in default, let the color overwrite the buffer\n        // FIXME pixels may be discard\n        var clearBit = this.clearDepth ? _gl.DEPTH_BUFFER_BIT : 0;\n        _gl.depthMask(true);\n        if (this.clearColor) {\n            clearBit = clearBit | _gl.COLOR_BUFFER_BIT;\n            _gl.colorMask(true, true, true, true);\n            var cc = this.clearColor;\n            if (Array.isArray(cc)) {\n                _gl.clearColor(cc[0], cc[1], cc[2], cc[3]);\n            }\n        }\n        _gl.clear(clearBit);\n\n        if (this.blendWithPrevious) {\n            // Blend with previous rendered scene in the final output\n            // FIXME Configure blend.\n            // FIXME It will cause screen blink？\n            _gl.enable(_gl.BLEND);\n            this.material.transparent = true;\n        }\n        else {\n            _gl.disable(_gl.BLEND);\n            this.material.transparent = false;\n        }\n\n        this.renderQuad(renderer);\n\n        this.trigger('afterrender', this, renderer);\n\n        if (frameBuffer) {\n            this.unbind(renderer, frameBuffer);\n        }\n    },\n\n    /**\n     * Simply do quad rendering\n     */\n    renderQuad: function (renderer) {\n        mesh.material = this.material;\n        renderer.renderPass([mesh], camera);\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {}\n});\n\nexport default Pass;\n","import Camera from '../Camera';\n/**\n * @constructor clay.camera.Orthographic\n * @extends clay.Camera\n */\nvar Orthographic = Camera.extend(\n/** @lends clay.camera.Orthographic# */\n{\n    /**\n     * @type {number}\n     */\n    left: -1,\n    /**\n     * @type {number}\n     */\n    right: 1,\n    /**\n     * @type {number}\n     */\n    near: -1,\n    /**\n     * @type {number}\n     */\n    far: 1,\n    /**\n     * @type {number}\n     */\n    top: 1,\n    /**\n     * @type {number}\n     */\n    bottom: -1\n},\n/** @lends clay.camera.Orthographic.prototype */\n{\n\n    updateProjectionMatrix: function() {\n        this.projectionMatrix.ortho(this.left, this.right, this.bottom, this.top, this.near, this.far);\n    },\n\n    decomposeProjectionMatrix: function () {\n        var m = this.projectionMatrix.array;\n        this.left = (-1 - m[12]) / m[0];\n        this.right = (1 - m[12]) / m[0];\n        this.top = (1 - m[13]) / m[5];\n        this.bottom = (-1 - m[13]) / m[5];\n        this.near = -(-1 - m[14]) / m[10];\n        this.far = -(1 - m[14]) / m[10];\n    },\n    /**\n     * @return {clay.camera.Orthographic}\n     */\n    clone: function() {\n        var camera = Camera.prototype.clone.call(this);\n        camera.left = this.left;\n        camera.right = this.right;\n        camera.near = this.near;\n        camera.far = this.far;\n        camera.top = this.top;\n        camera.bottom = this.bottom;\n\n        return camera;\n    }\n});\n\nexport default Orthographic;\n","export default \"\\n@export clay.compositor.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\nvarying vec2 v_Texcoord;\\nvoid main()\\n{\\n v_Texcoord = texcoord;\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n}\\n@end\";\n","export default \"#define SAMPLE_NUMBER 1024\\n#define PI 3.14159265358979\\nuniform sampler2D normalDistribution;\\nuniform vec2 viewportSize : [512, 256];\\nconst vec3 N = vec3(0.0, 0.0, 1.0);\\nconst float fSampleNumber = float(SAMPLE_NUMBER);\\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\\n vec3 tangentX = normalize(cross(N, upVector));\\n vec3 tangentZ = cross(N, tangentX);\\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\\n}\\nfloat G_Smith(float roughness, float NoV, float NoL) {\\n float k = roughness * roughness / 2.0;\\n float G1V = NoV / (NoV * (1.0 - k) + k);\\n float G1L = NoL / (NoL * (1.0 - k) + k);\\n return G1L * G1V;\\n}\\nvoid main() {\\n vec2 uv = gl_FragCoord.xy / viewportSize;\\n float NoV = uv.x;\\n float roughness = uv.y;\\n vec3 V;\\n V.x = sqrt(1.0 - NoV * NoV);\\n V.y = 0.0;\\n V.z = NoV;\\n float A = 0.0;\\n float B = 0.0;\\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\\n vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\\n vec3 L = reflect(-V, H);\\n float NoL = clamp(L.z, 0.0, 1.0);\\n float NoH = clamp(H.z, 0.0, 1.0);\\n float VoH = clamp(dot(V, H), 0.0, 1.0);\\n if (NoL > 0.0) {\\n float G = G_Smith(roughness, NoV, NoL);\\n float G_Vis = G * VoH / (NoH * NoV);\\n float Fc = pow(1.0 - VoH, 5.0);\\n A += (1.0 - Fc) * G_Vis;\\n B += Fc * G_Vis;\\n }\\n }\\n gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\\n}\\n\";\n","export default \"#define SHADER_NAME prefilter\\n#define SAMPLE_NUMBER 1024\\n#define PI 3.14159265358979\\nuniform mat4 viewInverse : VIEWINVERSE;\\nuniform samplerCube environmentMap;\\nuniform sampler2D normalDistribution;\\nuniform float roughness : 0.5;\\nvarying vec2 v_Texcoord;\\nvarying vec3 v_WorldPosition;\\n@import clay.util.rgbm\\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\\n vec3 tangentX = normalize(cross(N, upVector));\\n vec3 tangentZ = cross(N, tangentX);\\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\\n}\\nvoid main() {\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(v_WorldPosition - eyePos);\\n vec3 N = V;\\n vec3 prefilteredColor = vec3(0.0);\\n float totalWeight = 0.0;\\n float fMaxSampleNumber = float(SAMPLE_NUMBER);\\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\\n vec3 H = importanceSampleNormal(float(i) / fMaxSampleNumber, roughness, N);\\n vec3 L = reflect(-V, H);\\n float NoL = clamp(dot(N, L), 0.0, 1.0);\\n if (NoL > 0.0) {\\n prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\\n totalWeight += NoL;\\n }\\n }\\n gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\\n}\\n\";\n","import Light from '../Light';\nimport vendor from '../core/vendor';\n\n/**\n * Spherical Harmonic Ambient Light\n * @constructor clay.light.AmbientSH\n * @extends clay.Light\n */\nvar AmbientSHLight = Light.extend({\n\n    castShadow: false,\n\n    /**\n     * Spherical Harmonic Coefficients\n     * @type {Array.<number>}\n     * @memberOf clay.light.AmbientSH#\n     */\n    coefficients: [],\n\n}, function () {\n    this._coefficientsTmpArr = new vendor.Float32Array(9 * 3);\n}, {\n\n    type: 'AMBIENT_SH_LIGHT',\n\n    uniformTemplates: {\n        ambientSHLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        },\n\n        ambientSHLightCoefficients: {\n            type: '3f',\n            value: function (instance) {\n                var coefficientsTmpArr = instance._coefficientsTmpArr;\n                for (var i = 0; i < instance.coefficients.length; i++) {\n                    coefficientsTmpArr[i] = instance.coefficients[i];\n                }\n                return coefficientsTmpArr;\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.Ambient}\n     * @memberOf clay.light.Ambient.prototype\n     */\n});\n\nexport default AmbientSHLight;\n","// Spherical Harmonic Helpers\nimport Texture from '../Texture';\nimport FrameBuffer from '../FrameBuffer';\nimport Texture2D from '../Texture2D';\nimport Pass from '../compositor/Pass';\nimport vendor from '../core/vendor';\nimport Skybox from '../plugin/Skybox';\nimport Skydome from '../plugin/Skydome';\nimport EnvironmentMapPass from '../prePass/EnvironmentMap';\nimport Scene from '../Scene';\nimport vec3 from '../glmatrix/vec3';\nvar sh = {};\n\nimport projectEnvMapShaderCode from './shader/projectEnvMap.glsl.js';\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n// Project on gpu, but needs browser to support readPixels as Float32Array.\nfunction projectEnvironmentMapGPU(renderer, envMap) {\n    var shTexture = new Texture2D({\n        width: 9,\n        height: 1,\n        type: Texture.FLOAT\n    });\n    var pass = new Pass({\n        fragment: projectEnvMapShaderCode\n    });\n    pass.material.define('fragment', 'TEXTURE_SIZE', envMap.width);\n    pass.setUniform('environmentMap', envMap);\n\n    var framebuffer = new FrameBuffer();\n    framebuffer.attach(shTexture);\n    pass.render(renderer, framebuffer);\n\n    framebuffer.bind(renderer);\n    // TODO Only chrome and firefox support Float32Array\n    var pixels = new vendor.Float32Array(9 * 4);\n    renderer.gl.readPixels(0, 0, 9, 1, Texture.RGBA, Texture.FLOAT, pixels);\n\n    var coeff = new vendor.Float32Array(9 * 3);\n    for (var i = 0; i < 9; i++) {\n        coeff[i * 3] = pixels[i * 4];\n        coeff[i * 3 + 1] = pixels[i * 4 + 1];\n        coeff[i * 3 + 2] = pixels[i * 4 + 2];\n    }\n    framebuffer.unbind(renderer);\n\n    framebuffer.dispose(renderer);\n    pass.dispose(renderer);\n    return coeff;\n}\n\nfunction harmonics(normal, index){\n    var x = normal[0];\n    var y = normal[1];\n    var z = normal[2];\n\n    if (index === 0) {\n        return 1.0;\n    }\n    else if (index === 1) {\n        return x;\n    }\n    else if (index === 2) {\n        return y;\n    }\n    else if (index === 3) {\n        return z;\n    }\n    else if (index === 4) {\n        return x * z;\n    }\n    else if (index === 5) {\n        return y * z;\n    }\n    else if (index === 6) {\n        return x * y;\n    }\n    else if (index === 7) {\n        return 3.0 * z * z - 1.0;\n    }\n    else {\n        return x * x - y * y;\n    }\n}\n\nvar normalTransform = {\n    px: [2, 1, 0, -1, -1, 1],\n    nx: [2, 1, 0, 1, -1, -1],\n    py: [0, 2, 1, 1, -1, -1],\n    ny: [0, 2, 1, 1, 1, 1],\n    pz: [0, 1, 2, -1, -1, -1],\n    nz: [0, 1, 2, 1, -1, 1]\n};\n\n// Project on cpu.\nfunction projectEnvironmentMapCPU(renderer, cubePixels, width, height) {\n    var coeff = new vendor.Float32Array(9 * 3);\n    var normal = vec3.create();\n    var texel = vec3.create();\n    var fetchNormal = vec3.create();\n    for (var m = 0; m < 9; m++) {\n        var result = vec3.create();\n        for (var k = 0; k < targets.length; k++) {\n            var pixels = cubePixels[targets[k]];\n\n            var sideResult = vec3.create();\n            var divider = 0;\n            var i = 0;\n            var transform = normalTransform[targets[k]];\n            for (var y = 0; y < height; y++) {\n                for (var x = 0; x < width; x++) {\n\n                    normal[0] = x / (width - 1.0) * 2.0 - 1.0;\n                    // TODO Flip y?\n                    normal[1] = y / (height - 1.0) * 2.0 - 1.0;\n                    normal[2] = -1.0;\n                    vec3.normalize(normal, normal);\n\n                    fetchNormal[0] = normal[transform[0]] * transform[3];\n                    fetchNormal[1] = normal[transform[1]] * transform[4];\n                    fetchNormal[2] = normal[transform[2]] * transform[5];\n\n                    texel[0] = pixels[i++] / 255;\n                    texel[1] = pixels[i++] / 255;\n                    texel[2] = pixels[i++] / 255;\n                    // RGBM Decode\n                    var scale = pixels[i++] / 255 * 8.12;\n                    texel[0] *= scale;\n                    texel[1] *= scale;\n                    texel[2] *= scale;\n\n                    vec3.scaleAndAdd(sideResult, sideResult, texel, harmonics(fetchNormal, m) * -normal[2]);\n                    // -normal.z equals cos(theta) of Lambertian\n                    divider += -normal[2];\n                }\n            }\n            vec3.scaleAndAdd(result, result, sideResult, 1 / divider);\n        }\n\n        coeff[m * 3] = result[0] / 6.0;\n        coeff[m * 3 + 1] = result[1] / 6.0;\n        coeff[m * 3 + 2] = result[2] / 6.0;\n    }\n    return coeff;\n}\n\n/**\n * @param  {clay.Renderer} renderer\n * @param  {clay.Texture} envMap\n * @param  {Object} [textureOpts]\n * @param  {Object} [textureOpts.lod]\n * @param  {boolean} [textureOpts.decodeRGBM]\n */\nsh.projectEnvironmentMap = function (renderer, envMap, opts) {\n\n    // TODO sRGB\n\n    opts = opts || {};\n    opts.lod = opts.lod || 0;\n\n    var skybox;\n    var dummyScene = new Scene();\n    var size = 64;\n    if (envMap.textureType === 'texture2D') {\n        skybox = new Skydome({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    else {\n        size = (envMap.image && envMap.image.px) ? envMap.image.px.width : envMap.width;\n        skybox = new Skybox({\n            scene: dummyScene,\n            environmentMap: envMap\n        });\n    }\n    // Convert to rgbm\n    var width = Math.ceil(size / Math.pow(2, opts.lod));\n    var height = Math.ceil(size / Math.pow(2, opts.lod));\n    var rgbmTexture = new Texture2D({\n        width: width,\n        height: height\n    });\n    var framebuffer = new FrameBuffer();\n    skybox.material.define('fragment', 'RGBM_ENCODE');\n    if (opts.decodeRGBM) {\n        skybox.material.define('fragment', 'RGBM_DECODE');\n    }\n    skybox.material.set('lod', opts.lod);\n    var envMapPass = new EnvironmentMapPass({\n        texture: rgbmTexture\n    });\n    var cubePixels = {};\n    for (var i = 0; i < targets.length; i++) {\n        cubePixels[targets[i]] = new Uint8Array(width * height * 4);\n        var camera = envMapPass.getCamera(targets[i]);\n        camera.fov = 90;\n        framebuffer.attach(rgbmTexture);\n        framebuffer.bind(renderer);\n        renderer.render(dummyScene, camera);\n        renderer.gl.readPixels(\n            0, 0, width, height,\n            Texture.RGBA, Texture.UNSIGNED_BYTE, cubePixels[targets[i]]\n        );\n        framebuffer.unbind(renderer);\n    }\n\n    skybox.dispose(renderer);\n    framebuffer.dispose(renderer);\n    rgbmTexture.dispose(renderer);\n\n    return projectEnvironmentMapCPU(renderer, cubePixels, width, height);\n};\n\nexport default sh;\n","export default \"uniform samplerCube environmentMap;\\nvarying vec2 v_Texcoord;\\n#define TEXTURE_SIZE 16\\nmat3 front = mat3(\\n 1.0, 0.0, 0.0,\\n 0.0, 1.0, 0.0,\\n 0.0, 0.0, 1.0\\n);\\nmat3 back = mat3(\\n -1.0, 0.0, 0.0,\\n 0.0, 1.0, 0.0,\\n 0.0, 0.0, -1.0\\n);\\nmat3 left = mat3(\\n 0.0, 0.0, -1.0,\\n 0.0, 1.0, 0.0,\\n 1.0, 0.0, 0.0\\n);\\nmat3 right = mat3(\\n 0.0, 0.0, 1.0,\\n 0.0, 1.0, 0.0,\\n -1.0, 0.0, 0.0\\n);\\nmat3 up = mat3(\\n 1.0, 0.0, 0.0,\\n 0.0, 0.0, 1.0,\\n 0.0, -1.0, 0.0\\n);\\nmat3 down = mat3(\\n 1.0, 0.0, 0.0,\\n 0.0, 0.0, -1.0,\\n 0.0, 1.0, 0.0\\n);\\nfloat harmonics(vec3 normal){\\n int index = int(gl_FragCoord.x);\\n float x = normal.x;\\n float y = normal.y;\\n float z = normal.z;\\n if(index==0){\\n return 1.0;\\n }\\n else if(index==1){\\n return x;\\n }\\n else if(index==2){\\n return y;\\n }\\n else if(index==3){\\n return z;\\n }\\n else if(index==4){\\n return x*z;\\n }\\n else if(index==5){\\n return y*z;\\n }\\n else if(index==6){\\n return x*y;\\n }\\n else if(index==7){\\n return 3.0*z*z - 1.0;\\n }\\n else{\\n return x*x - y*y;\\n }\\n}\\nvec3 sampleSide(mat3 rot)\\n{\\n vec3 result = vec3(0.0);\\n float divider = 0.0;\\n for (int i = 0; i < TEXTURE_SIZE * TEXTURE_SIZE; i++) {\\n float x = mod(float(i), float(TEXTURE_SIZE));\\n float y = float(i / TEXTURE_SIZE);\\n vec2 sidecoord = ((vec2(x, y) + vec2(0.5, 0.5)) / vec2(TEXTURE_SIZE)) * 2.0 - 1.0;\\n vec3 normal = normalize(vec3(sidecoord, -1.0));\\n vec3 fetchNormal = rot * normal;\\n vec3 texel = textureCube(environmentMap, fetchNormal).rgb;\\n result += harmonics(fetchNormal) * texel * -normal.z;\\n divider += -normal.z;\\n }\\n return result / divider;\\n}\\nvoid main()\\n{\\n vec3 result = (\\n sampleSide(front) +\\n sampleSide(back) +\\n sampleSide(left) +\\n sampleSide(right) +\\n sampleSide(up) +\\n sampleSide(down)\\n ) / 6.0;\\n gl_FragColor = vec4(result, 1.0);\\n}\";\n","import * as echarts from 'echarts/lib/echarts';\nvar retrieve = {\n  firstNotNull: function () {\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      if (arguments[i] != null) {\n        return arguments[i];\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n   *                         each of which can be Array or primary type.\n   * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n   */\n  queryDataIndex: function (data, payload) {\n    if (payload.dataIndexInside != null) {\n      return payload.dataIndexInside;\n    } else if (payload.dataIndex != null) {\n      return echarts.util.isArray(payload.dataIndex) ? echarts.util.map(payload.dataIndex, function (value) {\n        return data.indexOfRawIndex(value);\n      }) : data.indexOfRawIndex(payload.dataIndex);\n    } else if (payload.name != null) {\n      return echarts.util.isArray(payload.name) ? echarts.util.map(payload.name, function (value) {\n        return data.indexOfName(value);\n      }) : data.indexOfName(payload.name);\n    }\n  }\n};\nexport default retrieve;","import Geometry from '../Geometry';\nimport BoundingBox from '../math/BoundingBox';\n\n/**\n * @constructor clay.geometry.Sphere\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [widthSegments]\n * @param {number} [heightSegments]\n * @param {number} [phiStart]\n * @param {number} [phiLength]\n * @param {number} [thetaStart]\n * @param {number} [thetaLength]\n * @param {number} [radius]\n */\nvar Sphere = Geometry.extend(/** @lends clay.geometry.Sphere# */ {\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 40,\n    /**\n     * @type {number}\n     */\n    heightSegments: 20,\n\n    /**\n     * @type {number}\n     */\n    phiStart: 0,\n    /**\n     * @type {number}\n     */\n    phiLength: Math.PI * 2,\n\n    /**\n     * @type {number}\n     */\n    thetaStart: 0,\n    /**\n     * @type {number}\n     */\n    thetaLength: Math.PI,\n\n    /**\n     * @type {number}\n     */\n    radius: 1\n\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Sphere.prototype */\n{\n    /**\n     * Build sphere geometry\n     */\n    build: function() {\n        var heightSegments = this.heightSegments;\n        var widthSegments = this.widthSegments;\n\n        var positionAttr = this.attributes.position;\n        var texcoordAttr = this.attributes.texcoord0;\n        var normalAttr = this.attributes.normal;\n\n        var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n        positionAttr.init(vertexCount);\n        texcoordAttr.init(vertexCount);\n        normalAttr.init(vertexCount);\n\n        var IndicesCtor = vertexCount > 0xffff ? Uint32Array : Uint16Array;\n        var indices = this.indices = new IndicesCtor(widthSegments * heightSegments * 6);\n\n        var x, y, z,\n            u, v,\n            i, j;\n\n        var radius = this.radius;\n        var phiStart = this.phiStart;\n        var phiLength = this.phiLength;\n        var thetaStart = this.thetaStart;\n        var thetaLength = this.thetaLength;\n        var radius = this.radius;\n\n        var pos = [];\n        var uv = [];\n        var offset = 0;\n        var divider = 1 / radius;\n        for (j = 0; j <= heightSegments; j ++) {\n            for (i = 0; i <= widthSegments; i ++) {\n                u = i / widthSegments;\n                v = j / heightSegments;\n\n                // X axis is inverted so texture can be mapped from left to right\n                x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n                y = radius * Math.cos(thetaStart + v * thetaLength);\n                z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\n                pos[0] = x; pos[1] = y; pos[2] = z;\n                uv[0] = u; uv[1] = v;\n                positionAttr.set(offset, pos);\n                texcoordAttr.set(offset, uv);\n                pos[0] *= divider;\n                pos[1] *= divider;\n                pos[2] *= divider;\n                normalAttr.set(offset, pos);\n                offset++;\n            }\n        }\n\n        var i1, i2, i3, i4;\n\n        var len = widthSegments + 1;\n\n        var n = 0;\n        for (j = 0; j < heightSegments; j ++) {\n            for (i = 0; i < widthSegments; i ++) {\n                i2 = j * len + i;\n                i1 = (j * len + i + 1);\n                i4 = (j + 1) * len + i + 1;\n                i3 = (j + 1) * len + i;\n\n                indices[n++] = i1;\n                indices[n++] = i2;\n                indices[n++] = i4;\n\n                indices[n++] = i2;\n                indices[n++] = i3;\n                indices[n++] = i4;\n            }\n        }\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.max.set(radius, radius, radius);\n        this.boundingBox.min.set(-radius, -radius, -radius);\n    }\n});\n\nexport default Sphere;\n","import Light from '../Light';\n\n/**\n * @constructor clay.light.Ambient\n * @extends clay.Light\n */\nvar AmbientLight = Light.extend({\n\n    castShadow: false\n\n}, {\n\n    type: 'AMBIENT_LIGHT',\n\n    uniformTemplates: {\n        ambientLightColor: {\n            type: '3f',\n            value: function(instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0]*intensity, color[1]*intensity, color[2]*intensity];\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.Ambient}\n     * @memberOf clay.light.Ambient.prototype\n     */\n});\n\nexport default AmbientLight;\n","import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n\n/**\n * @constructor clay.light.Directional\n * @extends clay.Light\n *\n * @example\n *     var light = new clay.light.Directional({\n *         intensity: 0.5,\n *         color: [1.0, 0.0, 0.0]\n *     });\n *     light.position.set(10, 10, 10);\n *     light.lookAt(clay.Vector3.ZERO);\n *     scene.add(light);\n */\nvar DirectionalLight = Light.extend(/** @lends clay.light.Directional# */ {\n    /**\n     * @type {number}\n     */\n    shadowBias: 0.001,\n    /**\n     * @type {number}\n     */\n    shadowSlopeScale: 2.0,\n    /**\n     * Shadow cascade.\n     * Use PSSM technique when it is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    shadowCascade: 1,\n\n    /**\n     * Available when shadowCascade is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    cascadeSplitLogFactor: 0.2\n}, {\n\n    type: 'DIRECTIONAL_LIGHT',\n\n    uniformTemplates: {\n        directionalLightDirection: {\n            type: '3f',\n            value: function (instance) {\n                instance.__dir = instance.__dir || new Vector3();\n                // Direction is target to eye\n                return instance.__dir.copy(instance.worldTransform.z).normalize().negate().array;\n            }\n        },\n        directionalLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Directional}\n     * @memberOf clay.light.Directional.prototype\n     */\n    clone: function () {\n        var light = Light.prototype.clone.call(this);\n        light.shadowBias = this.shadowBias;\n        light.shadowSlopeScale = this.shadowSlopeScale;\n        return light;\n    }\n});\n\nexport default DirectionalLight;\n","import Light from '../Light';\n\n/**\n * @constructor clay.light.Point\n * @extends clay.Light\n */\nvar PointLight = Light.extend(/** @lends clay.light.Point# */ {\n    /**\n     * @type {number}\n     */\n    range: 100,\n\n    /**\n     * @type {number}\n     */\n    castShadow: false\n}, {\n\n    type: 'POINT_LIGHT',\n\n    uniformTemplates: {\n        pointLightPosition: {\n            type: '3f',\n            value: function(instance) {\n                return instance.getWorldPosition().array;\n            }\n        },\n        pointLightRange: {\n            type: '1f',\n            value: function(instance) {\n                return instance.range;\n            }\n        },\n        pointLightColor: {\n            type: '3f',\n            value: function(instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Point}\n     * @memberOf clay.light.Point.prototype\n     */\n    clone: function() {\n        var light = Light.prototype.clone.call(this);\n        light.range = this.range;\n        return light;\n    }\n});\n\nexport default PointLight;\n","import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n\n/**\n * @constructor clay.light.Spot\n * @extends clay.Light\n */\nvar SpotLight = Light.extend(/**@lends clay.light.Spot */ {\n    /**\n     * @type {number}\n     */\n    range: 20,\n    /**\n     * @type {number}\n     */\n    umbraAngle: 30,\n    /**\n     * @type {number}\n     */\n    penumbraAngle: 45,\n    /**\n     * @type {number}\n     */\n    falloffFactor: 2.0,\n    /**\n     * @type {number}\n     */\n    shadowBias: 0.001,\n    /**\n     * @type {number}\n     */\n    shadowSlopeScale: 2.0\n}, {\n\n    type: 'SPOT_LIGHT',\n\n    uniformTemplates: {\n        spotLightPosition: {\n            type: '3f',\n            value: function (instance) {\n                return instance.getWorldPosition().array;\n            }\n        },\n        spotLightRange: {\n            type: '1f',\n            value: function (instance) {\n                return instance.range;\n            }\n        },\n        spotLightUmbraAngleCosine: {\n            type: '1f',\n            value: function (instance) {\n                return Math.cos(instance.umbraAngle * Math.PI / 180);\n            }\n        },\n        spotLightPenumbraAngleCosine: {\n            type: '1f',\n            value: function (instance) {\n                return Math.cos(instance.penumbraAngle * Math.PI / 180);\n            }\n        },\n        spotLightFalloffFactor: {\n            type: '1f',\n            value: function (instance) {\n                return instance.falloffFactor;\n            }\n        },\n        spotLightDirection: {\n            type: '3f',\n            value: function (instance) {\n                instance.__dir = instance.__dir || new Vector3();\n                // Direction is target to eye\n                return instance.__dir.copy(instance.worldTransform.z).negate().array;\n            }\n        },\n        spotLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Spot}\n     * @memberOf clay.light.Spot.prototype\n     */\n    clone: function () {\n        var light = Light.prototype.clone.call(this);\n        light.range = this.range;\n        light.umbraAngle = this.umbraAngle;\n        light.penumbraAngle = this.penumbraAngle;\n        light.falloffFactor = this.falloffFactor;\n        light.shadowBias = this.shadowBias;\n        light.shadowSlopeScale = this.shadowSlopeScale;\n        return light;\n    }\n});\n\nexport default SpotLight;\n","import vec4 from '../glmatrix/vec4';\n\n/**\n * @constructor\n * @alias clay.Vector4\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Vector4 = function(x, y, z, w) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    w = w || 0;\n\n    /**\n     * Storage of Vector4, read and write of x, y, z, w will change the values in array\n     * All methods also operate on the array instead of x, y, z, w components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector4#\n     */\n    this.array = vec4.fromValues(x, y, z, w);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector4#\n     */\n    this._dirty = true;\n};\n\nVector4.prototype = {\n\n    constructor: Vector4,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    add: function(b) {\n        vec4.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @param  {number}  w\n     * @return {clay.Vector4}\n     */\n    set: function(x, y, z, w) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this.array[3] = w;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y, z and w components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector4}\n     */\n    setArray: function(arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n        this.array[3] = arr[3];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector4\n     * @return {clay.Vector4}\n     */\n    clone: function() {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    copy: function(b) {\n        vec4.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dist: function(b) {\n        return vec4.dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    distance: function(b) {\n        return vec4.distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    div: function(b) {\n        vec4.div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    divide: function(b) {\n        vec4.divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dot: function(b) {\n        return vec4.dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function() {\n        return vec4.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function() {\n        return vec4.length(this.array);\n    },\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector4} a\n     * @param  {clay.Vector4} b\n     * @param  {number}  t\n     * @return {clay.Vector4}\n     */\n    lerp: function(a, b, t) {\n        vec4.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    min: function(b) {\n        vec4.min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    max: function(b) {\n        vec4.max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    mul: function(b) {\n        vec4.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    multiply: function(b) {\n        vec4.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector4}\n     */\n    negate: function() {\n        vec4.negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector4}\n     */\n    normalize: function() {\n        vec4.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y, z, w components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector4}\n     */\n    random: function(scale) {\n        vec4.random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scale: function(s) {\n        vec4.scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector4} b\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scaleAndAdd: function(b, s) {\n        vec4.scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    sqrDist: function(b) {\n        return vec4.sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    squaredDistance: function(b) {\n        return vec4.squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function() {\n        return vec4.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function() {\n        return vec4.squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    sub: function(b) {\n        vec4.sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    subtract: function(b) {\n        vec4.subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector4}\n     */\n    transformMat4: function(m) {\n        vec4.transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Quaternion q\n     * @param  {clay.Quaternion} q\n     * @return {clay.Vector4}\n     */\n    transformQuat: function(q) {\n        vec4.transformQuat(this.array, this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Vector4.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name w\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'w', {\n        get: function () {\n            return this.array[3];\n        },\n        set: function (value) {\n            this.array[3] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.add = function(out, a, b) {\n    vec4.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector4}\n */\nVector4.set = function(out, x, y, z, w) {\n    vec4.set(out.array, x, y, z, w);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.copy = function(out, b) {\n    vec4.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dist = function(a, b) {\n    return vec4.distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.distance = Vector4.dist;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.div = function(out, a, b) {\n    vec4.divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.divide = Vector4.div;\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dot = function(a, b) {\n    return vec4.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.len = function(b) {\n    return vec4.length(b.array);\n};\n\n// Vector4.length = Vector4.len;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  t\n * @return {clay.Vector4}\n */\nVector4.lerp = function(out, a, b, t) {\n    vec4.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.min = function(out, a, b) {\n    vec4.min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.max = function(out, a, b) {\n    vec4.max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.mul = function(out, a, b) {\n    vec4.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.multiply = Vector4.mul;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.negate = function(out, a) {\n    vec4.negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.normalize = function(out, a) {\n    vec4.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.random = function(out, scale) {\n    vec4.random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scale = function(out, a, scale) {\n    vec4.scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scaleAndAdd = function(out, a, b, scale) {\n    vec4.scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.sqrDist = function(a, b) {\n    return vec4.sqrDist(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.squaredDistance = Vector4.sqrDist;\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.sqrLen = function(a) {\n    return vec4.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.squaredLength = Vector4.sqrLen;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.sub = function(out, a, b) {\n    vec4.subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.subtract = Vector4.sub;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector4}\n */\nVector4.transformMat4 = function(out, a, m) {\n    vec4.transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector4}\n */\nVector4.transformQuat = function(out, a, q) {\n    vec4.transformQuat(out.array, a.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Vector4;\n","import mat2 from '../glmatrix/mat2';\n\n/**\n * @constructor\n * @alias clay.Matrix2\n */\nvar Matrix2 = function() {\n\n    /**\n     * Storage of Matrix2\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix2#\n     */\n    this.array = mat2.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix2#\n     */\n    this._dirty = true;\n};\n\nMatrix2.prototype = {\n\n    constructor: Matrix2,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Clone a new Matrix2\n     * @return {clay.Matrix2}\n     */\n    clone: function() {\n        return (new Matrix2()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix2} b\n     * @return {clay.Matrix2}\n     */\n    copy: function(b) {\n        mat2.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix2}\n     */\n    adjoint: function() {\n        mat2.adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return mat2.determinant(this.array);\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix2}\n     */\n    identity: function() {\n        mat2.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix2}\n     */\n    invert: function() {\n        mat2.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix2} b\n     * @return {clay.Matrix2}\n     */\n    mul: function(b) {\n        mat2.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix2} a\n     * @return {clay.Matrix2}\n     */\n    mulLeft: function(a) {\n        mat2.mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix2} b\n     * @return {clay.Matrix2}\n     */\n    multiply: function(b) {\n        mat2.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix2} a\n     * @return {clay.Matrix2}\n     */\n    multiplyLeft: function(a) {\n        mat2.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian\n     * @param  {number}   rad\n     * @return {clay.Matrix2}\n     */\n    rotate: function(rad) {\n        mat2.rotate(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * @param  {clay.Vector2}  s\n     * @return {clay.Matrix2}\n     */\n    scale: function(v) {\n        mat2.scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function() {\n        mat2.transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\n/**\n * @param  {Matrix2} out\n * @param  {Matrix2} a\n * @return {Matrix2}\n */\nMatrix2.adjoint = function(out, a) {\n    mat2.adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @return {clay.Matrix2}\n */\nMatrix2.copy = function(out, a) {\n    mat2.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} a\n * @return {number}\n */\nMatrix2.determinant = function(a) {\n    return mat2.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @return {clay.Matrix2}\n */\nMatrix2.identity = function(out) {\n    mat2.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @return {clay.Matrix2}\n */\nMatrix2.invert = function(out, a) {\n    mat2.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {clay.Matrix2} b\n * @return {clay.Matrix2}\n */\nMatrix2.mul = function(out, a, b) {\n    mat2.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {clay.Matrix2} b\n * @return {clay.Matrix2}\n */\nMatrix2.multiply = Matrix2.mul;\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {number}   rad\n * @return {clay.Matrix2}\n */\nMatrix2.rotate = function(out, a, rad) {\n    mat2.rotate(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {clay.Vector2}  v\n * @return {clay.Matrix2}\n */\nMatrix2.scale = function(out, a, v) {\n    mat2.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {Matrix2} out\n * @param  {Matrix2} a\n * @return {Matrix2}\n */\nMatrix2.transpose = function(out, a) {\n    mat2.transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix2;\n","\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\n\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) {\n    L[2] = a[2]/a[0];\n    U[0] = a[0];\n    U[1] = a[1];\n    U[3] = a[3] - L[2] * U[1];\n    return [L, D, U];\n};\n\n\nexport default mat2;","import mat2d from '../glmatrix/mat2d';\n\n/**\n * @constructor\n * @alias clay.Matrix2d\n */\nvar Matrix2d = function() {\n    /**\n     * Storage of Matrix2d\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix2d#\n     */\n    this.array = mat2d.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix2d#\n     */\n    this._dirty = true;\n};\n\nMatrix2d.prototype = {\n\n    constructor: Matrix2d,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Clone a new Matrix2d\n     * @return {clay.Matrix2d}\n     */\n    clone: function() {\n        return (new Matrix2d()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix2d} b\n     * @return {clay.Matrix2d}\n     */\n    copy: function(b) {\n        mat2d.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return mat2d.determinant(this.array);\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix2d}\n     */\n    identity: function() {\n        mat2d.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix2d}\n     */\n    invert: function() {\n        mat2d.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix2d} b\n     * @return {clay.Matrix2d}\n     */\n    mul: function(b) {\n        mat2d.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix2d} a\n     * @return {clay.Matrix2d}\n     */\n    mulLeft: function(b) {\n        mat2d.mul(this.array, b.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix2d} b\n     * @return {clay.Matrix2d}\n     */\n    multiply: function(b) {\n        mat2d.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix2d} a\n     * @return {clay.Matrix2d}\n     */\n    multiplyLeft: function(b) {\n        mat2d.multiply(this.array, b.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian\n     * @param  {number}   rad\n     * @return {clay.Matrix2d}\n     */\n    rotate: function(rad) {\n        mat2d.rotate(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * @param  {clay.Vector2}  s\n     * @return {clay.Matrix2d}\n     */\n    scale: function(s) {\n        mat2d.scale(this.array, this.array, s.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v\n     * @param  {clay.Vector2}  v\n     * @return {clay.Matrix2d}\n     */\n    translate: function(v) {\n        mat2d.translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @return {clay.Matrix2d}\n */\nMatrix2d.copy = function(out, a) {\n    mat2d.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} a\n * @return {number}\n */\nMatrix2d.determinant = function(a) {\n    return mat2d.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @return {clay.Matrix2d}\n */\nMatrix2d.identity = function(out) {\n    mat2d.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @return {clay.Matrix2d}\n */\nMatrix2d.invert = function(out, a) {\n    mat2d.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Matrix2d} b\n * @return {clay.Matrix2d}\n */\nMatrix2d.mul = function(out, a, b) {\n    mat2d.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Matrix2d} b\n * @return {clay.Matrix2d}\n */\nMatrix2d.multiply = Matrix2d.mul;\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {number}   rad\n * @return {clay.Matrix2d}\n */\nMatrix2d.rotate = function(out, a, rad) {\n    mat2d.rotate(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Vector2}  v\n * @return {clay.Matrix2d}\n */\nMatrix2d.scale = function(out, a, v) {\n    mat2d.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Vector2}  v\n * @return {clay.Matrix2d}\n */\nMatrix2d.translate = function(out, a, v) {\n    mat2d.translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix2d;\n","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n};\n\n\nexport default mat2d;","import mat3 from '../glmatrix/mat3';\n\n/**\n * @constructor\n * @alias clay.Matrix3\n */\nvar Matrix3 = function () {\n\n    /**\n     * Storage of Matrix3\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix3#\n     */\n    this.array = mat3.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix3#\n     */\n    this._dirty = true;\n};\n\nMatrix3.prototype = {\n\n    constructor: Matrix3,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix3}\n     */\n    adjoint: function () {\n        mat3.adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Matrix3\n     * @return {clay.Matrix3}\n     */\n    clone: function () {\n        return (new Matrix3()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix3} b\n     * @return {clay.Matrix3}\n     */\n    copy: function (b) {\n        mat3.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function () {\n        return mat3.determinant(this.array);\n    },\n\n    /**\n     * Copy the values from Matrix2d a\n     * @param  {clay.Matrix2d} a\n     * @return {clay.Matrix3}\n     */\n    fromMat2d: function (a) {\n        mat3.fromMat2d(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Copies the upper-left 3x3 values of Matrix4\n     * @param  {clay.Matrix4} a\n     * @return {clay.Matrix3}\n     */\n    fromMat4: function (a) {\n        mat3.fromMat4(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculates a rotation matrix from the given quaternion\n     * @param  {clay.Quaternion} q\n     * @return {clay.Matrix3}\n     */\n    fromQuat: function (q) {\n        mat3.fromQuat(this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix3}\n     */\n    identity: function () {\n        mat3.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix3}\n     */\n    invert: function () {\n        mat3.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix3} b\n     * @return {clay.Matrix3}\n     */\n    mul: function (b) {\n        mat3.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    mulLeft: function (a) {\n        mat3.mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix3} b\n     * @return {clay.Matrix3}\n     */\n    multiply: function (b) {\n        mat3.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    multiplyLeft: function (a) {\n        mat3.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian\n     * @param  {number}   rad\n     * @return {clay.Matrix3}\n     */\n    rotate: function (rad) {\n        mat3.rotate(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * @param  {clay.Vector2}  s\n     * @return {clay.Matrix3}\n     */\n    scale: function (v) {\n        mat3.scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v\n     * @param  {clay.Vector2}  v\n     * @return {clay.Matrix3}\n     */\n    translate: function (v) {\n        mat3.translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n     * @param {clay.Matrix4} a\n     */\n    normalFromMat4: function (a) {\n        mat3.normalFromMat4(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function () {\n        mat3.transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function () {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.adjoint = function (out, a) {\n    mat3.adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.copy = function (out, a) {\n    mat3.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} a\n * @return {number}\n */\nMatrix3.determinant = function (a) {\n    return mat3.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @return {clay.Matrix3}\n */\nMatrix3.identity = function (out) {\n    mat3.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.invert = function (out, a) {\n    mat3.invert(out.array, a.array);\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Matrix3} b\n * @return {clay.Matrix3}\n */\nMatrix3.mul = function (out, a, b) {\n    mat3.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Matrix3} b\n * @return {clay.Matrix3}\n */\nMatrix3.multiply = Matrix3.mul;\n\n/**\n * @param  {clay.Matrix3}  out\n * @param  {clay.Matrix2d} a\n * @return {clay.Matrix3}\n */\nMatrix3.fromMat2d = function (out, a) {\n    mat3.fromMat2d(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix3}\n */\nMatrix3.fromMat4 = function (out, a) {\n    mat3.fromMat4(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3}    out\n * @param  {clay.Quaternion} a\n * @return {clay.Matrix3}\n */\nMatrix3.fromQuat = function (out, q) {\n    mat3.fromQuat(out.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix3}\n */\nMatrix3.normalFromMat4 = function (out, a) {\n    mat3.normalFromMat4(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {number}  rad\n * @return {clay.Matrix3}\n */\nMatrix3.rotate = function (out, a, rad) {\n    mat3.rotate(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Vector2} v\n * @return {clay.Matrix3}\n */\nMatrix3.scale = function (out, a, v) {\n    mat3.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.transpose = function (out, a) {\n    mat3.transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Vector2} v\n * @return {clay.Matrix3}\n */\nMatrix3.translate = function (out, a, v) {\n    mat3.translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix3;\n","import Animator from 'zrender/lib/animation/Animator';\nvar animatableMixin = {\n  _animators: null,\n  getAnimators: function () {\n    this._animators = this._animators || [];\n    return this._animators;\n  },\n  animate: function (path, opts) {\n    this._animators = this._animators || [];\n    var el = this;\n    var target;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el;\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (target == null) {\n      throw new Error('Target ' + path + ' not exists');\n    }\n\n    var animators = this._animators;\n    var animator = new Animator(target, opts);\n    var self = this;\n    animator.during(function () {\n      if (self.__zr) {\n        self.__zr.refresh();\n      }\n    }).done(function () {\n      var idx = animators.indexOf(animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    animators.push(animator);\n\n    if (this.__zr) {\n      this.__zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n  stopAnimation: function (forwardToLast) {\n    this._animators = this._animators || [];\n    var animators = this._animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n  addAnimatorsToZr: function (zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.addAnimator(this._animators[i]);\n      }\n    }\n  },\n  removeAnimatorsFromZr: function (zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.removeAnimator(this._animators[i]);\n      }\n    }\n  }\n};\nexport default animatableMixin;","export default \"\\n@export clay.util.rand\\nhighp float rand(vec2 uv) {\\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\\n return fract(sin(sn) * c);\\n}\\n@end\\n@export clay.util.calculate_attenuation\\nuniform float attenuationFactor : 5.0;\\nfloat lightAttenuation(float dist, float range)\\n{\\n float attenuation = 1.0;\\n attenuation = dist*dist/(range*range+1.0);\\n float att_s = attenuationFactor;\\n attenuation = 1.0/(attenuation*att_s+1.0);\\n att_s = 1.0/(att_s+1.0);\\n attenuation = attenuation - att_s;\\n attenuation /= 1.0 - att_s;\\n return clamp(attenuation, 0.0, 1.0);\\n}\\n@end\\n@export clay.util.edge_factor\\n#ifdef SUPPORT_STANDARD_DERIVATIVES\\nfloat edgeFactor(float width)\\n{\\n vec3 d = fwidth(v_Barycentric);\\n vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\\n return min(min(a3.x, a3.y), a3.z);\\n}\\n#else\\nfloat edgeFactor(float width)\\n{\\n return 1.0;\\n}\\n#endif\\n@end\\n@export clay.util.encode_float\\nvec4 encodeFloat(const in float depth)\\n{\\n const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\\n const vec4 bit_mask = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\\n vec4 res = fract(depth * bitShifts);\\n res -= res.xxyz * bit_mask;\\n return res;\\n}\\n@end\\n@export clay.util.decode_float\\nfloat decodeFloat(const in vec4 color)\\n{\\n const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\\n return dot(color, bitShifts);\\n}\\n@end\\n@export clay.util.float\\n@import clay.util.encode_float\\n@import clay.util.decode_float\\n@end\\n@export clay.util.rgbm_decode\\nvec3 RGBMDecode(vec4 rgbm, float range) {\\n return range * rgbm.rgb * rgbm.a;\\n}\\n@end\\n@export clay.util.rgbm_encode\\nvec4 RGBMEncode(vec3 color, float range) {\\n if (dot(color, color) == 0.0) {\\n return vec4(0.0);\\n }\\n vec4 rgbm;\\n color /= range;\\n rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\\n rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\\n rgbm.rgb = color / rgbm.a;\\n return rgbm;\\n}\\n@end\\n@export clay.util.rgbm\\n@import clay.util.rgbm_decode\\n@import clay.util.rgbm_encode\\nvec4 decodeHDR(vec4 color)\\n{\\n#if defined(RGBM_DECODE) || defined(RGBM)\\n return vec4(RGBMDecode(color, 8.12), 1.0);\\n#else\\n return color;\\n#endif\\n}\\nvec4 encodeHDR(vec4 color)\\n{\\n#if defined(RGBM_ENCODE) || defined(RGBM)\\n return RGBMEncode(color.xyz, 8.12);\\n#else\\n return color;\\n#endif\\n}\\n@end\\n@export clay.util.srgb\\nvec4 sRGBToLinear(in vec4 value) {\\n return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\\n}\\nvec4 linearTosRGB(in vec4 value) {\\n return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\\n}\\n@end\\n@export clay.chunk.skinning_header\\n#ifdef SKINNING\\nattribute vec3 weight : WEIGHT;\\nattribute vec4 joint : JOINT;\\n#ifdef USE_SKIN_MATRICES_TEXTURE\\nuniform sampler2D skinMatricesTexture : ignore;\\nuniform float skinMatricesTextureSize: ignore;\\nmat4 getSkinMatrix(sampler2D tex, float idx) {\\n float j = idx * 4.0;\\n float x = mod(j, skinMatricesTextureSize);\\n float y = floor(j / skinMatricesTextureSize) + 0.5;\\n vec2 scale = vec2(skinMatricesTextureSize);\\n return mat4(\\n texture2D(tex, vec2(x + 0.5, y) / scale),\\n texture2D(tex, vec2(x + 1.5, y) / scale),\\n texture2D(tex, vec2(x + 2.5, y) / scale),\\n texture2D(tex, vec2(x + 3.5, y) / scale)\\n );\\n}\\nmat4 getSkinMatrix(float idx) {\\n return getSkinMatrix(skinMatricesTexture, idx);\\n}\\n#else\\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\\nmat4 getSkinMatrix(float idx) {\\n return skinMatrix[int(idx)];\\n}\\n#endif\\n#endif\\n@end\\n@export clay.chunk.skin_matrix\\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\\nif (weight.y > 1e-4)\\n{\\n skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\\n}\\nif (weight.z > 1e-4)\\n{\\n skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\\n}\\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\\nif (weightW > 1e-4)\\n{\\n skinMatrixWS += getSkinMatrix(joint.w) * weightW;\\n}\\n@end\\n@export clay.chunk.instancing_header\\n#ifdef INSTANCING\\nattribute vec4 instanceMat1;\\nattribute vec4 instanceMat2;\\nattribute vec4 instanceMat3;\\n#endif\\n@end\\n@export clay.chunk.instancing_matrix\\nmat4 instanceMat = mat4(\\n vec4(instanceMat1.xyz, 0.0),\\n vec4(instanceMat2.xyz, 0.0),\\n vec4(instanceMat3.xyz, 0.0),\\n vec4(instanceMat1.w, instanceMat2.w, instanceMat3.w, 1.0)\\n);\\n@end\\n@export clay.util.parallax_correct\\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\\n vec3 first = (boxMax - pos) / dir;\\n vec3 second = (boxMin - pos) / dir;\\n vec3 further = max(first, second);\\n float dist = min(further.x, min(further.y, further.z));\\n vec3 fixedPos = pos + dir * dist;\\n vec3 boxCenter = (boxMax + boxMin) * 0.5;\\n return normalize(fixedPos - boxCenter);\\n}\\n@end\\n@export clay.util.clamp_sample\\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\\n{\\n#ifdef STEREO\\n float eye = step(0.5, coord.x) * 0.5;\\n vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\\n#else\\n vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\\n#endif\\n return texture2D(texture, coordClamped);\\n}\\n@end\\n@export clay.util.ACES\\nvec3 ACESToneMapping(vec3 color)\\n{\\n const float A = 2.51;\\n const float B = 0.03;\\n const float C = 2.43;\\n const float D = 0.59;\\n const float E = 0.14;\\n return (color * (A * color + B)) / (color * (C * color + D) + E);\\n}\\n@end\";\n","export default \"\\n@export ecgl.common.transformUniforms\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\\nuniform mat4 world : WORLD;\\n@end\\n\\n@export ecgl.common.attributes\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\nattribute vec3 normal : NORMAL;\\n@end\\n\\n@export ecgl.common.uv.header\\nuniform vec2 uvRepeat : [1.0, 1.0];\\nuniform vec2 uvOffset : [0.0, 0.0];\\nuniform vec2 detailUvRepeat : [1.0, 1.0];\\nuniform vec2 detailUvOffset : [0.0, 0.0];\\n\\nvarying vec2 v_Texcoord;\\nvarying vec2 v_DetailTexcoord;\\n@end\\n\\n@export ecgl.common.uv.main\\nv_Texcoord = texcoord * uvRepeat + uvOffset;\\nv_DetailTexcoord = texcoord * detailUvRepeat + detailUvOffset;\\n@end\\n\\n@export ecgl.common.uv.fragmentHeader\\nvarying vec2 v_Texcoord;\\nvarying vec2 v_DetailTexcoord;\\n@end\\n\\n\\n@export ecgl.common.albedo.main\\n\\n vec4 albedoTexel = vec4(1.0);\\n#ifdef DIFFUSEMAP_ENABLED\\n albedoTexel = texture2D(diffuseMap, v_Texcoord);\\n #ifdef SRGB_DECODE\\n albedoTexel = sRGBToLinear(albedoTexel);\\n #endif\\n#endif\\n\\n#ifdef DETAILMAP_ENABLED\\n vec4 detailTexel = texture2D(detailMap, v_DetailTexcoord);\\n #ifdef SRGB_DECODE\\n detailTexel = sRGBToLinear(detailTexel);\\n #endif\\n albedoTexel.rgb = mix(albedoTexel.rgb, detailTexel.rgb, detailTexel.a);\\n albedoTexel.a = detailTexel.a + (1.0 - detailTexel.a) * albedoTexel.a;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.wireframe.vertexHeader\\n\\n#ifdef WIREFRAME_QUAD\\nattribute vec4 barycentric;\\nvarying vec4 v_Barycentric;\\n#elif defined(WIREFRAME_TRIANGLE)\\nattribute vec3 barycentric;\\nvarying vec3 v_Barycentric;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.wireframe.vertexMain\\n\\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\\n v_Barycentric = barycentric;\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.wireframe.fragmentHeader\\n\\nuniform float wireframeLineWidth : 1;\\nuniform vec4 wireframeLineColor: [0, 0, 0, 0.5];\\n\\n#ifdef WIREFRAME_QUAD\\nvarying vec4 v_Barycentric;\\nfloat edgeFactor () {\\n vec4 d = fwidth(v_Barycentric);\\n vec4 a4 = smoothstep(vec4(0.0), d * wireframeLineWidth, v_Barycentric);\\n return min(min(min(a4.x, a4.y), a4.z), a4.w);\\n}\\n#elif defined(WIREFRAME_TRIANGLE)\\nvarying vec3 v_Barycentric;\\nfloat edgeFactor () {\\n vec3 d = fwidth(v_Barycentric);\\n vec3 a3 = smoothstep(vec3(0.0), d * wireframeLineWidth, v_Barycentric);\\n return min(min(a3.x, a3.y), a3.z);\\n}\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.wireframe.fragmentMain\\n\\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\\n if (wireframeLineWidth > 0.) {\\n vec4 lineColor = wireframeLineColor;\\n#ifdef SRGB_DECODE\\n lineColor = sRGBToLinear(lineColor);\\n#endif\\n\\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor()) * lineColor.a);\\n }\\n#endif\\n@end\\n\\n\\n\\n\\n@export ecgl.common.bumpMap.header\\n\\n#ifdef BUMPMAP_ENABLED\\nuniform sampler2D bumpMap;\\nuniform float bumpScale : 1.0;\\n\\n\\nvec3 bumpNormal(vec3 surfPos, vec3 surfNormal, vec3 baseNormal)\\n{\\n vec2 dSTdx = dFdx(v_Texcoord);\\n vec2 dSTdy = dFdy(v_Texcoord);\\n\\n float Hll = bumpScale * texture2D(bumpMap, v_Texcoord).x;\\n float dHx = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdx).x - Hll;\\n float dHy = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdy).x - Hll;\\n\\n vec3 vSigmaX = dFdx(surfPos);\\n vec3 vSigmaY = dFdy(surfPos);\\n vec3 vN = surfNormal;\\n\\n vec3 R1 = cross(vSigmaY, vN);\\n vec3 R2 = cross(vN, vSigmaX);\\n\\n float fDet = dot(vSigmaX, R1);\\n\\n vec3 vGrad = sign(fDet) * (dHx * R1 + dHy * R2);\\n return normalize(abs(fDet) * baseNormal - vGrad);\\n\\n}\\n#endif\\n\\n@end\\n\\n@export ecgl.common.normalMap.vertexHeader\\n\\n#ifdef NORMALMAP_ENABLED\\nattribute vec4 tangent : TANGENT;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.normalMap.vertexMain\\n\\n#ifdef NORMALMAP_ENABLED\\n if (dot(tangent, tangent) > 0.0) {\\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\\n }\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.normalMap.fragmentHeader\\n\\n#ifdef NORMALMAP_ENABLED\\nuniform sampler2D normalMap;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.normalMap.fragmentMain\\n#ifdef NORMALMAP_ENABLED\\n if (dot(v_Tangent, v_Tangent) > 0.0) {\\n vec3 normalTexel = texture2D(normalMap, v_DetailTexcoord).xyz;\\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\\n N = normalize(tbn * N);\\n }\\n }\\n#endif\\n@end\\n\\n\\n\\n@export ecgl.common.vertexAnimation.header\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nattribute vec3 prevNormal;\\nuniform float percent;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.vertexAnimation.main\\n\\n#ifdef VERTEX_ANIMATION\\n vec3 pos = mix(prevPosition, position, percent);\\n vec3 norm = mix(prevNormal, normal, percent);\\n#else\\n vec3 pos = position;\\n vec3 norm = normal;\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.ssaoMap.header\\n#ifdef SSAOMAP_ENABLED\\nuniform sampler2D ssaoMap;\\nuniform vec4 viewport : VIEWPORT;\\n#endif\\n@end\\n\\n@export ecgl.common.ssaoMap.main\\n float ao = 1.0;\\n#ifdef SSAOMAP_ENABLED\\n ao = texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\\n#endif\\n@end\\n\\n\\n\\n\\n@export ecgl.common.diffuseLayer.header\\n\\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\\nuniform float layerDiffuseIntensity[LAYER_DIFFUSEMAP_COUNT];\\nuniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];\\n#endif\\n\\n@end\\n\\n@export ecgl.common.emissiveLayer.header\\n\\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\\nuniform float layerEmissionIntensity[LAYER_EMISSIVEMAP_COUNT];\\nuniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];\\n#endif\\n\\n@end\\n\\n@export ecgl.common.layers.header\\n@import ecgl.common.diffuseLayer.header\\n@import ecgl.common.emissiveLayer.header\\n@end\\n\\n@export ecgl.common.diffuseLayer.main\\n\\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\\n for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{\\n float intensity = layerDiffuseIntensity[_idx_];\\n vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);\\n #ifdef SRGB_DECODE\\n texel2 = sRGBToLinear(texel2);\\n #endif\\n albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb * intensity, texel2.a);\\n albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;\\n }}\\n#endif\\n\\n@end\\n\\n@export ecgl.common.emissiveLayer.main\\n\\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\\n for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++)\\n {{\\n vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord) * layerEmissionIntensity[_idx_];\\n #ifdef SRGB_DECODE\\n texel2 = sRGBToLinear(texel2);\\n #endif\\n float intensity = layerEmissionIntensity[_idx_];\\n gl_FragColor.rgb += texel2.rgb * texel2.a * intensity;\\n }}\\n#endif\\n\\n@end\\n\";","export default \"@export ecgl.color.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\n@import ecgl.common.uv.header\\n\\nattribute vec2 texcoord : TEXCOORD_0;\\nattribute vec3 position: POSITION;\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nuniform float percent : 1.0;\\n#endif\\n\\n#ifdef ATMOSPHERE_ENABLED\\nattribute vec3 normal: NORMAL;\\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\\nvarying vec3 v_Normal;\\n#endif\\n\\nvoid main()\\n{\\n#ifdef VERTEX_ANIMATION\\n vec3 pos = mix(prevPosition, position, percent);\\n#else\\n vec3 pos = position;\\n#endif\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n @import ecgl.common.uv.main\\n\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n\\n#ifdef ATMOSPHERE_ENABLED\\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\\n#endif\\n\\n @import ecgl.common.wireframe.vertexMain\\n\\n}\\n\\n@end\\n\\n@export ecgl.color.fragment\\n\\n#define LAYER_DIFFUSEMAP_COUNT 0\\n#define LAYER_EMISSIVEMAP_COUNT 0\\n\\nuniform sampler2D diffuseMap;\\nuniform sampler2D detailMap;\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\n#ifdef ATMOSPHERE_ENABLED\\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\\nuniform vec3 glowColor;\\nuniform float glowPower;\\nvarying vec3 v_Normal;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n@import ecgl.common.layers.header\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color);\\n#else\\n gl_FragColor = color;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\n gl_FragColor *= v_Color;\\n#endif\\n\\n @import ecgl.common.albedo.main\\n\\n @import ecgl.common.diffuseLayer.main\\n\\n gl_FragColor *= albedoTexel;\\n\\n#ifdef ATMOSPHERE_ENABLED\\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\\n gl_FragColor.rgb += glowColor * atmoIntensity;\\n#endif\\n\\n @import ecgl.common.emissiveLayer.main\\n\\n @import ecgl.common.wireframe.fragmentMain\\n\\n}\\n@end\";","export default \"/**\\n * http: */\\n\\n@export ecgl.lambert.vertex\\n\\n@import ecgl.common.transformUniforms\\n\\n@import ecgl.common.uv.header\\n\\n\\n@import ecgl.common.attributes\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\n\\n@import ecgl.common.vertexAnimation.header\\n\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nvoid main()\\n{\\n @import ecgl.common.uv.main\\n\\n @import ecgl.common.vertexAnimation.main\\n\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\\n\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n\\n @import ecgl.common.wireframe.vertexMain\\n}\\n\\n@end\\n\\n\\n@export ecgl.lambert.fragment\\n\\n#define LAYER_DIFFUSEMAP_COUNT 0\\n#define LAYER_EMISSIVEMAP_COUNT 0\\n\\n#define NORMAL_UP_AXIS 1\\n#define NORMAL_FRONT_AXIS 2\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform sampler2D diffuseMap;\\nuniform sampler2D detailMap;\\n\\n@import ecgl.common.layers.header\\n\\nuniform float emissionIntensity: 1.0;\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n#ifdef ATMOSPHERE_ENABLED\\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\\nuniform vec3 glowColor;\\nuniform float glowPower;\\n#endif\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n\\n@import ecgl.common.ssaoMap.header\\n\\n@import ecgl.common.bumpMap.header\\n\\n@import clay.util.srgb\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.plugin.compute_shadow_map\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color);\\n#else\\n gl_FragColor = color;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\n #ifdef SRGB_DECODE\\n gl_FragColor *= sRGBToLinear(v_Color);\\n #else\\n gl_FragColor *= v_Color;\\n #endif\\n#endif\\n\\n @import ecgl.common.albedo.main\\n\\n @import ecgl.common.diffuseLayer.main\\n\\n gl_FragColor *= albedoTexel;\\n\\n vec3 N = v_Normal;\\n#ifdef DOUBLE_SIDED\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n#endif\\n\\n float ambientFactor = 1.0;\\n\\n#ifdef BUMPMAP_ENABLED\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n ambientFactor = dot(v_Normal, N);\\n#endif\\n\\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\\n\\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\\n\\n @import ecgl.common.ssaoMap.main\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\\n {\\n diffuseColor += ambientLightColor[i] * ambientFactor * ao;\\n }\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseColor += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\\n }}\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\\n {\\n vec3 lightDirection = -directionalLightDirection[i];\\n vec3 lightColor = directionalLightColor[i];\\n\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if (shadowEnabled)\\n {\\n shadowContrib = shadowContribsDir[i];\\n }\\n#endif\\n\\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\\n\\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0);\\n }\\n#endif\\n\\n gl_FragColor.rgb *= diffuseColor;\\n\\n#ifdef ATMOSPHERE_ENABLED\\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\\n gl_FragColor.rgb += glowColor * atmoIntensity;\\n#endif\\n\\n @import ecgl.common.emissiveLayer.main\\n\\n @import ecgl.common.wireframe.fragmentMain\\n}\\n\\n@end\";","export default \"@export ecgl.realistic.vertex\\n\\n@import ecgl.common.transformUniforms\\n\\n@import ecgl.common.uv.header\\n\\n@import ecgl.common.attributes\\n\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\n#ifdef NORMALMAP_ENABLED\\nattribute vec4 tangent : TANGENT;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\n#endif\\n\\n@import ecgl.common.vertexAnimation.header\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nvoid main()\\n{\\n\\n @import ecgl.common.uv.main\\n\\n @import ecgl.common.vertexAnimation.main\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\\n\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n\\n#ifdef NORMALMAP_ENABLED\\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\\n#endif\\n\\n @import ecgl.common.wireframe.vertexMain\\n\\n}\\n\\n@end\\n\\n\\n\\n@export ecgl.realistic.fragment\\n\\n#define LAYER_DIFFUSEMAP_COUNT 0\\n#define LAYER_EMISSIVEMAP_COUNT 0\\n#define PI 3.14159265358979\\n#define ROUGHNESS_CHANEL 0\\n#define METALNESS_CHANEL 1\\n\\n#define NORMAL_UP_AXIS 1\\n#define NORMAL_FRONT_AXIS 2\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform sampler2D diffuseMap;\\n\\nuniform sampler2D detailMap;\\nuniform sampler2D metalnessMap;\\nuniform sampler2D roughnessMap;\\n\\n@import ecgl.common.layers.header\\n\\nuniform float emissionIntensity: 1.0;\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nuniform float metalness : 0.0;\\nuniform float roughness : 0.5;\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n#ifdef ATMOSPHERE_ENABLED\\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\\nuniform vec3 glowColor;\\nuniform float glowPower;\\n#endif\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n\\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\\n@import clay.header.ambient_cubemap_light\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n@import ecgl.common.normalMap.fragmentHeader\\n\\n@import ecgl.common.ssaoMap.header\\n\\n@import ecgl.common.bumpMap.header\\n\\n@import clay.util.srgb\\n\\n@import clay.util.rgbm\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.plugin.compute_shadow_map\\n\\nvec3 F_Schlick(float ndv, vec3 spec) {\\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\\n}\\n\\nfloat D_Phong(float g, float ndh) {\\n float a = pow(8192.0, g);\\n return (a + 2.0) / 8.0 * pow(ndh, a);\\n}\\n\\nvoid main()\\n{\\n vec4 albedoColor = color;\\n\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n#ifdef VERTEX_COLOR\\n #ifdef SRGB_DECODE\\n albedoColor *= sRGBToLinear(v_Color);\\n #else\\n albedoColor *= v_Color;\\n #endif\\n#endif\\n\\n @import ecgl.common.albedo.main\\n\\n @import ecgl.common.diffuseLayer.main\\n\\n albedoColor *= albedoTexel;\\n\\n float m = metalness;\\n\\n#ifdef METALNESSMAP_ENABLED\\n float m2 = texture2D(metalnessMap, v_DetailTexcoord)[METALNESS_CHANEL];\\n m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\\n#endif\\n\\n vec3 baseColor = albedoColor.rgb;\\n albedoColor.rgb = baseColor * (1.0 - m);\\n vec3 specFactor = mix(vec3(0.04), baseColor, m);\\n\\n float g = 1.0 - roughness;\\n\\n#ifdef ROUGHNESSMAP_ENABLED\\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\\n#endif\\n\\n vec3 N = v_Normal;\\n\\n#ifdef DOUBLE_SIDED\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n#endif\\n\\n float ambientFactor = 1.0;\\n\\n#ifdef BUMPMAP_ENABLED\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n ambientFactor = dot(v_Normal, N);\\n#endif\\n\\n@import ecgl.common.normalMap.fragmentMain\\n\\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\\n\\n vec3 diffuseTerm = vec3(0.0);\\n vec3 specularTerm = vec3(0.0);\\n\\n float ndv = clamp(dot(N, V), 0.0, 1.0);\\n vec3 fresnelTerm = F_Schlick(ndv, specFactor);\\n\\n @import ecgl.common.ssaoMap.main\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseTerm += ambientLightColor[_idx_] * ambientFactor * ao;\\n }}\\n#endif\\n\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseTerm += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\\n }}\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\\n {{\\n vec3 L = -directionalLightDirection[_idx_];\\n vec3 lc = directionalLightColor[_idx_];\\n\\n vec3 H = normalize(L + V);\\n float ndl = clamp(dot(N, normalize(L)), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if (shadowEnabled)\\n {\\n shadowContrib = shadowContribsDir[_idx_];\\n }\\n#endif\\n\\n vec3 li = lc * ndl * shadowContrib;\\n\\n diffuseTerm += li;\\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\\n }}\\n#endif\\n\\n\\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\\n vec3 L = reflect(-V, N);\\n L = vec3(L.x, L[NORMAL_UP_AXIS], L[NORMAL_FRONT_AXIS]);\\n float rough2 = clamp(1.0 - g, 0.0, 1.0);\\n float bias2 = rough2 * 5.0;\\n vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\\n vec3 envWeight2 = specFactor * brdfParam2.x + brdfParam2.y;\\n vec3 envTexel2;\\n for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\\n {{\\n envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 8.12);\\n specularTerm += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2 * ao;\\n }}\\n#endif\\n\\n gl_FragColor.rgb = albedoColor.rgb * diffuseTerm + specularTerm;\\n gl_FragColor.a = albedoColor.a;\\n\\n#ifdef ATMOSPHERE_ENABLED\\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\\n gl_FragColor.rgb += glowColor * atmoIntensity;\\n#endif\\n\\n#ifdef SRGB_ENCODE\\n gl_FragColor = linearTosRGB(gl_FragColor);\\n#endif\\n\\n @import ecgl.common.emissiveLayer.main\\n\\n @import ecgl.common.wireframe.fragmentMain\\n}\\n\\n@end\";","export default \"@export ecgl.hatching.vertex\\n\\n@import ecgl.realistic.vertex\\n\\n@end\\n\\n\\n@export ecgl.hatching.fragment\\n\\n#define NORMAL_UP_AXIS 1\\n#define NORMAL_FRONT_AXIS 2\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform vec4 color : [0.0, 0.0, 0.0, 1.0];\\nuniform vec4 paperColor : [1.0, 1.0, 1.0, 1.0];\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n\\n@import ecgl.common.ssaoMap.header\\n\\n@import ecgl.common.bumpMap.header\\n\\n@import clay.util.srgb\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.plugin.compute_shadow_map\\n\\nuniform sampler2D hatch1;\\nuniform sampler2D hatch2;\\nuniform sampler2D hatch3;\\nuniform sampler2D hatch4;\\nuniform sampler2D hatch5;\\nuniform sampler2D hatch6;\\n\\nfloat shade(in float tone) {\\n vec4 c = vec4(1. ,1., 1., 1.);\\n float step = 1. / 6.;\\n vec2 uv = v_DetailTexcoord;\\n if (tone <= step / 2.0) {\\n c = mix(vec4(0.), texture2D(hatch6, uv), 12. * tone);\\n }\\n else if (tone <= step) {\\n c = mix(texture2D(hatch6, uv), texture2D(hatch5, uv), 6. * tone);\\n }\\n if(tone > step && tone <= 2. * step){\\n c = mix(texture2D(hatch5, uv), texture2D(hatch4, uv) , 6. * (tone - step));\\n }\\n if(tone > 2. * step && tone <= 3. * step){\\n c = mix(texture2D(hatch4, uv), texture2D(hatch3, uv), 6. * (tone - 2. * step));\\n }\\n if(tone > 3. * step && tone <= 4. * step){\\n c = mix(texture2D(hatch3, uv), texture2D(hatch2, uv), 6. * (tone - 3. * step));\\n }\\n if(tone > 4. * step && tone <= 5. * step){\\n c = mix(texture2D(hatch2, uv), texture2D(hatch1, uv), 6. * (tone - 4. * step));\\n }\\n if(tone > 5. * step){\\n c = mix(texture2D(hatch1, uv), vec4(1.), 6. * (tone - 5. * step));\\n }\\n\\n return c.r;\\n}\\n\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n vec4 inkColor = sRGBToLinear(color);\\n#else\\n vec4 inkColor = color;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\n #ifdef SRGB_DECODE\\n inkColor *= sRGBToLinear(v_Color);\\n #else\\n inkColor *= v_Color;\\n #endif\\n#endif\\n\\n vec3 N = v_Normal;\\n#ifdef DOUBLE_SIDED\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n#endif\\n\\n float tone = 0.0;\\n\\n float ambientFactor = 1.0;\\n\\n#ifdef BUMPMAP_ENABLED\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n ambientFactor = dot(v_Normal, N);\\n#endif\\n\\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\\n\\n @import ecgl.common.ssaoMap.main\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\\n {\\n tone += dot(ambientLightColor[i], w) * ambientFactor * ao;\\n }\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n tone += dot(calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_], w) * ao;\\n }}\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\\n {\\n vec3 lightDirection = -directionalLightDirection[i];\\n float lightTone = dot(directionalLightColor[i], w);\\n\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if (shadowEnabled)\\n {\\n shadowContrib = shadowContribsDir[i];\\n }\\n#endif\\n\\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\\n\\n tone += lightTone * clamp(ndl, 0.0, 1.0);\\n }\\n#endif\\n\\n gl_FragColor = mix(inkColor, paperColor, shade(clamp(tone, 0.0, 1.0)));\\n }\\n@end\\n\";","export default \"@export ecgl.sm.depth.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nuniform float percent : 1.0;\\n#endif\\n\\nvarying vec4 v_ViewPosition;\\nvarying vec2 v_Texcoord;\\n\\nvoid main(){\\n\\n#ifdef VERTEX_ANIMATION\\n vec3 pos = mix(prevPosition, position, percent);\\n#else\\n vec3 pos = position;\\n#endif\\n\\n v_ViewPosition = worldViewProjection * vec4(pos, 1.0);\\n gl_Position = v_ViewPosition;\\n\\n v_Texcoord = texcoord;\\n\\n}\\n@end\\n\\n\\n\\n@export ecgl.sm.depth.fragment\\n\\n@import clay.sm.depth.fragment\\n\\n@end\";","import * as echarts from 'echarts/lib/echarts';\nvar GL_SERIES = ['bar3D', 'line3D', 'map3D', 'scatter3D', 'surface', 'lines3D', 'scatterGL', 'scatter3D'];\n\nfunction convertNormalEmphasis(option, optType) {\n  if (option && option[optType] && (option[optType].normal || option[optType].emphasis)) {\n    var normalOpt = option[optType].normal;\n    var emphasisOpt = option[optType].emphasis;\n\n    if (normalOpt) {\n      option[optType] = normalOpt;\n    }\n\n    if (emphasisOpt) {\n      option.emphasis = option.emphasis || {};\n      option.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction convertNormalEmphasisForEach(option) {\n  convertNormalEmphasis(option, 'itemStyle');\n  convertNormalEmphasis(option, 'lineStyle');\n  convertNormalEmphasis(option, 'areaStyle');\n  convertNormalEmphasis(option, 'label');\n}\n\nfunction removeTextStyleInAxis(axesOpt) {\n  if (!axesOpt) {\n    return;\n  }\n\n  if (!(axesOpt instanceof Array)) {\n    axesOpt = [axesOpt];\n  }\n\n  echarts.util.each(axesOpt, function (axisOpt) {\n    if (axisOpt.axisLabel) {\n      var labelOpt = axisOpt.axisLabel;\n      Object.assign(labelOpt, labelOpt.textStyle);\n      labelOpt.textStyle = null;\n    }\n  });\n}\n\nexport default function (option) {\n  echarts.util.each(option.series, function (series) {\n    if (echarts.util.indexOf(GL_SERIES, series.type) >= 0) {\n      convertNormalEmphasisForEach(series); // Compatitable with original mapbox\n\n      if (series.coordinateSystem === 'mapbox') {\n        series.coordinateSystem = 'mapbox3D';\n        option.mapbox3D = option.mapbox;\n      }\n    }\n  });\n  removeTextStyleInAxis(option.xAxis3D);\n  removeTextStyleInAxis(option.yAxis3D);\n  removeTextStyleInAxis(option.zAxis3D);\n  removeTextStyleInAxis(option.grid3D);\n  convertNormalEmphasis(option.geo3D);\n}\n;","import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nvar SurfaceSeries = echarts.SeriesModel.extend({\n  type: 'series.surface',\n  dependencies: ['globe', 'grid3D', 'geo3D'],\n  visualStyleAccessPath: 'itemStyle',\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  getInitialData: function (option, ecModel) {\n    var data = option.data;\n\n    function validateDimension(dimOpts) {\n      return !(isNaN(dimOpts.min) || isNaN(dimOpts.max) || isNaN(dimOpts.step));\n    }\n\n    function getPrecision(dimOpts) {\n      var getPrecision = echarts.number.getPrecisionSafe;\n      return Math.max(getPrecision(dimOpts.min), getPrecision(dimOpts.max), getPrecision(dimOpts.step)) + 1;\n    }\n\n    if (!data) {\n      if (!option.parametric) {\n        // From surface equation\n        var equation = option.equation || {};\n        var xOpts = equation.x || {};\n        var yOpts = equation.y || {};\n        ['x', 'y'].forEach(function (dim) {\n          if (!validateDimension(equation[dim])) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error('Invalid equation.%s', dim);\n            }\n\n            return;\n          }\n        });\n\n        if (typeof equation.z !== 'function') {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error('equation.z needs to be function');\n          }\n\n          return;\n        }\n\n        var xCount = Math.floor((xOpts.max + xOpts.step - xOpts.min) / xOpts.step);\n        var yCount = Math.floor((yOpts.max + yOpts.step - yOpts.min) / yOpts.step);\n        data = new Float32Array(xCount * yCount * 3);\n        var xPrecision = getPrecision(xOpts);\n        var yPrecision = getPrecision(yOpts);\n        var off = 0;\n\n        for (var j = 0; j < yCount; j++) {\n          for (var i = 0; i < xCount; i++) {\n            var x = i * xOpts.step + xOpts.min;\n            var y = j * yOpts.step + yOpts.min;\n            var x2 = echarts.number.round(Math.min(x, xOpts.max), xPrecision);\n            var y2 = echarts.number.round(Math.min(y, yOpts.max), yPrecision);\n            var z = equation.z(x2, y2);\n            data[off++] = x2;\n            data[off++] = y2;\n            data[off++] = z;\n          }\n        }\n      } else {\n        var parametricEquation = option.parametricEquation || {};\n        var uOpts = parametricEquation.u || {};\n        var vOpts = parametricEquation.v || {};\n        ['u', 'v'].forEach(function (dim) {\n          if (!validateDimension(parametricEquation[dim])) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error('Invalid parametricEquation.%s', dim);\n            }\n\n            return;\n          }\n        });\n        ['x', 'y', 'z'].forEach(function (dim) {\n          if (typeof parametricEquation[dim] !== 'function') {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error('parametricEquation.%s needs to be function', dim);\n            }\n\n            return;\n          }\n        });\n        var uCount = Math.floor((uOpts.max + uOpts.step - uOpts.min) / uOpts.step);\n        var vCount = Math.floor((vOpts.max + vOpts.step - vOpts.min) / vOpts.step);\n        data = new Float32Array(uCount * vCount * 5);\n        var uPrecision = getPrecision(uOpts);\n        var vPrecision = getPrecision(vOpts);\n        var off = 0;\n\n        for (var j = 0; j < vCount; j++) {\n          for (var i = 0; i < uCount; i++) {\n            var u = i * uOpts.step + uOpts.min;\n            var v = j * vOpts.step + vOpts.min;\n            var u2 = echarts.number.round(Math.min(u, uOpts.max), uPrecision);\n            var v2 = echarts.number.round(Math.min(v, vOpts.max), vPrecision);\n            var x = parametricEquation.x(u2, v2);\n            var y = parametricEquation.y(u2, v2);\n            var z = parametricEquation.z(u2, v2);\n            data[off++] = x;\n            data[off++] = y;\n            data[off++] = z;\n            data[off++] = u2;\n            data[off++] = v2;\n          }\n        }\n      }\n    }\n\n    var dims = ['x', 'y', 'z'];\n\n    if (option.parametric) {\n      dims.push('u', 'v');\n    } // PENDING getSource?\n\n\n    var list = createList(this, dims, data);\n    return list;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    zlevel: -10,\n    // Cartesian coordinate system\n    grid3DIndex: 0,\n    // Surface needs lambert shading to show the difference\n    shading: 'lambert',\n    // If parametric surface\n    parametric: false,\n    wireframe: {\n      show: true,\n      lineStyle: {\n        color: 'rgba(0,0,0,0.5)',\n        width: 1\n      }\n    },\n\n    /**\n     * Generate surface data from z = f(x, y) equation\n     */\n    equation: {\n      // [min, max, step]\n      x: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      y: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      z: null\n    },\n    parametricEquation: {\n      // [min, max, step]\n      u: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      v: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      // [x, y, z] = f(x, y)\n      x: null,\n      y: null,\n      z: null\n    },\n    // Shape of give data\n    // It is an array to specify rows and columns.\n    // For example [30, 30]\n    dataShape: null,\n    itemStyle: {// Color\n    },\n    animationDurationUpdate: 500\n  }\n});\necharts.util.merge(SurfaceSeries.prototype, componentShadingMixin);\nexport default SurfaceSeries;","export default {\n  defaultOption: {\n    shading: null,\n    realisticMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      detailTexture: null\n    },\n    lambertMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      detailTexture: null\n    },\n    colorMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      detailTexture: null\n    },\n    hatchingMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      paperColor: '#fff'\n    }\n  }\n};","import * as echarts from 'echarts/lib/echarts';\nimport { getItemVisualColor } from '../../util/visual';\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  echarts.util.each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nexport default function (seriesModel, dataIndex, multipleSeries) {\n  function formatArrayValue(value) {\n    var vertially = true;\n    var result = [];\n    var tooltipDims = otherDimToDataDim(data, 'tooltip');\n    tooltipDims.length ? echarts.util.each(tooltipDims, function (dimIdx) {\n      setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n    }) // By default, all dims is used on tooltip.\n    : echarts.util.each(value, setEachItem);\n\n    function setEachItem(val, dimIdx) {\n      var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n      if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n        return;\n      }\n\n      var dimType = dimInfo.type;\n      var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : echarts.format.formatTime('yyyy/MM/dd hh:mm:ss', val) : echarts.format.addCommas(val));\n      valStr && result.push(echarts.format.encodeHTML(valStr));\n    }\n\n    return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n  }\n\n  var data = seriesModel.getData();\n  var value = seriesModel.getRawValue(dataIndex);\n  var formattedValue = echarts.util.isArray(value) ? formatArrayValue(value) : echarts.format.encodeHTML(echarts.format.addCommas(value));\n  var name = data.getName(dataIndex);\n  var color = getItemVisualColor(data, dataIndex);\n\n  if (echarts.util.isObject(color) && color.colorStops) {\n    color = (color.colorStops[0] || {}).color;\n  }\n\n  color = color || 'transparent';\n  var colorEl = echarts.format.getTooltipMarker(color);\n  var seriesName = seriesModel.name; // FIXME\n\n  if (seriesName === '\\0-') {\n    // Not show '-'\n    seriesName = '';\n  }\n\n  seriesName = seriesName ? echarts.format.encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n  return !multipleSeries ? seriesName + colorEl + (name ? echarts.format.encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n}\n;","export function getVisualColor(data) {\n  const style = data.getVisual('style');\n\n  if (style) {\n    const drawType = data.getVisual('drawType');\n    return style[drawType];\n  }\n}\nexport function getVisualOpacity(data) {\n  const style = data.getVisual('style');\n  return style.opacity;\n}\nexport function getItemVisualColor(data, idx) {\n  const style = data.getItemVisual(idx, 'style');\n\n  if (style) {\n    const drawType = data.getVisual('drawType');\n    return style[drawType];\n  }\n}\nexport function getItemVisualOpacity(data, idx) {\n  const style = data.getItemVisual(idx, 'style');\n  return style && style.opacity;\n}","import * as echarts from 'echarts/lib/echarts';\nexport default function (seriesModel, dims, source) {\n  source = source || seriesModel.getSource();\n  var coordSysDimensions = dims || echarts.getCoordinateSystemDimensions(seriesModel.get('coordinateSystem')) || ['x', 'y', 'z'];\n  var dimensions = echarts.helper.createDimensions(source, {\n    dimensionsDefine: source.dimensionsDefine || seriesModel.get('dimensions'),\n    encodeDefine: source.encodeDefine || seriesModel.get('encode'),\n    coordDimensions: coordSysDimensions.map(function (dim) {\n      var axis3DModel = seriesModel.getReferringComponents(dim + 'Axis3D').models[0];\n      return {\n        type: axis3DModel && axis3DModel.get('type') === 'category' ? 'ordinal' : 'float',\n        name: dim // Find stackable dimension. Which will represent value.\n        // stackable: dim === 'z'\n\n      };\n    })\n  });\n\n  if (seriesModel.get('coordinateSystem') === 'cartesian3D') {\n    dimensions.forEach(function (dimInfo) {\n      if (coordSysDimensions.indexOf(dimInfo.coordDim) >= 0) {\n        var axis3DModel = seriesModel.getReferringComponents(dimInfo.coordDim + 'Axis3D').models[0];\n\n        if (axis3DModel && axis3DModel.get('type') === 'category') {\n          dimInfo.ordinalMeta = axis3DModel.getOrdinalMeta();\n        }\n      }\n    });\n  }\n\n  var stackCalculationInfo = echarts.helper.dataStack.enableDataStack( // Only support 'z' and `byIndex` now.\n  seriesModel, dimensions, {\n    byIndex: true,\n    stackedCoordDimension: 'z'\n  });\n  var data = new echarts.List(dimensions, seriesModel);\n  data.setCalculationInfo(stackCalculationInfo);\n  data.initData(source);\n  return data;\n}","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport trianglesSortMixin from '../../util/geometry/trianglesSortMixin';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec3 = glmatrix.vec3;\n\nfunction isPointsNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]) || isNaN(pt[2]);\n}\n\nexport default echarts.ChartView.extend({\n  type: 'surface',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n  },\n  render: function (seriesModel, ecModel, api) {\n    // Swap surfaceMesh\n    var tmp = this._prevSurfaceMesh;\n    this._prevSurfaceMesh = this._surfaceMesh;\n    this._surfaceMesh = tmp;\n\n    if (!this._surfaceMesh) {\n      this._surfaceMesh = this._createSurfaceMesh();\n    }\n\n    this.groupGL.remove(this._prevSurfaceMesh);\n    this.groupGL.add(this._surfaceMesh);\n    var coordSys = seriesModel.coordinateSystem;\n    var shading = seriesModel.get('shading');\n    var data = seriesModel.getData();\n    var shadingPrefix = 'ecgl.' + shading;\n\n    if (!this._surfaceMesh.material || this._surfaceMesh.material.shader.name !== shadingPrefix) {\n      this._surfaceMesh.material = graphicGL.createMaterial(shadingPrefix, ['VERTEX_COLOR', 'DOUBLE_SIDED']);\n    }\n\n    graphicGL.setMaterialFromModel(shading, this._surfaceMesh.material, seriesModel, api);\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n      this._surfaceMesh.material[methodName]('fragment', 'SRGB_DECODE');\n    }\n\n    var isParametric = seriesModel.get('parametric');\n    var dataShape = seriesModel.get('dataShape');\n\n    if (!dataShape) {\n      dataShape = this._getDataShape(data, isParametric);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (seriesModel.get('data')) {\n          console.warn('dataShape is not provided. Guess it is ', dataShape);\n        }\n      }\n    }\n\n    var wireframeModel = seriesModel.getModel('wireframe');\n    var wireframeLineWidth = wireframeModel.get('lineStyle.width');\n    var showWireframe = wireframeModel.get('show') && wireframeLineWidth > 0;\n\n    this._updateSurfaceMesh(this._surfaceMesh, seriesModel, dataShape, showWireframe);\n\n    var material = this._surfaceMesh.material;\n\n    if (showWireframe) {\n      material.define('WIREFRAME_QUAD');\n      material.set('wireframeLineWidth', wireframeLineWidth);\n      material.set('wireframeLineColor', graphicGL.parseColor(wireframeModel.get('lineStyle.color')));\n    } else {\n      material.undefine('WIREFRAME_QUAD');\n    }\n\n    this._initHandler(seriesModel, api);\n\n    this._updateAnimation(seriesModel);\n  },\n  _updateAnimation: function (seriesModel) {\n    graphicGL.updateVertexAnimation([['prevPosition', 'position'], ['prevNormal', 'normal']], this._prevSurfaceMesh, this._surfaceMesh, seriesModel);\n  },\n  _createSurfaceMesh: function () {\n    var mesh = new graphicGL.Mesh({\n      geometry: new graphicGL.Geometry({\n        dynamic: true,\n        sortTriangles: true\n      }),\n      shadowDepthMaterial: new graphicGL.Material({\n        shader: new graphicGL.Shader(graphicGL.Shader.source('ecgl.sm.depth.vertex'), graphicGL.Shader.source('ecgl.sm.depth.fragment'))\n      }),\n      culling: false,\n      // Render after axes\n      renderOrder: 10,\n      // Render normal in normal pass\n      renderNormal: true\n    });\n    mesh.geometry.createAttribute('barycentric', 'float', 4);\n    mesh.geometry.createAttribute('prevPosition', 'float', 3);\n    mesh.geometry.createAttribute('prevNormal', 'float', 3);\n    Object.assign(mesh.geometry, trianglesSortMixin);\n    return mesh;\n  },\n  _initHandler: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var surfaceMesh = this._surfaceMesh;\n    var coordSys = seriesModel.coordinateSystem;\n\n    function getNearestPointIdx(triangle, point) {\n      var nearestDist = Infinity;\n      var nearestIdx = -1;\n      var pos = [];\n\n      for (var i = 0; i < triangle.length; i++) {\n        surfaceMesh.geometry.attributes.position.get(triangle[i], pos);\n        var dist = vec3.dist(point.array, pos);\n\n        if (dist < nearestDist) {\n          nearestDist = dist;\n          nearestIdx = triangle[i];\n        }\n      }\n\n      return nearestIdx;\n    }\n\n    surfaceMesh.seriesIndex = seriesModel.seriesIndex;\n    var lastDataIndex = -1;\n    surfaceMesh.off('mousemove');\n    surfaceMesh.off('mouseout');\n    surfaceMesh.on('mousemove', function (e) {\n      var idx = getNearestPointIdx(e.triangle, e.point);\n\n      if (idx >= 0) {\n        var point = [];\n        surfaceMesh.geometry.attributes.position.get(idx, point);\n        var value = coordSys.pointToData(point);\n        var minDist = Infinity;\n        var dataIndex = -1;\n        var item = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          item[0] = data.get('x', i);\n          item[1] = data.get('y', i);\n          item[2] = data.get('z', i);\n          var dist = vec3.squaredDistance(item, value);\n\n          if (dist < minDist) {\n            dataIndex = i;\n            minDist = dist;\n          }\n        }\n\n        if (dataIndex !== lastDataIndex) {\n          api.dispatchAction({\n            type: 'grid3DShowAxisPointer',\n            value: value\n          });\n        }\n\n        lastDataIndex = dataIndex;\n        surfaceMesh.dataIndex = dataIndex;\n      } else {\n        surfaceMesh.dataIndex = -1;\n      }\n    }, this);\n    surfaceMesh.on('mouseout', function (e) {\n      lastDataIndex = -1;\n      surfaceMesh.dataIndex = -1;\n      api.dispatchAction({\n        type: 'grid3DHideAxisPointer'\n      });\n    }, this);\n  },\n  _updateSurfaceMesh: function (surfaceMesh, seriesModel, dataShape, showWireframe) {\n    var geometry = surfaceMesh.geometry;\n    var data = seriesModel.getData();\n    var pointsArr = data.getLayout('points');\n    var invalidDataCount = 0;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        invalidDataCount++;\n      }\n    });\n    var needsSplitQuad = invalidDataCount || showWireframe;\n    var positionAttr = geometry.attributes.position;\n    var normalAttr = geometry.attributes.normal;\n    var texcoordAttr = geometry.attributes.texcoord0;\n    var barycentricAttr = geometry.attributes.barycentric;\n    var colorAttr = geometry.attributes.color;\n    var row = dataShape[0];\n    var column = dataShape[1];\n    var shading = seriesModel.get('shading');\n    var needsNormal = shading !== 'color';\n\n    if (needsSplitQuad) {\n      // TODO, If needs remove the invalid points, or set color transparent.\n      var vertexCount = (row - 1) * (column - 1) * 4;\n      positionAttr.init(vertexCount);\n\n      if (showWireframe) {\n        barycentricAttr.init(vertexCount);\n      }\n    } else {\n      positionAttr.value = new Float32Array(pointsArr);\n    }\n\n    colorAttr.init(geometry.vertexCount);\n    texcoordAttr.init(geometry.vertexCount);\n    var quadToTriangle = [0, 3, 1, 1, 3, 2]; // 3----2\n    // 0----1\n    // Make sure pixels on 1---3 edge will not have channel 0.\n    // And pixels on four edges have at least one channel 0.\n\n    var quadBarycentric = [[1, 1, 0, 0], [0, 1, 0, 1], [1, 0, 0, 1], [1, 0, 1, 0]];\n    var indices = geometry.indices = new (geometry.vertexCount > 0xffff ? Uint32Array : Uint16Array)((row - 1) * (column - 1) * 6);\n\n    var getQuadIndices = function (i, j, out) {\n      out[1] = i * column + j;\n      out[0] = i * column + j + 1;\n      out[3] = (i + 1) * column + j + 1;\n      out[2] = (i + 1) * column + j;\n    };\n\n    var isTransparent = false;\n\n    if (needsSplitQuad) {\n      var quadIndices = [];\n      var pos = [];\n      var faceOffset = 0;\n\n      if (needsNormal) {\n        normalAttr.init(geometry.vertexCount);\n      } else {\n        normalAttr.value = null;\n      }\n\n      var pts = [[], [], []];\n      var v21 = [],\n          v32 = [];\n      var normal = vec3.create();\n\n      var getFromArray = function (arr, idx, out) {\n        var idx3 = idx * 3;\n        out[0] = arr[idx3];\n        out[1] = arr[idx3 + 1];\n        out[2] = arr[idx3 + 2];\n        return out;\n      };\n\n      var vertexNormals = new Float32Array(pointsArr.length);\n      var vertexColors = new Float32Array(pointsArr.length / 3 * 4);\n\n      for (var i = 0; i < data.count(); i++) {\n        if (data.hasValue(i)) {\n          var rgbaArr = graphicGL.parseColor(getItemVisualColor(data, i));\n          var opacity = getItemVisualOpacity(data, i);\n          opacity != null && (rgbaArr[3] *= opacity);\n\n          if (rgbaArr[3] < 0.99) {\n            isTransparent = true;\n          }\n\n          for (var k = 0; k < 4; k++) {\n            vertexColors[i * 4 + k] = rgbaArr[k];\n          }\n        }\n      }\n\n      var farPoints = [1e7, 1e7, 1e7];\n\n      for (var i = 0; i < row - 1; i++) {\n        for (var j = 0; j < column - 1; j++) {\n          var dataIndex = i * (column - 1) + j;\n          var vertexOffset = dataIndex * 4;\n          getQuadIndices(i, j, quadIndices);\n          var invisibleQuad = false;\n\n          for (var k = 0; k < 4; k++) {\n            getFromArray(pointsArr, quadIndices[k], pos);\n\n            if (isPointsNaN(pos)) {\n              // Quad is invisible if any point is NaN\n              invisibleQuad = true;\n            }\n          }\n\n          for (var k = 0; k < 4; k++) {\n            if (invisibleQuad) {\n              // Move point far away\n              positionAttr.set(vertexOffset + k, farPoints);\n            } else {\n              getFromArray(pointsArr, quadIndices[k], pos);\n              positionAttr.set(vertexOffset + k, pos);\n            }\n\n            if (showWireframe) {\n              barycentricAttr.set(vertexOffset + k, quadBarycentric[k]);\n            }\n          }\n\n          for (var k = 0; k < 6; k++) {\n            indices[faceOffset++] = quadToTriangle[k] + vertexOffset;\n          } // Vertex normals\n\n\n          if (needsNormal && !invisibleQuad) {\n            for (var k = 0; k < 2; k++) {\n              var k3 = k * 3;\n\n              for (var m = 0; m < 3; m++) {\n                var idx = quadIndices[quadToTriangle[k3] + m];\n                getFromArray(pointsArr, idx, pts[m]);\n              }\n\n              vec3.sub(v21, pts[0], pts[1]);\n              vec3.sub(v32, pts[1], pts[2]);\n              vec3.cross(normal, v21, v32); // Weighted by the triangle area\n\n              for (var m = 0; m < 3; m++) {\n                var idx3 = quadIndices[quadToTriangle[k3] + m] * 3;\n                vertexNormals[idx3] = vertexNormals[idx3] + normal[0];\n                vertexNormals[idx3 + 1] = vertexNormals[idx3 + 1] + normal[1];\n                vertexNormals[idx3 + 2] = vertexNormals[idx3 + 2] + normal[2];\n              }\n            }\n          }\n        }\n      }\n\n      if (needsNormal) {\n        for (var i = 0; i < vertexNormals.length / 3; i++) {\n          getFromArray(vertexNormals, i, normal);\n          vec3.normalize(normal, normal);\n          vertexNormals[i * 3] = normal[0];\n          vertexNormals[i * 3 + 1] = normal[1];\n          vertexNormals[i * 3 + 2] = normal[2];\n        }\n      } // Split normal and colors, write to the attributes.\n\n\n      var rgbaArr = [];\n      var uvArr = [];\n\n      for (var i = 0; i < row - 1; i++) {\n        for (var j = 0; j < column - 1; j++) {\n          var dataIndex = i * (column - 1) + j;\n          var vertexOffset = dataIndex * 4;\n          getQuadIndices(i, j, quadIndices);\n\n          for (var k = 0; k < 4; k++) {\n            for (var m = 0; m < 4; m++) {\n              rgbaArr[m] = vertexColors[quadIndices[k] * 4 + m];\n            }\n\n            colorAttr.set(vertexOffset + k, rgbaArr);\n\n            if (needsNormal) {\n              getFromArray(vertexNormals, quadIndices[k], normal);\n              normalAttr.set(vertexOffset + k, normal);\n            }\n\n            var idx = quadIndices[k];\n            uvArr[0] = idx % column / (column - 1);\n            uvArr[1] = Math.floor(idx / column) / (row - 1);\n            texcoordAttr.set(vertexOffset + k, uvArr);\n          }\n\n          dataIndex++;\n        }\n      }\n    } else {\n      var uvArr = [];\n\n      for (var i = 0; i < data.count(); i++) {\n        uvArr[0] = i % column / (column - 1);\n        uvArr[1] = Math.floor(i / column) / (row - 1);\n        var rgbaArr = graphicGL.parseColor(getItemVisualColor(data, i));\n        var opacity = getItemVisualOpacity(data, i);\n        opacity != null && (rgbaArr[3] *= opacity);\n\n        if (rgbaArr[3] < 0.99) {\n          isTransparent = true;\n        }\n\n        colorAttr.set(i, rgbaArr);\n        texcoordAttr.set(i, uvArr);\n      }\n\n      var quadIndices = []; // Triangles\n\n      var cursor = 0;\n\n      for (var i = 0; i < row - 1; i++) {\n        for (var j = 0; j < column - 1; j++) {\n          getQuadIndices(i, j, quadIndices);\n\n          for (var k = 0; k < 6; k++) {\n            indices[cursor++] = quadIndices[quadToTriangle[k]];\n          }\n        }\n      }\n\n      if (needsNormal) {\n        geometry.generateVertexNormals();\n      } else {\n        normalAttr.value = null;\n      }\n    }\n\n    if (surfaceMesh.material.get('normalMap')) {\n      geometry.generateTangents();\n    }\n\n    geometry.updateBoundingBox();\n    geometry.dirty();\n    surfaceMesh.material.transparent = isTransparent;\n    surfaceMesh.material.depthMask = !isTransparent;\n  },\n  _getDataShape: function (data, isParametric) {\n    var prevX = -Infinity;\n    var rowCount = 0;\n    var columnCount = 0;\n    var prevColumnCount = 0;\n    var mayInvalid = false;\n    var rowDim = isParametric ? 'u' : 'x';\n    var dataCount = data.count(); // Check data format\n\n    for (var i = 0; i < dataCount; i++) {\n      var x = data.get(rowDim, i);\n\n      if (x < prevX) {\n        if (prevColumnCount && prevColumnCount !== columnCount) {\n          if (process.env.NODE_ENV !== 'production') {\n            mayInvalid = true;\n          }\n        } // A new row.\n\n\n        prevColumnCount = columnCount;\n        columnCount = 0;\n        rowCount++;\n      }\n\n      prevX = x;\n      columnCount++;\n    }\n\n    if (!rowCount || columnCount === 1) {\n      mayInvalid = true;\n    }\n\n    if (!mayInvalid) {\n      return [rowCount + 1, columnCount];\n    }\n\n    var rows = Math.floor(Math.sqrt(dataCount));\n\n    while (rows > 0) {\n      if (Math.floor(dataCount / rows) === dataCount / rows) {\n        // Can be divided\n        return [rows, dataCount / rows];\n      }\n\n      rows--;\n    } // Bailout\n\n\n    rows = Math.floor(Math.sqrt(dataCount));\n    return [rows, rows];\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});","// DEPRECATED\nimport glmatrix from '../glmatrix';\n\nexport default glmatrix;\n","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.2.2\n */\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport vec2 from './vec2';\nimport vec3 from './vec3';\nimport vec4 from './vec4';\nimport mat2 from './mat2';\nimport mat2d from './mat2d';\nimport mat3 from './mat3';\nimport mat4 from './mat4';\nimport quat from './quat';\n\nexport default {\n    vec2: vec2,\n    vec3: vec3,\n    vec4: vec4,\n    mat2: mat2,\n    mat2d: mat2d,\n    mat3: mat3,\n    mat4: mat4,\n    quat: quat\n};\n","import ProgressiveQuickSort from '../ProgressiveQuickSort';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar p0 = vec3.create();\nvar p1 = vec3.create();\nvar p2 = vec3.create(); // var cp = vec3.create();\n\nexport default {\n  needsSortTriangles: function () {\n    return this.indices && this.sortTriangles;\n  },\n  needsSortTrianglesProgressively: function () {\n    return this.needsSortTriangles() && this.triangleCount >= 2e4;\n  },\n  doSortTriangles: function (cameraPos, frame) {\n    var indices = this.indices; // Do progressive quick sort.\n\n    if (frame === 0) {\n      var posAttr = this.attributes.position;\n      var cameraPos = cameraPos.array;\n\n      if (!this._triangleZList || this._triangleZList.length !== this.triangleCount) {\n        this._triangleZList = new Float32Array(this.triangleCount);\n        this._sortedTriangleIndices = new Uint32Array(this.triangleCount);\n        this._indicesTmp = new indices.constructor(indices.length);\n        this._triangleZListTmp = new Float32Array(this.triangleCount);\n      }\n\n      var cursor = 0;\n      var firstZ;\n\n      for (var i = 0; i < indices.length;) {\n        posAttr.get(indices[i++], p0);\n        posAttr.get(indices[i++], p1);\n        posAttr.get(indices[i++], p2); // FIXME If use center ?\n        // cp[0] = (p0[0] + p1[0] + p2[0]) / 3;\n        // cp[1] = (p0[1] + p1[1] + p2[1]) / 3;\n        // cp[2] = (p0[2] + p1[2] + p2[2]) / 3;\n        // Camera position is in object space\n        // Use max of three points, PENDING\n\n        var z0 = vec3.sqrDist(p0, cameraPos);\n        var z1 = vec3.sqrDist(p1, cameraPos);\n        var z2 = vec3.sqrDist(p2, cameraPos);\n        var zMax = Math.min(z0, z1);\n        zMax = Math.min(zMax, z2);\n\n        if (i === 3) {\n          firstZ = zMax;\n          zMax = 0;\n        } else {\n          // Only store the difference to avoid the precision issue.\n          zMax = zMax - firstZ;\n        }\n\n        this._triangleZList[cursor++] = zMax;\n      }\n    }\n\n    var sortedTriangleIndices = this._sortedTriangleIndices;\n\n    for (var i = 0; i < sortedTriangleIndices.length; i++) {\n      sortedTriangleIndices[i] = i;\n    }\n\n    if (this.triangleCount < 2e4) {\n      // Use simple timsort for simple geometries.\n      if (frame === 0) {\n        // Use native sort temporary.\n        this._simpleSort(true);\n      }\n    } else {\n      for (var i = 0; i < 3; i++) {\n        this._progressiveQuickSort(frame * 3 + i);\n      }\n    }\n\n    var targetIndices = this._indicesTmp;\n    var targetTriangleZList = this._triangleZListTmp;\n    var faceZList = this._triangleZList;\n\n    for (var i = 0; i < this.triangleCount; i++) {\n      var fromIdx3 = sortedTriangleIndices[i] * 3;\n      var toIdx3 = i * 3;\n      targetIndices[toIdx3++] = indices[fromIdx3++];\n      targetIndices[toIdx3++] = indices[fromIdx3++];\n      targetIndices[toIdx3] = indices[fromIdx3];\n      targetTriangleZList[i] = faceZList[sortedTriangleIndices[i]];\n    } // Swap indices.\n\n\n    var tmp = this._indicesTmp;\n    this._indicesTmp = this.indices;\n    this.indices = tmp;\n    var tmp = this._triangleZListTmp;\n    this._triangleZListTmp = this._triangleZList;\n    this._triangleZList = tmp;\n    this.dirtyIndices();\n  },\n  _simpleSort: function (useNativeQuickSort) {\n    var faceZList = this._triangleZList;\n    var sortedTriangleIndices = this._sortedTriangleIndices;\n\n    function compare(a, b) {\n      // Sort from far to near. which is descending order\n      return faceZList[b] - faceZList[a];\n    }\n\n    if (useNativeQuickSort) {\n      Array.prototype.sort.call(sortedTriangleIndices, compare);\n    } else {\n      ProgressiveQuickSort.sort(sortedTriangleIndices, compare, 0, sortedTriangleIndices.length - 1);\n    }\n  },\n  _progressiveQuickSort: function (frame) {\n    var faceZList = this._triangleZList;\n    var sortedTriangleIndices = this._sortedTriangleIndices;\n    this._quickSort = this._quickSort || new ProgressiveQuickSort();\n\n    this._quickSort.step(sortedTriangleIndices, function (a, b) {\n      return faceZList[b] - faceZList[a];\n    }, frame);\n  }\n};","function swap(arr, a, b) {\n  var tmp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = tmp;\n}\n\nfunction partition(arr, pivot, left, right, compare) {\n  var storeIndex = left;\n  var pivotValue = arr[pivot]; // put the pivot on the right\n\n  swap(arr, pivot, right); // go through the rest\n\n  for (var v = left; v < right; v++) {\n    if (compare(arr[v], pivotValue) < 0) {\n      swap(arr, v, storeIndex);\n      storeIndex++;\n    }\n  } // finally put the pivot in the correct place\n\n\n  swap(arr, right, storeIndex);\n  return storeIndex;\n}\n\nfunction quickSort(array, compare, left, right) {\n  if (left < right) {\n    var pivot = Math.floor((left + right) / 2);\n    var newPivot = partition(array, pivot, left, right, compare);\n    quickSort(array, compare, left, newPivot - 1);\n    quickSort(array, compare, newPivot + 1, right);\n  }\n} // TODO Test.\n\n\nfunction ProgressiveQuickSort() {\n  // this._pivotList = new LinkedList();\n  this._parts = [];\n}\n\nProgressiveQuickSort.prototype.step = function (arr, compare, frame) {\n  var len = arr.length;\n\n  if (frame === 0) {\n    this._parts = [];\n    this._sorted = false; // Pick a start pivot;\n\n    var pivot = Math.floor(len / 2);\n\n    this._parts.push({\n      pivot: pivot,\n      left: 0,\n      right: len - 1\n    });\n\n    this._currentSortPartIdx = 0;\n  }\n\n  if (this._sorted) {\n    return;\n  }\n\n  var parts = this._parts;\n\n  if (parts.length === 0) {\n    this._sorted = true; // Already finished.\n\n    return true;\n  } else if (parts.length < 512) {\n    // Sort large parts in about 10 frames.\n    for (var i = 0; i < parts.length; i++) {\n      // Partition and Modify the pivot index.\n      parts[i].pivot = partition(arr, parts[i].pivot, parts[i].left, parts[i].right, compare);\n    }\n\n    var subdividedParts = [];\n\n    for (var i = 0; i < parts.length; i++) {\n      // Subdivide left\n      var left = parts[i].left;\n      var right = parts[i].pivot - 1;\n\n      if (right > left) {\n        subdividedParts.push({\n          pivot: Math.floor((right + left) / 2),\n          left: left,\n          right: right\n        });\n      } // Subdivide right\n\n\n      var left = parts[i].pivot + 1;\n      var right = parts[i].right;\n\n      if (right > left) {\n        subdividedParts.push({\n          pivot: Math.floor((right + left) / 2),\n          left: left,\n          right: right\n        });\n      }\n    }\n\n    parts = this._parts = subdividedParts;\n  } else {\n    // console.time('sort');\n    // Finally quick sort each parts in 10 frames.\n    for (var i = 0; i < Math.floor(parts.length / 10); i++) {\n      // Sort near parts first.\n      var idx = parts.length - 1 - this._currentSortPartIdx;\n      quickSort(arr, compare, parts[idx].left, parts[idx].right);\n      this._currentSortPartIdx++; // Finish sort\n\n      if (this._currentSortPartIdx === parts.length) {\n        this._sorted = true;\n        return true;\n      }\n    } // console.timeEnd('sort');\n\n  }\n\n  return false;\n};\n\nProgressiveQuickSort.sort = quickSort;\nexport default ProgressiveQuickSort;","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Grid3DModel from './Grid3DModel';\nimport Grid3DView from './Grid3DView';\nimport grid3DCreator from '../../coord/grid3DCreator';\nimport Axis3DModel from './Axis3DModel';\nimport createAxis3DModel from './createAxis3DModel';\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nexport function install(registers) {\n  registers.registerComponentModel(Grid3DModel);\n  registers.registerComponentView(Grid3DView);\n  registers.registerCoordinateSystem('grid3D', grid3DCreator);\n  ['x', 'y', 'z'].forEach(function (dim) {\n    createAxis3DModel(registers, dim, Axis3DModel, getAxisType, {\n      name: dim.toUpperCase()\n    });\n    const AxisView = registers.ComponentView.extend({\n      type: dim + 'Axis3D'\n    });\n    registers.registerComponentView(AxisView);\n  });\n  registers.registerAction({\n    type: 'grid3DChangeCamera',\n    event: 'grid3dcamerachanged',\n    update: 'series:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'grid3D',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n  registers.registerAction({\n    type: 'grid3DShowAxisPointer',\n    event: 'grid3dshowaxispointer',\n    update: 'grid3D:showAxisPointer'\n  }, function (payload, ecModel) {});\n  registers.registerAction({\n    type: 'grid3DHideAxisPointer',\n    event: 'grid3dhideaxispointer',\n    update: 'grid3D:hideAxisPointer'\n  }, function (payload, ecModel) {});\n}","import * as echarts from 'echarts/lib/echarts';\nimport componentViewControlMixin from '../common/componentViewControlMixin';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar Grid3DModel = echarts.ComponentModel.extend({\n  type: 'grid3D',\n  dependencies: ['xAxis3D', 'yAxis3D', 'zAxis3D'],\n  defaultOption: {\n    show: true,\n    zlevel: -10,\n    // Layout used for viewport\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    environment: 'auto',\n    // Dimension of grid3D\n    boxWidth: 100,\n    boxHeight: 100,\n    boxDepth: 100,\n    // Common axis options.\n    axisPointer: {\n      show: true,\n      lineStyle: {\n        color: 'rgba(0, 0, 0, 0.8)',\n        width: 1\n      },\n      label: {\n        show: true,\n        // (dimValue: number, value: Array) => string\n        formatter: null,\n        // TODO, Consider boxWidth\n        margin: 8,\n        // backgroundColor: '#ffbd67',\n        // borderColor: '#000',\n        // borderWidth: 0,\n        textStyle: {\n          fontSize: 14,\n          color: '#fff',\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          padding: 3,\n          borderRadius: 3\n        }\n      }\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        color: '#333',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    axisTick: {\n      show: true,\n      inside: false,\n      length: 3,\n      lineStyle: {\n        width: 1\n      }\n    },\n    axisLabel: {\n      show: true,\n      inside: false,\n      rotate: 0,\n      margin: 8,\n      textStyle: {\n        fontSize: 12\n      }\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: ['#ccc'],\n        width: 1,\n        type: 'solid'\n      }\n    },\n    splitArea: {\n      show: false,\n      areaStyle: {\n        color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n      }\n    },\n    // Light options\n    light: {\n      main: {\n        // Alpha angle for top-down rotation\n        // Positive to rotate to top.\n        alpha: 30,\n        // beta angle for left-right rotation\n        // Positive to rotate to right.\n        beta: 40\n      },\n      ambient: {\n        intensity: 0.4\n      }\n    },\n    viewControl: {\n      // Small damping for precise control.\n      // damping: 0.1,\n      // Alpha angle for top-down rotation\n      // Positive to rotate to top.\n      alpha: 20,\n      // beta angle for left-right rotation\n      // Positive to rotate to right.\n      beta: 40,\n      autoRotate: false,\n      // Distance to the surface of grid3D.\n      distance: 200,\n      // Min distance to the surface of grid3D\n      minDistance: 40,\n      // Max distance to the surface of grid3D\n      maxDistance: 400\n    }\n  }\n});\necharts.util.merge(Grid3DModel.prototype, componentViewControlMixin);\necharts.util.merge(Grid3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Grid3DModel.prototype, componentLightMixin);\nexport default Grid3DModel;","export default {\n  defaultOption: {\n    viewControl: {\n      // perspective, orthographic.\n      // TODO Isometric\n      projection: 'perspective',\n      // If rotate on on init\n      autoRotate: false,\n      // cw or ccw\n      autoRotateDirection: 'cw',\n      // Degree per second\n      autoRotateSpeed: 10,\n      // Start rotating after still for a given time\n      // default is 3 seconds\n      autoRotateAfterStill: 3,\n      // Rotate, zoom damping.\n      damping: 0.8,\n      // Sensitivities for operations.\n      // Can be array to set x,y respectively\n      rotateSensitivity: 1,\n      zoomSensitivity: 1,\n      // Can be array to set x,y respectively\n      panSensitivity: 1,\n      // Which mouse button do rotate or pan\n      panMouseButton: 'middle',\n      rotateMouseButton: 'left',\n      // Distance to the target\n      // Only available when camera is perspective.\n      distance: 150,\n      // Min distance mouse can zoom in\n      minDistance: 40,\n      // Max distance mouse can zoom out\n      maxDistance: 400,\n      // Size of viewing volume.\n      // Only available when camera is orthographic\n      orthographicSize: 150,\n      maxOrthographicSize: 400,\n      minOrthographicSize: 20,\n      // Center view point\n      center: [0, 0, 0],\n      // Alpha angle for top-down rotation\n      // Positive to rotate to top.\n      alpha: 0,\n      // beta angle for left-right rotation\n      // Positive to rotate to right.\n      beta: 0,\n      minAlpha: -90,\n      maxAlpha: 90 // minBeta: -Infinity\n      // maxBeta: -Infinity\n\n    }\n  },\n  setView: function (opts) {\n    opts = opts || {};\n    this.option.viewControl = this.option.viewControl || {};\n\n    if (opts.alpha != null) {\n      this.option.viewControl.alpha = opts.alpha;\n    }\n\n    if (opts.beta != null) {\n      this.option.viewControl.beta = opts.beta;\n    }\n\n    if (opts.distance != null) {\n      this.option.viewControl.distance = opts.distance;\n    }\n\n    if (opts.center != null) {\n      this.option.viewControl.center = opts.center;\n    }\n  }\n};","export default {\n  defaultOption: {\n    // Post effect\n    postEffect: {\n      enable: false,\n      bloom: {\n        enable: true,\n        intensity: 0.1\n      },\n      depthOfField: {\n        enable: false,\n        focalRange: 20,\n        focalDistance: 50,\n        blurRadius: 10,\n        fstop: 2.8,\n        quality: 'medium'\n      },\n      screenSpaceAmbientOcclusion: {\n        enable: false,\n        radius: 2,\n        // low, medium, high, ultra\n        quality: 'medium',\n        intensity: 1\n      },\n      screenSpaceReflection: {\n        enable: false,\n        quality: 'medium',\n        maxRoughness: 0.8\n      },\n      colorCorrection: {\n        enable: true,\n        exposure: 0,\n        brightness: 0,\n        contrast: 1,\n        saturation: 1,\n        lookupTexture: ''\n      },\n      edge: {\n        enable: false\n      },\n      FXAA: {\n        enable: false\n      }\n    },\n    // Temporal super sampling when the picture is still.\n    temporalSuperSampling: {\n      // Only enabled when postEffect is enabled\n      enable: 'auto'\n    }\n  }\n};","export default {\n  defaultOption: {\n    // Light is available when material.shading is not color\n    light: {\n      // Main light\n      main: {\n        shadow: false,\n        // low, medium, high, ultra\n        shadowQuality: 'high',\n        color: '#fff',\n        intensity: 1,\n        alpha: 0,\n        beta: 0\n      },\n      ambient: {\n        color: '#fff',\n        intensity: 0.2\n      },\n      ambientCubemap: {\n        // Panorama environment texture,\n        // Support .hdr and commmon web formats.\n        texture: null,\n        // Available when texture is hdr.\n        exposure: 1,\n        // Intensity for diffuse term\n        diffuseIntensity: 0.5,\n        // Intensity for specular term, only available when shading is realastic\n        specularIntensity: 0.5\n      }\n    }\n  }\n};","// TODO orthographic camera\nimport * as echarts from 'echarts/lib/echarts';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nimport graphicGL from '../../util/graphicGL';\nimport OrbitControl from '../../util/OrbitControl';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport retrieve from '../../util/retrieve';\nvar firstNotNull = retrieve.firstNotNull;\nimport ZRTextureAtlasSurface from '../../util/ZRTextureAtlasSurface';\nimport SceneHelper from '../common/SceneHelper';\nimport Grid3DFace from './Grid3DFace';\nimport Grid3DAxis from './Grid3DAxis';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nimport lines3DGLSL from '../../util/shader/lines3D.glsl.js';\ngraphicGL.Shader.import(lines3DGLSL);\nvar dimIndicesMap = {\n  // Left to right\n  x: 0,\n  // Far to near\n  y: 2,\n  // Bottom to up\n  z: 1\n};\nexport default echarts.ComponentView.extend({\n  type: 'grid3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    var FACES = [// planeDim0, planeDim1, offsetDim, dir on dim3 axis(gl), plane.\n    ['y', 'z', 'x', -1, 'left'], ['y', 'z', 'x', 1, 'right'], ['x', 'y', 'z', -1, 'bottom'], ['x', 'y', 'z', 1, 'top'], ['x', 'z', 'y', -1, 'far'], ['x', 'z', 'y', 1, 'near']];\n    var DIMS = ['x', 'y', 'z'];\n    var quadsMaterial = new graphicGL.Material({\n      // transparent: true,\n      shader: graphicGL.createShader('ecgl.color'),\n      depthMask: false,\n      transparent: true\n    });\n    var linesMaterial = new graphicGL.Material({\n      // transparent: true,\n      shader: graphicGL.createShader('ecgl.meshLines3D'),\n      depthMask: false,\n      transparent: true\n    });\n    quadsMaterial.define('fragment', 'DOUBLE_SIDED');\n    quadsMaterial.define('both', 'VERTEX_COLOR');\n    this.groupGL = new graphicGL.Node();\n    this._control = new OrbitControl({\n      zr: api.getZr()\n    });\n\n    this._control.init(); // Save mesh and other infos for each face.\n\n\n    this._faces = FACES.map(function (faceInfo) {\n      var face = new Grid3DFace(faceInfo, linesMaterial, quadsMaterial);\n      this.groupGL.add(face.rootNode);\n      return face;\n    }, this); // Save mesh and other infos for each axis.\n\n    this._axes = DIMS.map(function (dim) {\n      var axis = new Grid3DAxis(dim, linesMaterial);\n      this.groupGL.add(axis.rootNode);\n      return axis;\n    }, this);\n    var dpr = api.getDevicePixelRatio(); // Texture surface for label.\n\n    this._axisLabelSurface = new ZRTextureAtlasSurface({\n      width: 256,\n      height: 256,\n      devicePixelRatio: dpr\n    });\n\n    this._axisLabelSurface.onupdate = function () {\n      api.getZr().refresh();\n    };\n\n    this._axisPointerLineMesh = new graphicGL.Mesh({\n      geometry: new Lines3DGeometry({\n        useNativeLine: false\n      }),\n      material: linesMaterial,\n      castShadow: false,\n      // PENDING\n      ignorePicking: true,\n      renderOrder: 3\n    });\n    this.groupGL.add(this._axisPointerLineMesh);\n    this._axisPointerLabelsSurface = new ZRTextureAtlasSurface({\n      width: 128,\n      height: 128,\n      devicePixelRatio: dpr\n    });\n    this._axisPointerLabelsMesh = new LabelsMesh({\n      ignorePicking: true,\n      renderOrder: 4,\n      castShadow: false\n    });\n\n    this._axisPointerLabelsMesh.material.set('textureAtlas', this._axisPointerLabelsSurface.getTexture());\n\n    this.groupGL.add(this._axisPointerLabelsMesh);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper();\n\n    this._sceneHelper.initLight(this._lightRoot);\n  },\n  render: function (grid3DModel, ecModel, api) {\n    this._model = grid3DModel;\n    this._api = api;\n    var cartesian = grid3DModel.coordinateSystem; // Always have light.\n\n    cartesian.viewGL.add(this._lightRoot);\n\n    if (grid3DModel.get('show')) {\n      cartesian.viewGL.add(this.groupGL);\n    } else {\n      cartesian.viewGL.remove(this.groupGL);\n    } // cartesian.viewGL.setCameraType(grid3DModel.get('viewControl.projection'));\n\n\n    var control = this._control;\n    control.setViewGL(cartesian.viewGL);\n    var viewControlModel = grid3DModel.getModel('viewControl');\n    control.setFromViewControlModel(viewControlModel, 0);\n\n    this._axisLabelSurface.clear();\n\n    control.off('update');\n\n    if (grid3DModel.get('show')) {\n      this._faces.forEach(function (face) {\n        face.update(grid3DModel, ecModel, api);\n      }, this);\n\n      this._axes.forEach(function (axis) {\n        axis.update(grid3DModel, this._axisLabelSurface, api);\n      }, this);\n    }\n\n    control.on('update', this._onCameraChange.bind(this, grid3DModel, api), this);\n\n    this._sceneHelper.setScene(cartesian.viewGL.scene);\n\n    this._sceneHelper.updateLight(grid3DModel); // Set post effect\n\n\n    cartesian.viewGL.setPostEffect(grid3DModel.getModel('postEffect'), api);\n    cartesian.viewGL.setTemporalSuperSampling(grid3DModel.getModel('temporalSuperSampling'));\n\n    this._initMouseHandler(grid3DModel);\n  },\n  afterRender: function (grid3DModel, ecModel, api, layerGL) {\n    // Create ambient cubemap after render because we need to know the renderer.\n    // TODO\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, grid3DModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, grid3DModel, api);\n  },\n\n  /**\n   * showAxisPointer will be triggered by action.\n   */\n  showAxisPointer: function (grid3dModel, ecModel, api, payload) {\n    this._doShowAxisPointer();\n\n    this._updateAxisPointer(payload.value);\n  },\n\n  /**\n   * hideAxisPointer will be triggered by action.\n   */\n  hideAxisPointer: function (grid3dModel, ecModel, api, payload) {\n    this._doHideAxisPointer();\n  },\n  _initMouseHandler: function (grid3DModel) {\n    var cartesian = grid3DModel.coordinateSystem;\n    var viewGL = cartesian.viewGL; // TODO xAxis3D.axisPointer.show ?\n\n    if (grid3DModel.get('show') && grid3DModel.get('axisPointer.show')) {\n      viewGL.on('mousemove', this._updateAxisPointerOnMousePosition, this);\n    } else {\n      viewGL.off('mousemove', this._updateAxisPointerOnMousePosition);\n    }\n  },\n\n  /**\n   * Try find and show axisPointer on the intersect point\n   * of mouse ray with grid plane.\n   */\n  _updateAxisPointerOnMousePosition: function (e) {\n    // Ignore if mouse is on the element.\n    if (e.target) {\n      return;\n    }\n\n    var grid3DModel = this._model;\n    var cartesian = grid3DModel.coordinateSystem;\n    var viewGL = cartesian.viewGL;\n    var ray = viewGL.castRay(e.offsetX, e.offsetY, new graphicGL.Ray());\n    var nearestIntersectPoint;\n\n    for (var i = 0; i < this._faces.length; i++) {\n      var face = this._faces[i];\n\n      if (face.rootNode.invisible) {\n        continue;\n      } // Plane is not face the camera. flip it\n\n\n      if (face.plane.normal.dot(viewGL.camera.worldTransform.z) < 0) {\n        face.plane.normal.negate();\n      }\n\n      var point = ray.intersectPlane(face.plane);\n\n      if (!point) {\n        continue;\n      }\n\n      var axis0 = cartesian.getAxis(face.faceInfo[0]);\n      var axis1 = cartesian.getAxis(face.faceInfo[1]);\n      var idx0 = dimIndicesMap[face.faceInfo[0]];\n      var idx1 = dimIndicesMap[face.faceInfo[1]];\n\n      if (axis0.contain(point.array[idx0]) && axis1.contain(point.array[idx1])) {\n        nearestIntersectPoint = point;\n      }\n    }\n\n    if (nearestIntersectPoint) {\n      var data = cartesian.pointToData(nearestIntersectPoint.array, [], true);\n\n      this._updateAxisPointer(data);\n\n      this._doShowAxisPointer();\n    } else {\n      this._doHideAxisPointer();\n    }\n  },\n  _onCameraChange: function (grid3DModel, api) {\n    if (grid3DModel.get('show')) {\n      this._updateFaceVisibility();\n\n      this._updateAxisLinePosition();\n    }\n\n    var control = this._control;\n    api.dispatchAction({\n      type: 'grid3DChangeCamera',\n      alpha: control.getAlpha(),\n      beta: control.getBeta(),\n      distance: control.getDistance(),\n      center: control.getCenter(),\n      from: this.uid,\n      grid3DId: grid3DModel.id\n    });\n  },\n\n  /**\n   * Update visibility of each face when camera view changed, front face will be invisible.\n   * @private\n   */\n  _updateFaceVisibility: function () {\n    var camera = this._control.getCamera();\n\n    var viewSpacePos = new graphicGL.Vector3();\n    camera.update();\n\n    for (var idx = 0; idx < this._faces.length / 2; idx++) {\n      var depths = [];\n\n      for (var k = 0; k < 2; k++) {\n        var face = this._faces[idx * 2 + k];\n        face.rootNode.getWorldPosition(viewSpacePos);\n        viewSpacePos.transformMat4(camera.viewMatrix);\n        depths[k] = viewSpacePos.z;\n      } // Set the front face invisible\n\n\n      var frontIndex = depths[0] > depths[1] ? 0 : 1;\n      var frontFace = this._faces[idx * 2 + frontIndex];\n      var backFace = this._faces[idx * 2 + 1 - frontIndex]; // Update rotation.\n\n      frontFace.rootNode.invisible = true;\n      backFace.rootNode.invisible = false;\n    }\n  },\n\n  /**\n   * Update axis line position when camera view changed.\n   * @private\n   */\n  _updateAxisLinePosition: function () {\n    // Put xAxis, yAxis on x, y visible plane.\n    // Put zAxis on the left.\n    // TODO\n    var cartesian = this._model.coordinateSystem;\n    var xAxis = cartesian.getAxis('x');\n    var yAxis = cartesian.getAxis('y');\n    var zAxis = cartesian.getAxis('z');\n    var top = zAxis.getExtentMax();\n    var bottom = zAxis.getExtentMin();\n    var left = xAxis.getExtentMin();\n    var right = xAxis.getExtentMax();\n    var near = yAxis.getExtentMax();\n    var far = yAxis.getExtentMin();\n    var xAxisNode = this._axes[0].rootNode;\n    var yAxisNode = this._axes[1].rootNode;\n    var zAxisNode = this._axes[2].rootNode;\n    var faces = this._faces; // Notice: in cartesian up axis is z, but in webgl up axis is y.\n\n    var xAxisZOffset = faces[4].rootNode.invisible ? far : near;\n    var xAxisYOffset = faces[2].rootNode.invisible ? top : bottom;\n    var yAxisXOffset = faces[0].rootNode.invisible ? left : right;\n    var yAxisYOffset = faces[2].rootNode.invisible ? top : bottom;\n    var zAxisXOffset = faces[0].rootNode.invisible ? right : left;\n    var zAxisZOffset = faces[4].rootNode.invisible ? far : near;\n    xAxisNode.rotation.identity();\n    yAxisNode.rotation.identity();\n    zAxisNode.rotation.identity();\n\n    if (faces[4].rootNode.invisible) {\n      this._axes[0].flipped = true;\n      xAxisNode.rotation.rotateX(Math.PI);\n    }\n\n    if (faces[0].rootNode.invisible) {\n      this._axes[1].flipped = true;\n      yAxisNode.rotation.rotateZ(Math.PI);\n    }\n\n    if (faces[4].rootNode.invisible) {\n      this._axes[2].flipped = true;\n      zAxisNode.rotation.rotateY(Math.PI);\n    }\n\n    xAxisNode.position.set(0, xAxisYOffset, xAxisZOffset);\n    yAxisNode.position.set(yAxisXOffset, yAxisYOffset, 0); // Actually z\n\n    zAxisNode.position.set(zAxisXOffset, 0, zAxisZOffset); // Actually y\n\n    xAxisNode.update();\n    yAxisNode.update();\n    zAxisNode.update();\n\n    this._updateAxisLabelAlign();\n  },\n\n  /**\n   * Update label align on axis when axisLine position changed.\n   * @private\n   */\n  _updateAxisLabelAlign: function () {\n    // var cartesian = this._model.coordinateSystem;\n    var camera = this._control.getCamera();\n\n    var coords = [new graphicGL.Vector4(), new graphicGL.Vector4()];\n    var center = new graphicGL.Vector4();\n    this.groupGL.getWorldPosition(center);\n    center.w = 1.0;\n    center.transformMat4(camera.viewMatrix).transformMat4(camera.projectionMatrix);\n    center.x /= center.w;\n    center.y /= center.w;\n\n    this._axes.forEach(function (axisInfo) {\n      var lineCoords = axisInfo.axisLineCoords;\n      var labelGeo = axisInfo.labelsMesh.geometry;\n\n      for (var i = 0; i < coords.length; i++) {\n        coords[i].setArray(lineCoords[i]);\n        coords[i].w = 1.0;\n        coords[i].transformMat4(axisInfo.rootNode.worldTransform).transformMat4(camera.viewMatrix).transformMat4(camera.projectionMatrix);\n        coords[i].x /= coords[i].w;\n        coords[i].y /= coords[i].w;\n      }\n\n      var dx = coords[1].x - coords[0].x;\n      var dy = coords[1].y - coords[0].y;\n      var cx = (coords[1].x + coords[0].x) / 2;\n      var cy = (coords[1].y + coords[0].y) / 2;\n      var textAlign;\n      var verticalAlign;\n\n      if (Math.abs(dy / dx) < 0.5) {\n        textAlign = 'center';\n        verticalAlign = cy > center.y ? 'bottom' : 'top';\n      } else {\n        verticalAlign = 'middle';\n        textAlign = cx > center.x ? 'left' : 'right';\n      } // axis labels\n\n\n      axisInfo.setSpriteAlign(textAlign, verticalAlign, this._api);\n    }, this);\n  },\n  _doShowAxisPointer: function () {\n    if (!this._axisPointerLineMesh.invisible) {\n      return;\n    }\n\n    this._axisPointerLineMesh.invisible = false;\n    this._axisPointerLabelsMesh.invisible = false;\n\n    this._api.getZr().refresh();\n  },\n  _doHideAxisPointer: function () {\n    if (this._axisPointerLineMesh.invisible) {\n      return;\n    }\n\n    this._axisPointerLineMesh.invisible = true;\n    this._axisPointerLabelsMesh.invisible = true;\n\n    this._api.getZr().refresh();\n  },\n\n  /**\n   * @private updateAxisPointer.\n   */\n  _updateAxisPointer: function (data) {\n    var cartesian = this._model.coordinateSystem;\n    var point = cartesian.dataToPoint(data);\n    var axisPointerLineMesh = this._axisPointerLineMesh;\n    var linesGeo = axisPointerLineMesh.geometry;\n\n    var axisPointerParentModel = this._model.getModel('axisPointer');\n\n    var dpr = this._api.getDevicePixelRatio();\n\n    linesGeo.convertToDynamicArray(true);\n\n    function ifShowAxisPointer(axis) {\n      return retrieve.firstNotNull(axis.model.get('axisPointer.show'), axisPointerParentModel.get('show'));\n    }\n\n    function getAxisColorAndLineWidth(axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', axisPointerParentModel);\n      var lineStyleModel = axisPointerModel.getModel('lineStyle');\n      var color = graphicGL.parseColor(lineStyleModel.get('color'));\n      var lineWidth = firstNotNull(lineStyleModel.get('width'), 1);\n      var opacity = firstNotNull(lineStyleModel.get('opacity'), 1);\n      color[3] *= opacity;\n      return {\n        color: color,\n        lineWidth: lineWidth\n      };\n    }\n\n    for (var k = 0; k < this._faces.length; k++) {\n      var face = this._faces[k];\n\n      if (face.rootNode.invisible) {\n        continue;\n      }\n\n      var faceInfo = face.faceInfo;\n      var otherCoord = faceInfo[3] < 0 ? cartesian.getAxis(faceInfo[2]).getExtentMin() : cartesian.getAxis(faceInfo[2]).getExtentMax();\n      var otherDimIdx = dimIndicesMap[faceInfo[2]]; // Line on face.\n\n      for (var i = 0; i < 2; i++) {\n        var dim = faceInfo[i];\n        var faceOtherDim = faceInfo[1 - i];\n        var axis = cartesian.getAxis(dim);\n        var faceOtherAxis = cartesian.getAxis(faceOtherDim);\n\n        if (!ifShowAxisPointer(axis)) {\n          continue;\n        }\n\n        var p0 = [0, 0, 0];\n        var p1 = [0, 0, 0];\n        var dimIdx = dimIndicesMap[dim];\n        var faceOtherDimIdx = dimIndicesMap[faceOtherDim];\n        p0[dimIdx] = p1[dimIdx] = point[dimIdx];\n        p0[otherDimIdx] = p1[otherDimIdx] = otherCoord;\n        p0[faceOtherDimIdx] = faceOtherAxis.getExtentMin();\n        p1[faceOtherDimIdx] = faceOtherAxis.getExtentMax();\n        var colorAndLineWidth = getAxisColorAndLineWidth(axis);\n        linesGeo.addLine(p0, p1, colorAndLineWidth.color, colorAndLineWidth.lineWidth * dpr);\n      } // Project line.\n\n\n      if (ifShowAxisPointer(cartesian.getAxis(faceInfo[2]))) {\n        var p0 = point.slice();\n        var p1 = point.slice();\n        p1[otherDimIdx] = otherCoord;\n        var colorAndLineWidth = getAxisColorAndLineWidth(cartesian.getAxis(faceInfo[2]));\n        linesGeo.addLine(p0, p1, colorAndLineWidth.color, colorAndLineWidth.lineWidth * dpr);\n      }\n    }\n\n    linesGeo.convertToTypedArray();\n\n    this._updateAxisPointerLabelsMesh(data);\n\n    this._api.getZr().refresh();\n  },\n  _updateAxisPointerLabelsMesh: function (data) {\n    var grid3dModel = this._model;\n    var axisPointerLabelsMesh = this._axisPointerLabelsMesh;\n    var axisPointerLabelsSurface = this._axisPointerLabelsSurface;\n    var cartesian = grid3dModel.coordinateSystem;\n    var axisPointerParentModel = grid3dModel.getModel('axisPointer');\n    axisPointerLabelsMesh.geometry.convertToDynamicArray(true);\n    axisPointerLabelsSurface.clear();\n    var otherDim = {\n      x: 'y',\n      y: 'x',\n      z: 'y'\n    };\n\n    this._axes.forEach(function (axisInfo, idx) {\n      var axis = cartesian.getAxis(axisInfo.dim);\n      var axisModel = axis.model;\n      var axisPointerModel = axisModel.getModel('axisPointer', axisPointerParentModel);\n      var labelModel = axisPointerModel.getModel('label');\n      var lineColor = axisPointerModel.get('lineStyle.color');\n\n      if (!labelModel.get('show') || !axisPointerModel.get('show')) {\n        return;\n      }\n\n      var val = data[idx];\n      var formatter = labelModel.get('formatter');\n      var text = axis.scale.getLabel({\n        value: val\n      });\n\n      if (formatter != null) {\n        text = formatter(text, data);\n      } else {\n        if (axis.scale.type === 'interval' || axis.scale.type === 'log') {\n          var precision = echarts.number.getPrecisionSafe(axis.scale.getTicks()[0]);\n          text = val.toFixed(precision + 2);\n        }\n      }\n\n      var labelColor = labelModel.get('color');\n      var textEl = new echarts.graphic.Text({\n        style: createTextStyle(labelModel, {\n          text: text,\n          fill: labelColor || lineColor,\n          align: 'left',\n          verticalAlign: 'top'\n        })\n      });\n      var coords = axisPointerLabelsSurface.add(textEl);\n      var rect = textEl.getBoundingRect();\n\n      var dpr = this._api.getDevicePixelRatio();\n\n      var pos = axisInfo.rootNode.position.toArray();\n      var otherIdx = dimIndicesMap[otherDim[axisInfo.dim]];\n      pos[otherIdx] += (axisInfo.flipped ? -1 : 1) * labelModel.get('margin');\n      pos[dimIndicesMap[axisInfo.dim]] = axis.dataToCoord(data[idx]);\n      axisPointerLabelsMesh.geometry.addSprite(pos, [rect.width * dpr, rect.height * dpr], coords, axisInfo.textAlign, axisInfo.textVerticalAlign);\n    }, this);\n\n    axisPointerLabelsSurface.getZr().refreshImmediately();\n    axisPointerLabelsMesh.material.set('uvScale', axisPointerLabelsSurface.getCoordsScale());\n    axisPointerLabelsMesh.geometry.convertToTypedArray();\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n\n    this._control.dispose();\n\n    this._axisLabelSurface.dispose();\n\n    this._axisPointerLabelsSurface.dispose();\n  }\n});","/**\n * Provide orbit control for 3D objects\n *\n * @module echarts-gl/util/OrbitControl\n * @author Yi Shen(http://github.com/pissang)\n */\n// TODO Remove magic numbers on sensitivity\nimport Base from 'claygl/src/core/Base';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Quaternion from 'claygl/src/math/Quaternion';\nimport retrieve from './retrieve';\nvar firstNotNull = retrieve.firstNotNull;\nvar MOUSE_BUTTON_KEY_MAP = {\n  left: 0,\n  middle: 1,\n  right: 2\n};\n\nfunction convertToArray(val) {\n  if (!(val instanceof Array)) {\n    val = [val, val];\n  }\n\n  return val;\n}\n/**\n * @alias module:echarts-x/util/OrbitControl\n */\n\n\nvar OrbitControl = Base.extend(function () {\n  return {\n    /**\n     * @type {module:zrender~ZRender}\n     */\n    zr: null,\n\n    /**\n     * @type {module:echarts-gl/core/ViewGL}\n     */\n    viewGL: null,\n\n    /**\n     * @type {clay.math.Vector3}\n     */\n    _center: new Vector3(),\n\n    /**\n     * Minimum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 0.5\n     */\n    minDistance: 0.5,\n\n    /**\n     * Maximum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 2\n     */\n    maxDistance: 1.5,\n\n    /**\n     * Only available when camera is orthographic\n     */\n    maxOrthographicSize: 300,\n\n    /**\n     * Only available when camera is orthographic\n     */\n    minOrthographicSize: 30,\n\n    /**\n     * Minimum alpha rotation\n     */\n    minAlpha: -90,\n\n    /**\n     * Maximum alpha rotation\n     */\n    maxAlpha: 90,\n\n    /**\n     * Minimum beta rotation\n     */\n    minBeta: -Infinity,\n\n    /**\n     * Maximum beta rotation\n     */\n    maxBeta: Infinity,\n\n    /**\n     * Start auto rotating after still for the given time\n     */\n    autoRotateAfterStill: 0,\n\n    /**\n     * Direction of autoRotate. cw or ccw when looking top down.\n     */\n    autoRotateDirection: 'cw',\n\n    /**\n     * Degree per second\n     */\n    autoRotateSpeed: 60,\n\n    /**\n     * @param {number}\n     */\n    damping: 0.8,\n\n    /**\n     * @param {number}\n     */\n    rotateSensitivity: 1,\n\n    /**\n     * @param {number}\n     */\n    zoomSensitivity: 1,\n\n    /**\n     * @param {number}\n     */\n    panSensitivity: 1,\n    panMouseButton: 'middle',\n    rotateMouseButton: 'left',\n\n    /**\n     * Pan or rotate\n     * @private\n     * @type {String}\n     */\n    _mode: 'rotate',\n\n    /**\n     * @private\n     * @type {clay.Camera}\n     */\n    _camera: null,\n    _needsUpdate: false,\n    _rotating: false,\n    // Rotation around yAxis in radian\n    _phi: 0,\n    // Rotation around xAxis in radian\n    _theta: 0,\n    _mouseX: 0,\n    _mouseY: 0,\n    _rotateVelocity: new Vector2(),\n    _panVelocity: new Vector2(),\n    _distance: 500,\n    _zoomSpeed: 0,\n    _stillTimeout: 0,\n    _animators: []\n  };\n}, function () {\n  // Each OrbitControl has it's own handler\n  ['_mouseDownHandler', '_mouseWheelHandler', '_mouseMoveHandler', '_mouseUpHandler', '_pinchHandler', '_contextMenuHandler', '_update'].forEach(function (hdlName) {\n    this[hdlName] = this[hdlName].bind(this);\n  }, this);\n}, {\n  /**\n   * Initialize.\n   * Mouse event binding\n   */\n  init: function () {\n    var zr = this.zr;\n\n    if (zr) {\n      zr.on('mousedown', this._mouseDownHandler);\n      zr.on('globalout', this._mouseUpHandler);\n      zr.on('mousewheel', this._mouseWheelHandler);\n      zr.on('pinch', this._pinchHandler);\n      zr.animation.on('frame', this._update);\n      zr.dom.addEventListener('contextmenu', this._contextMenuHandler);\n    }\n  },\n\n  /**\n   * Dispose.\n   * Mouse event unbinding\n   */\n  dispose: function () {\n    var zr = this.zr;\n\n    if (zr) {\n      zr.off('mousedown', this._mouseDownHandler);\n      zr.off('mousemove', this._mouseMoveHandler);\n      zr.off('mouseup', this._mouseUpHandler);\n      zr.off('mousewheel', this._mouseWheelHandler);\n      zr.off('pinch', this._pinchHandler);\n      zr.off('globalout', this._mouseUpHandler);\n      zr.dom.removeEventListener('contextmenu', this._contextMenuHandler);\n      zr.animation.off('frame', this._update);\n    }\n\n    this.stopAllAnimation();\n  },\n\n  /**\n   * Get distance\n   * @return {number}\n   */\n  getDistance: function () {\n    return this._distance;\n  },\n\n  /**\n   * Set distance\n   * @param {number} distance\n   */\n  setDistance: function (distance) {\n    this._distance = distance;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Get size of orthographic viewing volume\n   * @return {number}\n   */\n  getOrthographicSize: function () {\n    return this._orthoSize;\n  },\n\n  /**\n   * Set size of orthographic viewing volume\n   * @param {number} size\n   */\n  setOrthographicSize: function (size) {\n    this._orthoSize = size;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Get alpha rotation\n   * Alpha angle for top-down rotation. Positive to rotate to top.\n   *\n   * Which means camera rotation around x axis.\n   */\n  getAlpha: function () {\n    return this._theta / Math.PI * 180;\n  },\n\n  /**\n   * Get beta rotation\n   * Beta angle for left-right rotation. Positive to rotate to right.\n   *\n   * Which means camera rotation around y axis.\n   */\n  getBeta: function () {\n    return -this._phi / Math.PI * 180;\n  },\n\n  /**\n   * Get control center\n   * @return {Array.<number>}\n   */\n  getCenter: function () {\n    return this._center.toArray();\n  },\n\n  /**\n   * Set alpha rotation angle\n   * @param {number} alpha\n   */\n  setAlpha: function (alpha) {\n    alpha = Math.max(Math.min(this.maxAlpha, alpha), this.minAlpha);\n    this._theta = alpha / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Set beta rotation angle\n   * @param {number} beta\n   */\n  setBeta: function (beta) {\n    beta = Math.max(Math.min(this.maxBeta, beta), this.minBeta);\n    this._phi = -beta / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Set control center\n   * @param {Array.<number>} center\n   */\n  setCenter: function (centerArr) {\n    this._center.setArray(centerArr);\n  },\n\n  /**\n   * @param {module:echarts-gl/core/ViewGL} viewGL\n   */\n  setViewGL: function (viewGL) {\n    this.viewGL = viewGL;\n  },\n\n  /**\n   * @return {clay.Camera}\n   */\n  getCamera: function () {\n    return this.viewGL.camera;\n  },\n  setFromViewControlModel: function (viewControlModel, extraOpts) {\n    extraOpts = extraOpts || {};\n    var baseDistance = extraOpts.baseDistance || 0;\n    var baseOrthoSize = extraOpts.baseOrthoSize || 1;\n    var projection = viewControlModel.get('projection');\n\n    if (projection !== 'perspective' && projection !== 'orthographic' && projection !== 'isometric') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Unkown projection type %s, use perspective projection instead.', projection);\n      }\n\n      projection = 'perspective';\n    }\n\n    this._projection = projection;\n    this.viewGL.setProjection(projection);\n    var targetDistance = viewControlModel.get('distance') + baseDistance;\n    var targetOrthographicSize = viewControlModel.get('orthographicSize') + baseOrthoSize;\n    [['damping', 0.8], ['autoRotate', false], ['autoRotateAfterStill', 3], ['autoRotateDirection', 'cw'], ['autoRotateSpeed', 10], ['minDistance', 30], ['maxDistance', 400], ['minOrthographicSize', 30], ['maxOrthographicSize', 300], ['minAlpha', -90], ['maxAlpha', 90], ['minBeta', -Infinity], ['maxBeta', Infinity], ['rotateSensitivity', 1], ['zoomSensitivity', 1], ['panSensitivity', 1], ['panMouseButton', 'left'], ['rotateMouseButton', 'middle']].forEach(function (prop) {\n      this[prop[0]] = firstNotNull(viewControlModel.get(prop[0]), prop[1]);\n    }, this);\n    this.minDistance += baseDistance;\n    this.maxDistance += baseDistance;\n    this.minOrthographicSize += baseOrthoSize, this.maxOrthographicSize += baseOrthoSize;\n    var ecModel = viewControlModel.ecModel;\n    var animationOpts = {};\n    ['animation', 'animationDurationUpdate', 'animationEasingUpdate'].forEach(function (key) {\n      animationOpts[key] = firstNotNull(viewControlModel.get(key), ecModel && ecModel.get(key));\n    });\n    var alpha = firstNotNull(extraOpts.alpha, viewControlModel.get('alpha')) || 0;\n    var beta = firstNotNull(extraOpts.beta, viewControlModel.get('beta')) || 0;\n    var center = firstNotNull(extraOpts.center, viewControlModel.get('center')) || [0, 0, 0];\n\n    if (animationOpts.animation && animationOpts.animationDurationUpdate > 0 && this._notFirst) {\n      this.animateTo({\n        alpha: alpha,\n        beta: beta,\n        center: center,\n        distance: targetDistance,\n        orthographicSize: targetOrthographicSize,\n        easing: animationOpts.animationEasingUpdate,\n        duration: animationOpts.animationDurationUpdate\n      });\n    } else {\n      this.setDistance(targetDistance);\n      this.setAlpha(alpha);\n      this.setBeta(beta);\n      this.setCenter(center);\n      this.setOrthographicSize(targetOrthographicSize);\n    }\n\n    this._notFirst = true;\n\n    this._validateProperties();\n  },\n  _validateProperties: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (MOUSE_BUTTON_KEY_MAP[this.panMouseButton] == null) {\n        console.error('Unkown panMouseButton %s. It should be left|middle|right', this.panMouseButton);\n      }\n\n      if (MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton] == null) {\n        console.error('Unkown rotateMouseButton %s. It should be left|middle|right', this.rotateMouseButton);\n      }\n\n      if (this.autoRotateDirection !== 'cw' && this.autoRotateDirection !== 'ccw') {\n        console.error('Unkown autoRotateDirection %s. It should be cw|ccw', this.autoRotateDirection);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} opts\n   * @param {number} opts.distance\n   * @param {number} opts.alpha\n   * @param {number} opts.beta\n   * @param {number} opts.orthographicSize\n   * @param {number} [opts.duration=1000]\n   * @param {number} [opts.easing='linear']\n   */\n  animateTo: function (opts) {\n    var zr = this.zr;\n    var self = this;\n    var obj = {};\n    var target = {};\n\n    if (opts.distance != null) {\n      obj.distance = this.getDistance();\n      target.distance = opts.distance;\n    }\n\n    if (opts.orthographicSize != null) {\n      obj.orthographicSize = this.getOrthographicSize();\n      target.orthographicSize = opts.orthographicSize;\n    }\n\n    if (opts.alpha != null) {\n      obj.alpha = this.getAlpha();\n      target.alpha = opts.alpha;\n    }\n\n    if (opts.beta != null) {\n      obj.beta = this.getBeta();\n      target.beta = opts.beta;\n    }\n\n    if (opts.center != null) {\n      obj.center = this.getCenter();\n      target.center = opts.center;\n    }\n\n    return this._addAnimator(zr.animation.animate(obj).when(opts.duration || 1000, target).during(function () {\n      if (obj.alpha != null) {\n        self.setAlpha(obj.alpha);\n      }\n\n      if (obj.beta != null) {\n        self.setBeta(obj.beta);\n      }\n\n      if (obj.distance != null) {\n        self.setDistance(obj.distance);\n      }\n\n      if (obj.center != null) {\n        self.setCenter(obj.center);\n      }\n\n      if (obj.orthographicSize != null) {\n        self.setOrthographicSize(obj.orthographicSize);\n      }\n\n      self._needsUpdate = true;\n    })).start(opts.easing || 'linear');\n  },\n\n  /**\n   * Stop all animation\n   */\n  stopAllAnimation: function () {\n    for (var i = 0; i < this._animators.length; i++) {\n      this._animators[i].stop();\n    }\n\n    this._animators.length = 0;\n  },\n  update: function () {\n    this._needsUpdate = true;\n\n    this._update(20);\n  },\n  _isAnimating: function () {\n    return this._animators.length > 0;\n  },\n\n  /**\n   * Call update each frame\n   * @param  {number} deltaTime Frame time\n   */\n  _update: function (deltaTime) {\n    if (this._rotating) {\n      var radian = (this.autoRotateDirection === 'cw' ? 1 : -1) * this.autoRotateSpeed / 180 * Math.PI;\n      this._phi -= radian * deltaTime / 1000;\n      this._needsUpdate = true;\n    } else if (this._rotateVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n\n    if (Math.abs(this._zoomSpeed) > 0.1 || this._panVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n\n    if (!this._needsUpdate) {\n      return;\n    }\n\n    deltaTime = Math.min(deltaTime, 50);\n\n    this._updateDistanceOrSize(deltaTime);\n\n    this._updatePan(deltaTime);\n\n    this._updateRotate(deltaTime);\n\n    this._updateTransform();\n\n    this.getCamera().update();\n    this.zr && this.zr.refresh();\n    this.trigger('update');\n    this._needsUpdate = false;\n  },\n  _updateRotate: function (deltaTime) {\n    var velocity = this._rotateVelocity;\n    this._phi = velocity.y * deltaTime / 20 + this._phi;\n    this._theta = velocity.x * deltaTime / 20 + this._theta;\n    this.setAlpha(this.getAlpha());\n    this.setBeta(this.getBeta());\n\n    this._vectorDamping(velocity, Math.pow(this.damping, deltaTime / 16));\n  },\n  _updateDistanceOrSize: function (deltaTime) {\n    if (this._projection === 'perspective') {\n      this._setDistance(this._distance + this._zoomSpeed * deltaTime / 20);\n    } else {\n      this._setOrthoSize(this._orthoSize + this._zoomSpeed * deltaTime / 20);\n    }\n\n    this._zoomSpeed *= Math.pow(this.damping, deltaTime / 16);\n  },\n  _setDistance: function (distance) {\n    this._distance = Math.max(Math.min(distance, this.maxDistance), this.minDistance);\n  },\n  _setOrthoSize: function (size) {\n    this._orthoSize = Math.max(Math.min(size, this.maxOrthographicSize), this.minOrthographicSize);\n    var camera = this.getCamera();\n    var cameraHeight = this._orthoSize;\n    var cameraWidth = cameraHeight / this.viewGL.viewport.height * this.viewGL.viewport.width;\n    camera.left = -cameraWidth / 2;\n    camera.right = cameraWidth / 2;\n    camera.top = cameraHeight / 2;\n    camera.bottom = -cameraHeight / 2;\n  },\n  _updatePan: function (deltaTime) {\n    var velocity = this._panVelocity;\n    var len = this._distance;\n    var target = this.getCamera();\n    var yAxis = target.worldTransform.y;\n    var xAxis = target.worldTransform.x; // PENDING\n\n    this._center.scaleAndAdd(xAxis, -velocity.x * len / 200).scaleAndAdd(yAxis, -velocity.y * len / 200);\n\n    this._vectorDamping(velocity, 0);\n  },\n  _updateTransform: function () {\n    var camera = this.getCamera();\n    var dir = new Vector3();\n    var theta = this._theta + Math.PI / 2;\n    var phi = this._phi + Math.PI / 2;\n    var r = Math.sin(theta);\n    dir.x = r * Math.cos(phi);\n    dir.y = -Math.cos(theta);\n    dir.z = r * Math.sin(phi);\n    camera.position.copy(this._center).scaleAndAdd(dir, this._distance);\n    camera.rotation.identity() // First around y, then around x\n    .rotateY(-this._phi).rotateX(-this._theta);\n  },\n  _startCountingStill: function () {\n    clearTimeout(this._stillTimeout);\n    var time = this.autoRotateAfterStill;\n    var self = this;\n\n    if (!isNaN(time) && time > 0) {\n      this._stillTimeout = setTimeout(function () {\n        self._rotating = true;\n      }, time * 1000);\n    }\n  },\n  _vectorDamping: function (v, damping) {\n    var speed = v.len();\n    speed = speed * damping;\n\n    if (speed < 1e-4) {\n      speed = 0;\n    }\n\n    v.normalize().scale(speed);\n  },\n  _decomposeTransform: function () {\n    if (!this.getCamera()) {\n      return;\n    }\n\n    this.getCamera().updateWorldTransform();\n    var forward = this.getCamera().worldTransform.z;\n    var alpha = Math.asin(forward.y);\n    var beta = Math.atan2(forward.x, forward.z);\n    this._theta = alpha;\n    this._phi = -beta;\n    this.setBeta(this.getBeta());\n    this.setAlpha(this.getAlpha()); // Is perspective\n\n    if (this.getCamera().aspect) {\n      this._setDistance(this.getCamera().position.dist(this._center));\n    } else {\n      this._setOrthoSize(this.getCamera().top - this.getCamera().bottom);\n    }\n  },\n  _mouseDownHandler: function (e) {\n    if (e.target) {\n      // If mouseon some zrender element.\n      return;\n    }\n\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    this.zr.on('mousemove', this._mouseMoveHandler);\n    this.zr.on('mouseup', this._mouseUpHandler);\n\n    if (e.event.targetTouches) {\n      if (e.event.targetTouches.length === 1) {\n        this._mode = 'rotate';\n      }\n    } else {\n      if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton]) {\n        this._mode = 'rotate';\n      } else if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.panMouseButton]) {\n        this._mode = 'pan';\n      } else {\n        this._mode = '';\n      }\n    } // Reset rotate velocity\n\n\n    this._rotateVelocity.set(0, 0);\n\n    this._rotating = false;\n\n    if (this.autoRotate) {\n      this._startCountingStill();\n    }\n\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n  },\n  _mouseMoveHandler: function (e) {\n    if (e.target && e.target.__isGLToZRProxy) {\n      return;\n    }\n\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var panSensitivity = convertToArray(this.panSensitivity);\n    var rotateSensitivity = convertToArray(this.rotateSensitivity);\n\n    if (this._mode === 'rotate') {\n      this._rotateVelocity.y = (e.offsetX - this._mouseX) / this.zr.getHeight() * 2 * rotateSensitivity[0];\n      this._rotateVelocity.x = (e.offsetY - this._mouseY) / this.zr.getWidth() * 2 * rotateSensitivity[1];\n    } else if (this._mode === 'pan') {\n      this._panVelocity.x = (e.offsetX - this._mouseX) / this.zr.getWidth() * panSensitivity[0] * 400;\n      this._panVelocity.y = (-e.offsetY + this._mouseY) / this.zr.getHeight() * panSensitivity[1] * 400;\n    }\n\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n    e.event.preventDefault();\n  },\n  _mouseWheelHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var delta = e.event.wheelDelta // Webkit\n    || -e.event.detail; // Firefox\n\n    this._zoomHandler(e, delta);\n  },\n  _pinchHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n\n    this._zoomHandler(e, e.pinchScale > 1 ? 1 : -1); // Not rotate when pinch\n\n\n    this._mode = '';\n  },\n  _zoomHandler: function (e, delta) {\n    if (delta === 0) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    var speed;\n\n    if (this._projection === 'perspective') {\n      speed = Math.max(Math.max(Math.min(this._distance - this.minDistance, this.maxDistance - this._distance)) / 20, 0.5);\n    } else {\n      speed = Math.max(Math.max(Math.min(this._orthoSize - this.minOrthographicSize, this.maxOrthographicSize - this._orthoSize)) / 20, 0.5);\n    }\n\n    this._zoomSpeed = (delta > 0 ? -1 : 1) * speed * this.zoomSensitivity;\n    this._rotating = false;\n\n    if (this.autoRotate && this._mode === 'rotate') {\n      this._startCountingStill();\n    }\n\n    e.event.preventDefault();\n  },\n  _mouseUpHandler: function () {\n    this.zr.off('mousemove', this._mouseMoveHandler);\n    this.zr.off('mouseup', this._mouseUpHandler);\n  },\n  _isRightMouseButtonUsed: function () {\n    return this.rotateMouseButton === 'right' || this.panMouseButton === 'right';\n  },\n  _contextMenuHandler: function (e) {\n    if (this._isRightMouseButtonUsed()) {\n      e.preventDefault();\n    }\n  },\n  _addAnimator: function (animator) {\n    var animators = this._animators;\n    animators.push(animator);\n    animator.done(function () {\n      var idx = animators.indexOf(animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    return animator;\n  }\n});\n/**\n * If auto rotate the target\n * @type {boolean}\n * @default false\n */\n\nObject.defineProperty(OrbitControl.prototype, 'autoRotate', {\n  get: function (val) {\n    return this._autoRotate;\n  },\n  set: function (val) {\n    this._autoRotate = val;\n    this._rotating = val;\n  }\n});\nexport default OrbitControl;","/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3; // var CURVE_RECURSION_LIMIT = 8;\n// var CURVE_COLLINEAR_EPSILON = 40;\n\nvar sampleLinePoints = [[0, 0], [1, 1]];\n/**\n * @constructor\n * @alias module:echarts-gl/util/geometry/LinesGeometry\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    segmentScale: 1,\n    dynamic: true,\n\n    /**\n     * Need to use mesh to expand lines if lineWidth > MAX_LINE_WIDTH\n     */\n    useNativeLine: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      positionPrev: new Geometry.Attribute('positionPrev', 'float', 3),\n      positionNext: new Geometry.Attribute('positionNext', 'float', 3),\n      prevPositionPrev: new Geometry.Attribute('prevPositionPrev', 'float', 3),\n      prevPosition: new Geometry.Attribute('prevPosition', 'float', 3),\n      prevPositionNext: new Geometry.Attribute('prevPositionNext', 'float', 3),\n      offset: new Geometry.Attribute('offset', 'float', 1),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._triangleOffset = 0;\n    this._itemVertexOffsets = [];\n  },\n\n  /**\n   * @param {number} nVertex\n   */\n  setVertexCount: function (nVertex) {\n    var attributes = this.attributes;\n\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n      attributes.color.init(nVertex);\n\n      if (!this.useNativeLine) {\n        attributes.positionPrev.init(nVertex);\n        attributes.positionNext.init(nVertex);\n        attributes.offset.init(nVertex);\n      }\n\n      if (nVertex > 0xffff) {\n        if (this.indices instanceof Uint16Array) {\n          this.indices = new Uint32Array(this.indices);\n        }\n      } else {\n        if (this.indices instanceof Uint32Array) {\n          this.indices = new Uint16Array(this.indices);\n        }\n      }\n    }\n  },\n\n  /**\n   * @param {number} nTriangle\n   */\n  setTriangleCount: function (nTriangle) {\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  _getCubicCurveApproxStep: function (p0, p1, p2, p3) {\n    var len = vec3.dist(p0, p1) + vec3.dist(p2, p1) + vec3.dist(p3, p2);\n    var step = 1 / (len + 1) * this.segmentScale;\n    return step;\n  },\n\n  /**\n   * Get vertex count of cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @return number\n   */\n  getCubicCurveVertexCount: function (p0, p1, p2, p3) {\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var segCount = Math.ceil(1 / step);\n\n    if (!this.useNativeLine) {\n      return segCount * 2 + 2;\n    } else {\n      return segCount * 2;\n    }\n  },\n\n  /**\n   * Get face count of cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @return number\n   */\n  getCubicCurveTriangleCount: function (p0, p1, p2, p3) {\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var segCount = Math.ceil(1 / step);\n\n    if (!this.useNativeLine) {\n      return segCount * 2;\n    } else {\n      return 0;\n    }\n  },\n\n  /**\n   * Get vertex count of line\n   * @return {number}\n   */\n  getLineVertexCount: function () {\n    return this.getPolylineVertexCount(sampleLinePoints);\n  },\n\n  /**\n   * Get face count of line\n   * @return {number}\n   */\n  getLineTriangleCount: function () {\n    return this.getPolylineTriangleCount(sampleLinePoints);\n  },\n\n  /**\n   * Get how many vertices will polyline take.\n   * @type {number|Array} points Can be a 1d/2d list of points, or a number of points amount.\n   * @return {number}\n   */\n  getPolylineVertexCount: function (points) {\n    var pointsLen;\n\n    if (typeof points === 'number') {\n      pointsLen = points;\n    } else {\n      var is2DArray = typeof points[0] !== 'number';\n      pointsLen = is2DArray ? points.length : points.length / 3;\n    }\n\n    return !this.useNativeLine ? (pointsLen - 1) * 2 + 2 : (pointsLen - 1) * 2;\n  },\n\n  /**\n   * Get how many triangles will polyline take.\n   * @type {number|Array} points Can be a 1d/2d list of points, or a number of points amount.\n   * @return {number}\n   */\n  getPolylineTriangleCount: function (points) {\n    var pointsLen;\n\n    if (typeof points === 'number') {\n      pointsLen = points;\n    } else {\n      var is2DArray = typeof points[0] !== 'number';\n      pointsLen = is2DArray ? points.length : points.length / 3;\n    }\n\n    return !this.useNativeLine ? Math.max(pointsLen - 1, 0) * 2 : 0;\n  },\n\n  /**\n   * Add a cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @param {Array.<number>} color\n   * @param {number} [lineWidth=1]\n   */\n  addCubicCurve: function (p0, p1, p2, p3, color, lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    } // incremental interpolation\n    // http://antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION\n\n\n    var x0 = p0[0],\n        y0 = p0[1],\n        z0 = p0[2];\n    var x1 = p1[0],\n        y1 = p1[1],\n        z1 = p1[2];\n    var x2 = p2[0],\n        y2 = p2[1],\n        z2 = p2[2];\n    var x3 = p3[0],\n        y3 = p3[1],\n        z3 = p3[2];\n\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var step2 = step * step;\n    var step3 = step2 * step;\n    var pre1 = 3.0 * step;\n    var pre2 = 3.0 * step2;\n    var pre4 = 6.0 * step2;\n    var pre5 = 6.0 * step3;\n    var tmp1x = x0 - x1 * 2.0 + x2;\n    var tmp1y = y0 - y1 * 2.0 + y2;\n    var tmp1z = z0 - z1 * 2.0 + z2;\n    var tmp2x = (x1 - x2) * 3.0 - x0 + x3;\n    var tmp2y = (y1 - y2) * 3.0 - y0 + y3;\n    var tmp2z = (z1 - z2) * 3.0 - z0 + z3;\n    var fx = x0;\n    var fy = y0;\n    var fz = z0;\n    var dfx = (x1 - x0) * pre1 + tmp1x * pre2 + tmp2x * step3;\n    var dfy = (y1 - y0) * pre1 + tmp1y * pre2 + tmp2y * step3;\n    var dfz = (z1 - z0) * pre1 + tmp1z * pre2 + tmp2z * step3;\n    var ddfx = tmp1x * pre4 + tmp2x * pre5;\n    var ddfy = tmp1y * pre4 + tmp2y * pre5;\n    var ddfz = tmp1z * pre4 + tmp2z * pre5;\n    var dddfx = tmp2x * pre5;\n    var dddfy = tmp2y * pre5;\n    var dddfz = tmp2z * pre5;\n    var t = 0;\n    var k = 0;\n    var segCount = Math.ceil(1 / step);\n    var points = new Float32Array((segCount + 1) * 3);\n    var points = [];\n    var offset = 0;\n\n    for (var k = 0; k < segCount + 1; k++) {\n      points[offset++] = fx;\n      points[offset++] = fy;\n      points[offset++] = fz;\n      fx += dfx;\n      fy += dfy;\n      fz += dfz;\n      dfx += ddfx;\n      dfy += ddfy;\n      dfz += ddfz;\n      ddfx += dddfx;\n      ddfy += dddfy;\n      ddfz += dddfz;\n      t += step;\n\n      if (t > 1) {\n        fx = dfx > 0 ? Math.min(fx, x3) : Math.max(fx, x3);\n        fy = dfy > 0 ? Math.min(fy, y3) : Math.max(fy, y3);\n        fz = dfz > 0 ? Math.min(fz, z3) : Math.max(fz, z3);\n      }\n    }\n\n    return this.addPolyline(points, color, lineWidth);\n  },\n\n  /**\n   * Add a straight line\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} color\n   * @param {number} [lineWidth=1]\n   */\n  addLine: function (p0, p1, color, lineWidth) {\n    return this.addPolyline([p0, p1], color, lineWidth);\n  },\n\n  /**\n   * Add a straight line\n   * @param {Array.<Array> | Array.<number>} points\n   * @param {Array.<number> | Array.<Array>} color\n   * @param {number} [lineWidth=1]\n   * @param {number} [startOffset=0]\n   * @param {number} [pointsCount] Default to be amount of points in the first argument\n   */\n  addPolyline: function (points, color, lineWidth, startOffset, pointsCount) {\n    if (!points.length) {\n      return;\n    }\n\n    var is2DArray = typeof points[0] !== 'number';\n\n    if (pointsCount == null) {\n      pointsCount = is2DArray ? points.length : points.length / 3;\n    }\n\n    if (pointsCount < 2) {\n      return;\n    }\n\n    if (startOffset == null) {\n      startOffset = 0;\n    }\n\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    this._itemVertexOffsets.push(this._vertexOffset);\n\n    var is2DArray = typeof points[0] !== 'number';\n    var notSharingColor = is2DArray ? typeof color[0] !== 'number' : color.length / 4 === pointsCount;\n    var positionAttr = this.attributes.position;\n    var positionPrevAttr = this.attributes.positionPrev;\n    var positionNextAttr = this.attributes.positionNext;\n    var colorAttr = this.attributes.color;\n    var offsetAttr = this.attributes.offset;\n    var indices = this.indices;\n    var vertexOffset = this._vertexOffset;\n    var point;\n    var pointColor;\n    lineWidth = Math.max(lineWidth, 0.01);\n\n    for (var k = startOffset; k < pointsCount; k++) {\n      if (is2DArray) {\n        point = points[k];\n\n        if (notSharingColor) {\n          pointColor = color[k];\n        } else {\n          pointColor = color;\n        }\n      } else {\n        var k3 = k * 3;\n        point = point || [];\n        point[0] = points[k3];\n        point[1] = points[k3 + 1];\n        point[2] = points[k3 + 2];\n\n        if (notSharingColor) {\n          var k4 = k * 4;\n          pointColor = pointColor || [];\n          pointColor[0] = color[k4];\n          pointColor[1] = color[k4 + 1];\n          pointColor[2] = color[k4 + 2];\n          pointColor[3] = color[k4 + 3];\n        } else {\n          pointColor = color;\n        }\n      }\n\n      if (!this.useNativeLine) {\n        if (k < pointsCount - 1) {\n          // Set to next two points\n          positionPrevAttr.set(vertexOffset + 2, point);\n          positionPrevAttr.set(vertexOffset + 3, point);\n        }\n\n        if (k > 0) {\n          // Set to previous two points\n          positionNextAttr.set(vertexOffset - 2, point);\n          positionNextAttr.set(vertexOffset - 1, point);\n        }\n\n        positionAttr.set(vertexOffset, point);\n        positionAttr.set(vertexOffset + 1, point);\n        colorAttr.set(vertexOffset, pointColor);\n        colorAttr.set(vertexOffset + 1, pointColor);\n        offsetAttr.set(vertexOffset, lineWidth / 2);\n        offsetAttr.set(vertexOffset + 1, -lineWidth / 2);\n        vertexOffset += 2;\n      } else {\n        if (k > 1) {\n          positionAttr.copy(vertexOffset, vertexOffset - 1);\n          colorAttr.copy(vertexOffset, vertexOffset - 1);\n          vertexOffset++;\n        }\n      }\n\n      if (!this.useNativeLine) {\n        if (k > 0) {\n          var idx3 = this._triangleOffset * 3;\n          var indices = this.indices; // 0-----2\n          // 1-----3\n          // 0->1->2, 1->3->2\n\n          indices[idx3] = vertexOffset - 4;\n          indices[idx3 + 1] = vertexOffset - 3;\n          indices[idx3 + 2] = vertexOffset - 2;\n          indices[idx3 + 3] = vertexOffset - 3;\n          indices[idx3 + 4] = vertexOffset - 1;\n          indices[idx3 + 5] = vertexOffset - 2;\n          this._triangleOffset += 2;\n        }\n      } else {\n        colorAttr.set(vertexOffset, pointColor);\n        positionAttr.set(vertexOffset, point);\n        vertexOffset++;\n      }\n    }\n\n    if (!this.useNativeLine) {\n      var start = this._vertexOffset;\n      var end = this._vertexOffset + pointsCount * 2;\n      positionPrevAttr.copy(start, start + 2);\n      positionPrevAttr.copy(start + 1, start + 3);\n      positionNextAttr.copy(end - 1, end - 3);\n      positionNextAttr.copy(end - 2, end - 4);\n    }\n\n    this._vertexOffset = vertexOffset;\n    return this._vertexOffset;\n  },\n\n  /**\n   * Set color of single line.\n   */\n  setItemColor: function (idx, color) {\n    var startOffset = this._itemVertexOffsets[idx];\n    var endOffset = idx < this._itemVertexOffsets.length - 1 ? this._itemVertexOffsets[idx + 1] : this._vertexOffset;\n\n    for (var i = startOffset; i < endOffset; i++) {\n      this.attributes.color.set(i, color);\n    }\n\n    this.dirty('color');\n  },\n\n  /**\n   * @return {number}\n   */\n  currentTriangleOffset: function () {\n    return this._triangleOffset;\n  },\n\n  /**\n   * @return {number}\n   */\n  currentVertexOffset: function () {\n    return this._vertexOffset;\n  }\n});\necharts.util.defaults(LinesGeometry.prototype, dynamicConvertMixin);\nexport default LinesGeometry;","export default {\n  convertToDynamicArray: function (clear) {\n    if (clear) {\n      this.resetOffset();\n    }\n\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (clear || !attributes[name].value) {\n        attributes[name].value = [];\n      } else {\n        attributes[name].value = Array.prototype.slice.call(attributes[name].value);\n      }\n    }\n\n    if (clear || !this.indices) {\n      this.indices = [];\n    } else {\n      this.indices = Array.prototype.slice.call(this.indices);\n    }\n  },\n  convertToTypedArray: function () {\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (attributes[name].value && attributes[name].value.length > 0) {\n        attributes[name].value = new Float32Array(attributes[name].value);\n      } else {\n        attributes[name].value = null;\n      }\n    }\n\n    if (this.indices && this.indices.length > 0) {\n      this.indices = this.vertexCount > 0xffff ? new Uint32Array(this.indices) : new Uint16Array(this.indices);\n    }\n\n    this.dirty();\n  }\n};","/**\n * Texture Atlas for the sprites.\n * It uses zrender for 2d element management and rendering\n * @module echarts-gl/util/ZRTextureAtlasSurface\n */\n// TODO Expand.\nimport * as echarts from 'echarts/lib/echarts';\nimport Texture2D from 'claygl/src/Texture2D';\n\nfunction ZRTextureAtlasSurfaceNode(zr, offsetX, offsetY, width, height, gap, dpr) {\n  this._zr = zr;\n  /**\n   * Current cursor x\n   * @type {number}\n   * @private\n   */\n\n  this._x = 0;\n  /**\n   * Current cursor y\n   * @type {number}\n   */\n\n  this._y = 0;\n  this._rowHeight = 0;\n  /**\n   * width without dpr.\n   * @type {number}\n   * @private\n   */\n\n  this.width = width;\n  /**\n   * height without dpr.\n   * @type {number}\n   * @private\n   */\n\n  this.height = height;\n  /**\n   * offsetX without dpr\n   * @type {number}\n   */\n\n  this.offsetX = offsetX;\n  /**\n   * offsetY without dpr\n   * @type {number}\n   */\n\n  this.offsetY = offsetY;\n  this.dpr = dpr;\n  this.gap = gap;\n}\n\nZRTextureAtlasSurfaceNode.prototype = {\n  constructor: ZRTextureAtlasSurfaceNode,\n  clear: function () {\n    this._x = 0;\n    this._y = 0;\n    this._rowHeight = 0;\n  },\n\n  /**\n   * Add shape to atlas\n   * @param {module:zrender/graphic/Displayable} shape\n   * @param {number} width\n   * @param {number} height\n   * @return {Array}\n   */\n  add: function (el, width, height) {\n    // FIXME Text element not consider textAlign and textVerticalAlign.\n    // TODO, inner text, shadow\n    var rect = el.getBoundingRect(); // FIXME aspect ratio\n\n    if (width == null) {\n      width = rect.width;\n    }\n\n    if (height == null) {\n      height = rect.height;\n    }\n\n    width *= this.dpr;\n    height *= this.dpr;\n\n    this._fitElement(el, width, height); // var aspect = el.scale[1] / el.scale[0];\n    // Adjust aspect ratio to make the text more clearly\n    // FIXME If height > width, width is useless ?\n    // width = height * aspect;\n    // el.position[0] *= aspect;\n    // el.scale[0] = el.scale[1];\n\n\n    var x = this._x;\n    var y = this._y;\n    var canvasWidth = this.width * this.dpr;\n    var canvasHeight = this.height * this.dpr;\n    var gap = this.gap;\n\n    if (x + width + gap > canvasWidth) {\n      // Change a new row\n      x = this._x = 0;\n      y += this._rowHeight + gap;\n      this._y = y; // Reset row height\n\n      this._rowHeight = 0;\n    }\n\n    this._x += width + gap;\n    this._rowHeight = Math.max(this._rowHeight, height);\n\n    if (y + height + gap > canvasHeight) {\n      // There is no space anymore\n      return null;\n    } // Shift the el\n\n\n    el.x += this.offsetX * this.dpr + x;\n    el.y += this.offsetY * this.dpr + y;\n\n    this._zr.add(el);\n\n    var coordsOffset = [this.offsetX / this.width, this.offsetY / this.height];\n    var coords = [[x / canvasWidth + coordsOffset[0], y / canvasHeight + coordsOffset[1]], [(x + width) / canvasWidth + coordsOffset[0], (y + height) / canvasHeight + coordsOffset[1]]];\n    return coords;\n  },\n\n  /**\n   * Fit element size by correct its position and scaling\n   * @param {module:zrender/graphic/Displayable} el\n   * @param {number} spriteWidth\n   * @param {number} spriteHeight\n   */\n  _fitElement: function (el, spriteWidth, spriteHeight) {\n    // TODO, inner text, shadow\n    var rect = el.getBoundingRect();\n    var scaleX = spriteWidth / rect.width;\n    var scaleY = spriteHeight / rect.height;\n    el.x = -rect.x * scaleX;\n    el.y = -rect.y * scaleY;\n    el.scaleX = scaleX;\n    el.scaleY = scaleY;\n    el.update();\n  }\n};\n/**\n * constructor\n * @alias module:echarts-gl/util/ZRTextureAtlasSurface\n * @param {number} opt.width\n * @param {number} opt.height\n * @param {number} opt.devicePixelRatio\n * @param {number} opt.gap Gap for safe.\n * @param {Function} opt.onupdate\n */\n\nfunction ZRTextureAtlasSurface(opt) {\n  opt = opt || {};\n  opt.width = opt.width || 512;\n  opt.height = opt.height || 512;\n  opt.devicePixelRatio = opt.devicePixelRatio || 1;\n  opt.gap = opt.gap == null ? 2 : opt.gap;\n  var canvas = document.createElement('canvas');\n  canvas.width = opt.width * opt.devicePixelRatio;\n  canvas.height = opt.height * opt.devicePixelRatio;\n  this._canvas = canvas;\n  this._texture = new Texture2D({\n    image: canvas,\n    flipY: false\n  });\n  var self = this;\n  /**\n   * zrender instance in the Chart\n   * @type {zrender~ZRender}\n   */\n\n  this._zr = echarts.zrender.init(canvas);\n  var oldRefreshImmediately = this._zr.refreshImmediately;\n\n  this._zr.refreshImmediately = function () {\n    oldRefreshImmediately.call(this);\n\n    self._texture.dirty();\n\n    self.onupdate && self.onupdate();\n  };\n\n  this._dpr = opt.devicePixelRatio;\n  /**\n   * Texture coords map for each sprite image\n   * @type {Object}\n   */\n\n  this._coords = {};\n  this.onupdate = opt.onupdate;\n  this._gap = opt.gap; // Left sub atlas.\n\n  this._textureAtlasNodes = [new ZRTextureAtlasSurfaceNode(this._zr, 0, 0, opt.width, opt.height, this._gap, this._dpr)];\n  this._nodeWidth = opt.width;\n  this._nodeHeight = opt.height;\n  this._currentNodeIdx = 0;\n}\n\nZRTextureAtlasSurface.prototype = {\n  /**\n   * Clear the texture atlas\n   */\n  clear: function () {\n    for (var i = 0; i < this._textureAtlasNodes.length; i++) {\n      this._textureAtlasNodes[i].clear();\n    }\n\n    this._currentNodeIdx = 0;\n\n    this._zr.clear();\n\n    this._coords = {};\n  },\n\n  /**\n   * @return {number}\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * @return {number}\n   */\n  getHeight: function () {\n    return this._height;\n  },\n\n  /**\n   * @return {number}\n   */\n  getTexture: function () {\n    return this._texture;\n  },\n\n  /**\n   * @return {number}\n   */\n  getDevicePixelRatio: function () {\n    return this._dpr;\n  },\n  getZr: function () {\n    return this._zr;\n  },\n  _getCurrentNode: function () {\n    return this._textureAtlasNodes[this._currentNodeIdx];\n  },\n  _expand: function () {\n    this._currentNodeIdx++;\n\n    if (this._textureAtlasNodes[this._currentNodeIdx]) {\n      // Use the node created previously.\n      return this._textureAtlasNodes[this._currentNodeIdx];\n    }\n\n    var maxSize = 4096 / this._dpr;\n    var textureAtlasNodes = this._textureAtlasNodes;\n    var nodeLen = textureAtlasNodes.length;\n    var offsetX = nodeLen * this._nodeWidth % maxSize;\n\n    var offsetY = Math.floor(nodeLen * this._nodeWidth / maxSize) * this._nodeHeight;\n\n    if (offsetY >= maxSize) {\n      // Failed if image is too large.\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Too much labels. Some will be ignored.');\n      }\n\n      return;\n    }\n\n    var width = (offsetX + this._nodeWidth) * this._dpr;\n    var height = (offsetY + this._nodeHeight) * this._dpr;\n\n    try {\n      // Resize will error in node.\n      this._zr.resize({\n        width: width,\n        height: height\n      });\n    } catch (e) {\n      this._canvas.width = width;\n      this._canvas.height = height;\n    }\n\n    var newNode = new ZRTextureAtlasSurfaceNode(this._zr, offsetX, offsetY, this._nodeWidth, this._nodeHeight, this._gap, this._dpr);\n\n    this._textureAtlasNodes.push(newNode);\n\n    return newNode;\n  },\n  add: function (el, width, height) {\n    if (this._coords[el.id]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Element already been add');\n      }\n\n      return this._coords[el.id];\n    }\n\n    var coords = this._getCurrentNode().add(el, width, height);\n\n    if (!coords) {\n      var newNode = this._expand();\n\n      if (!newNode) {\n        // To maximum\n        return;\n      }\n\n      coords = newNode.add(el, width, height);\n    }\n\n    this._coords[el.id] = coords;\n    return coords;\n  },\n\n  /**\n   * Get coord scale after texture atlas is expanded.\n   * @return {Array.<number>}\n   */\n  getCoordsScale: function () {\n    var dpr = this._dpr;\n    return [this._nodeWidth / this._canvas.width * dpr, this._nodeHeight / this._canvas.height * dpr];\n  },\n\n  /**\n   * Get texture coords of sprite image\n   * @param  {string} id Image id\n   * @return {Array}\n   */\n  getCoords: function (id) {\n    return this._coords[id];\n  },\n  dispose: function () {\n    this._zr.dispose();\n  }\n};\nexport default ZRTextureAtlasSurface;","import graphicGL from '../../util/graphicGL';\nimport Skybox from 'claygl/src/plugin/Skybox';\nimport * as echarts from 'echarts/lib/echarts';\n\nfunction SceneHelper() {}\n\nSceneHelper.prototype = {\n  constructor: SceneHelper,\n  setScene: function (scene) {\n    this._scene = scene;\n\n    if (this._skybox) {\n      this._skybox.attachScene(this._scene);\n    }\n  },\n  initLight: function (rootNode) {\n    this._lightRoot = rootNode;\n    /**\n     * @type {clay.light.Directional}\n     */\n\n    this.mainLight = new graphicGL.DirectionalLight({\n      shadowBias: 0.005\n    });\n    /**\n     * @type {clay.light.Ambient}\n     */\n\n    this.ambientLight = new graphicGL.AmbientLight();\n    rootNode.add(this.mainLight);\n    rootNode.add(this.ambientLight);\n  },\n  dispose: function () {\n    if (this._lightRoot) {\n      this._lightRoot.remove(this.mainLight);\n\n      this._lightRoot.remove(this.ambientLight);\n    }\n  },\n  updateLight: function (componentModel) {\n    var mainLight = this.mainLight;\n    var ambientLight = this.ambientLight;\n    var lightModel = componentModel.getModel('light');\n    var mainLightModel = lightModel.getModel('main');\n    var ambientLightModel = lightModel.getModel('ambient');\n    mainLight.intensity = mainLightModel.get('intensity');\n    ambientLight.intensity = ambientLightModel.get('intensity');\n    mainLight.color = graphicGL.parseColor(mainLightModel.get('color')).slice(0, 3);\n    ambientLight.color = graphicGL.parseColor(ambientLightModel.get('color')).slice(0, 3);\n    var alpha = mainLightModel.get('alpha') || 0;\n    var beta = mainLightModel.get('beta') || 0;\n    mainLight.position.setArray(graphicGL.directionFromAlphaBeta(alpha, beta));\n    mainLight.lookAt(graphicGL.Vector3.ZERO);\n    mainLight.castShadow = mainLightModel.get('shadow');\n    mainLight.shadowResolution = graphicGL.getShadowResolution(mainLightModel.get('shadowQuality'));\n  },\n  updateAmbientCubemap: function (renderer, componentModel, api) {\n    var ambientCubemapModel = componentModel.getModel('light.ambientCubemap');\n    var textureUrl = ambientCubemapModel.get('texture');\n\n    if (textureUrl) {\n      this._cubemapLightsCache = this._cubemapLightsCache || {};\n      var lights = this._cubemapLightsCache[textureUrl];\n\n      if (!lights) {\n        var self = this;\n        lights = this._cubemapLightsCache[textureUrl] = graphicGL.createAmbientCubemap(ambientCubemapModel.option, renderer, api, function () {\n          // Use prefitered cubemap\n          if (self._isSkyboxFromAmbientCubemap) {\n            self._skybox.setEnvironmentMap(lights.specular.cubemap);\n          }\n\n          api.getZr().refresh();\n        });\n      }\n\n      this._lightRoot.add(lights.diffuse);\n\n      this._lightRoot.add(lights.specular);\n\n      this._currentCubemapLights = lights;\n    } else if (this._currentCubemapLights) {\n      this._lightRoot.remove(this._currentCubemapLights.diffuse);\n\n      this._lightRoot.remove(this._currentCubemapLights.specular);\n\n      this._currentCubemapLights = null;\n    }\n  },\n  updateSkybox: function (renderer, componentModel, api) {\n    var environmentUrl = componentModel.get('environment');\n    var self = this;\n\n    function getSkybox() {\n      self._skybox = self._skybox || new Skybox();\n      return self._skybox;\n    }\n\n    var skybox = getSkybox();\n\n    if (environmentUrl && environmentUrl !== 'none') {\n      if (environmentUrl === 'auto') {\n        this._isSkyboxFromAmbientCubemap = true; // Use environment in ambient cubemap\n\n        if (this._currentCubemapLights) {\n          var cubemap = this._currentCubemapLights.specular.cubemap;\n          skybox.setEnvironmentMap(cubemap);\n\n          if (this._scene) {\n            skybox.attachScene(this._scene);\n          }\n\n          skybox.material.set('lod', 3);\n        } else if (this._skybox) {\n          this._skybox.detachScene();\n        }\n      } // Is gradient or color string\n      else if (typeof environmentUrl === 'object' && environmentUrl.colorStops || typeof environmentUrl === 'string' && echarts.color.parse(environmentUrl)) {\n          this._isSkyboxFromAmbientCubemap = false;\n          var texture = new graphicGL.Texture2D({\n            anisotropic: 8,\n            flipY: false\n          });\n          skybox.setEnvironmentMap(texture);\n          var canvas = texture.image = document.createElement('canvas');\n          canvas.width = canvas.height = 16;\n          var ctx = canvas.getContext('2d');\n          var rect = new echarts.graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: 16,\n              height: 16\n            },\n            style: {\n              fill: environmentUrl\n            }\n          });\n          echarts.innerDrawElementOnCanvas(ctx, rect);\n          skybox.attachScene(this._scene);\n        } else {\n          this._isSkyboxFromAmbientCubemap = false; // Panorama\n\n          var texture = graphicGL.loadTexture(environmentUrl, api, {\n            anisotropic: 8,\n            flipY: false\n          });\n          skybox.setEnvironmentMap(texture);\n          skybox.attachScene(this._scene);\n        }\n    } else {\n      if (this._skybox) {\n        this._skybox.detachScene(this._scene);\n      }\n\n      this._skybox = null;\n    }\n\n    var coordSys = componentModel.coordinateSystem;\n\n    if (this._skybox) {\n      if (coordSys && coordSys.viewGL && environmentUrl !== 'auto' && !(environmentUrl.match && environmentUrl.match(/.hdr$/))) {\n        var srgbDefineMethod = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n        this._skybox.material[srgbDefineMethod]('fragment', 'SRGB_DECODE');\n      } else {\n        this._skybox.material.undefine('fragment', 'SRGB_DECODE');\n      } // var ambientCubemapUrl = environmentUrl === 'auto'\n      //     ? componentModel.get('light.ambientCubemap.texture')\n      //     : environmentUrl;\n\n    }\n  }\n};\nexport default SceneHelper;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport QuadsGeometry from '../../util/geometry/Quads';\nvar firstNotNull = retrieve.firstNotNull;\nvar dimIndicesMap = {\n  // Left to right\n  x: 0,\n  // Far to near\n  y: 2,\n  // Bottom to up\n  z: 1\n};\n\nfunction updateFacePlane(node, plane, otherAxis, dir) {\n  var coord = [0, 0, 0];\n  var distance = dir < 0 ? otherAxis.getExtentMin() : otherAxis.getExtentMax();\n  coord[dimIndicesMap[otherAxis.dim]] = distance;\n  node.position.setArray(coord);\n  node.rotation.identity(); // Negative distance because on the opposite of normal direction.\n\n  plane.distance = -Math.abs(distance);\n  plane.normal.set(0, 0, 0);\n\n  if (otherAxis.dim === 'x') {\n    node.rotation.rotateY(dir * Math.PI / 2);\n    plane.normal.x = -dir;\n  } else if (otherAxis.dim === 'z') {\n    node.rotation.rotateX(-dir * Math.PI / 2);\n    plane.normal.y = -dir;\n  } else {\n    if (dir > 0) {\n      node.rotation.rotateY(Math.PI);\n    }\n\n    plane.normal.z = -dir;\n  }\n}\n\nfunction Grid3DFace(faceInfo, linesMaterial, quadsMaterial) {\n  this.rootNode = new graphicGL.Node();\n  var linesMesh = new graphicGL.Mesh({\n    geometry: new Lines3DGeometry({\n      useNativeLine: false\n    }),\n    material: linesMaterial,\n    castShadow: false,\n    ignorePicking: true,\n    $ignorePicking: true,\n    renderOrder: 1\n  });\n  var quadsMesh = new graphicGL.Mesh({\n    geometry: new QuadsGeometry(),\n    material: quadsMaterial,\n    castShadow: false,\n    culling: false,\n    ignorePicking: true,\n    $ignorePicking: true,\n    renderOrder: 0\n  }); // Quads are behind lines.\n\n  this.rootNode.add(quadsMesh);\n  this.rootNode.add(linesMesh);\n  this.faceInfo = faceInfo;\n  this.plane = new graphicGL.Plane();\n  this.linesMesh = linesMesh;\n  this.quadsMesh = quadsMesh;\n}\n\nGrid3DFace.prototype.update = function (grid3DModel, ecModel, api) {\n  var cartesian = grid3DModel.coordinateSystem;\n  var axes = [cartesian.getAxis(this.faceInfo[0]), cartesian.getAxis(this.faceInfo[1])];\n  var lineGeometry = this.linesMesh.geometry;\n  var quadsGeometry = this.quadsMesh.geometry;\n  lineGeometry.convertToDynamicArray(true);\n  quadsGeometry.convertToDynamicArray(true);\n\n  this._updateSplitLines(lineGeometry, axes, grid3DModel, api);\n\n  this._udpateSplitAreas(quadsGeometry, axes, grid3DModel, api);\n\n  lineGeometry.convertToTypedArray();\n  quadsGeometry.convertToTypedArray();\n  var otherAxis = cartesian.getAxis(this.faceInfo[2]);\n  updateFacePlane(this.rootNode, this.plane, otherAxis, this.faceInfo[3]);\n};\n\nGrid3DFace.prototype._updateSplitLines = function (geometry, axes, grid3DModel, api) {\n  var dpr = api.getDevicePixelRatio();\n  axes.forEach(function (axis, idx) {\n    var axisModel = axis.model;\n    var otherExtent = axes[1 - idx].getExtent();\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine', grid3DModel.getModel('splitLine')); // Render splitLines\n\n    if (splitLineModel.get('show')) {\n      var lineStyleModel = splitLineModel.getModel('lineStyle');\n      var lineColors = lineStyleModel.get('color');\n      var opacity = firstNotNull(lineStyleModel.get('opacity'), 1.0);\n      var lineWidth = firstNotNull(lineStyleModel.get('width'), 1.0);\n      lineColors = echarts.util.isArray(lineColors) ? lineColors : [lineColors];\n      var ticksCoords = axis.getTicksCoords({\n        tickModel: splitLineModel\n      });\n      var count = 0;\n\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var tickCoord = ticksCoords[i].coord;\n        var lineColor = graphicGL.parseColor(lineColors[count % lineColors.length]);\n        lineColor[3] *= opacity;\n        var p0 = [0, 0, 0];\n        var p1 = [0, 0, 0]; // 0 - x, 1 - y\n\n        p0[idx] = p1[idx] = tickCoord;\n        p0[1 - idx] = otherExtent[0];\n        p1[1 - idx] = otherExtent[1];\n        geometry.addLine(p0, p1, lineColor, lineWidth * dpr);\n        count++;\n      }\n    }\n  });\n};\n\nGrid3DFace.prototype._udpateSplitAreas = function (geometry, axes, grid3DModel, api) {\n  axes.forEach(function (axis, idx) {\n    var axisModel = axis.model;\n    var otherExtent = axes[1 - idx].getExtent();\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea', grid3DModel.getModel('splitArea')); // Render splitAreas\n\n    if (splitAreaModel.get('show')) {\n      var areaStyleModel = splitAreaModel.getModel('areaStyle');\n      var colors = areaStyleModel.get('color');\n      var opacity = firstNotNull(areaStyleModel.get('opacity'), 1.0);\n      colors = echarts.util.isArray(colors) ? colors : [colors];\n      var ticksCoords = axis.getTicksCoords({\n        tickModel: splitAreaModel,\n        clamp: true\n      });\n      var count = 0;\n      var prevP0 = [0, 0, 0];\n      var prevP1 = [0, 0, 0]; // 0 - x, 1 - y\n\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var tickCoord = ticksCoords[i].coord;\n        var p0 = [0, 0, 0];\n        var p1 = [0, 0, 0]; // 0 - x, 1 - y\n\n        p0[idx] = p1[idx] = tickCoord;\n        p0[1 - idx] = otherExtent[0];\n        p1[1 - idx] = otherExtent[1];\n\n        if (i === 0) {\n          prevP0 = p0;\n          prevP1 = p1;\n          continue;\n        }\n\n        var color = graphicGL.parseColor(colors[count % colors.length]);\n        color[3] *= opacity;\n        geometry.addQuad([prevP0, p0, p1, prevP1], color);\n        prevP0 = p0;\n        prevP1 = p1;\n        count++;\n      }\n    }\n  });\n};\n\nexport default Grid3DFace;","/**\n * @module echarts-gl/util/geometry/QuadsGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\n/**\n * @constructor\n * @alias module:echarts-gl/util/geometry/QuadsGeometry\n * @extends clay.Geometry\n */\n\nvar QuadsGeometry = Geometry.extend(function () {\n  return {\n    segmentScale: 1,\n\n    /**\n     * Need to use mesh to expand lines if lineWidth > MAX_LINE_WIDTH\n     */\n    useNativeLine: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      normal: new Geometry.Attribute('normal', 'float', 3, 'NORMAL'),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/QuadsGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n\n  /**\n   * @param {number} nQuad\n   */\n  setQuadCount: function (nQuad) {\n    var attributes = this.attributes;\n    var vertexCount = this.getQuadVertexCount() * nQuad;\n    var triangleCount = this.getQuadTriangleCount() * nQuad;\n\n    if (this.vertexCount !== vertexCount) {\n      attributes.position.init(vertexCount);\n      attributes.normal.init(vertexCount);\n      attributes.color.init(vertexCount);\n    }\n\n    if (this.triangleCount !== triangleCount) {\n      this.indices = vertexCount > 0xffff ? new Uint32Array(triangleCount * 3) : new Uint16Array(triangleCount * 3);\n    }\n  },\n  getQuadVertexCount: function () {\n    return 4;\n  },\n  getQuadTriangleCount: function () {\n    return 2;\n  },\n\n  /**\n   * Add a quad, which in following order:\n   * 0-----1\n   * 3-----2\n   */\n  addQuad: function () {\n    var a = vec3.create();\n    var b = vec3.create();\n    var normal = vec3.create();\n    var indices = [0, 3, 1, 3, 2, 1];\n    return function (coords, color) {\n      var positionAttr = this.attributes.position;\n      var normalAttr = this.attributes.normal;\n      var colorAttr = this.attributes.color;\n      vec3.sub(a, coords[1], coords[0]);\n      vec3.sub(b, coords[2], coords[1]);\n      vec3.cross(normal, a, b);\n      vec3.normalize(normal, normal);\n\n      for (var i = 0; i < 4; i++) {\n        positionAttr.set(this._vertexOffset + i, coords[i]);\n        colorAttr.set(this._vertexOffset + i, color);\n        normalAttr.set(this._vertexOffset + i, normal);\n      }\n\n      var idx = this._faceOffset * 3;\n\n      for (var i = 0; i < 6; i++) {\n        this.indices[idx + i] = indices[i] + this._vertexOffset;\n      }\n\n      this._vertexOffset += 4;\n      this._faceOffset += 2;\n    };\n  }()\n});\necharts.util.defaults(QuadsGeometry.prototype, dynamicConvertMixin);\nexport default QuadsGeometry;","import * as echarts from 'echarts/lib/echarts';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nimport graphicGL from '../../util/graphicGL';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport retrieve from '../../util/retrieve';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nvar firstNotNull = retrieve.firstNotNull;\nvar dimIndicesMap = {\n  // Left to right\n  x: 0,\n  // Far to near\n  y: 2,\n  // Bottom to up\n  z: 1\n};\n\nfunction Grid3DAxis(dim, linesMaterial) {\n  var linesMesh = new graphicGL.Mesh({\n    geometry: new Lines3DGeometry({\n      useNativeLine: false\n    }),\n    material: linesMaterial,\n    castShadow: false,\n    ignorePicking: true,\n    renderOrder: 2\n  });\n  var axisLabelsMesh = new LabelsMesh();\n  axisLabelsMesh.material.depthMask = false;\n  var rootNode = new graphicGL.Node();\n  rootNode.add(linesMesh);\n  rootNode.add(axisLabelsMesh);\n  this.rootNode = rootNode;\n  this.dim = dim;\n  this.linesMesh = linesMesh;\n  this.labelsMesh = axisLabelsMesh;\n  this.axisLineCoords = null;\n  this.labelElements = [];\n}\n\nvar otherDim = {\n  x: 'y',\n  y: 'x',\n  z: 'y'\n};\n\nGrid3DAxis.prototype.update = function (grid3DModel, axisLabelSurface, api) {\n  var cartesian = grid3DModel.coordinateSystem;\n  var axis = cartesian.getAxis(this.dim);\n  var linesGeo = this.linesMesh.geometry;\n  var labelsGeo = this.labelsMesh.geometry;\n  linesGeo.convertToDynamicArray(true);\n  labelsGeo.convertToDynamicArray(true);\n  var axisModel = axis.model;\n  var extent = axis.getExtent();\n  var dpr = api.getDevicePixelRatio();\n  var axisLineModel = axisModel.getModel('axisLine', grid3DModel.getModel('axisLine'));\n  var axisTickModel = axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));\n  var axisLabelModel = axisModel.getModel('axisLabel', grid3DModel.getModel('axisLabel'));\n  var axisLineColor = axisLineModel.get('lineStyle.color'); // Render axisLine\n\n  if (axisLineModel.get('show')) {\n    var axisLineStyleModel = axisLineModel.getModel('lineStyle');\n    var p0 = [0, 0, 0];\n    var p1 = [0, 0, 0];\n    var idx = dimIndicesMap[axis.dim];\n    p0[idx] = extent[0];\n    p1[idx] = extent[1]; // Save some useful info.\n\n    this.axisLineCoords = [p0, p1];\n    var color = graphicGL.parseColor(axisLineColor);\n    var lineWidth = firstNotNull(axisLineStyleModel.get('width'), 1.0);\n    var opacity = firstNotNull(axisLineStyleModel.get('opacity'), 1.0);\n    color[3] *= opacity;\n    linesGeo.addLine(p0, p1, color, lineWidth * dpr);\n  } // Render axis ticksCoords\n\n\n  if (axisTickModel.get('show')) {\n    var lineStyleModel = axisTickModel.getModel('lineStyle');\n    var lineColor = graphicGL.parseColor(firstNotNull(lineStyleModel.get('color'), axisLineColor));\n    var lineWidth = firstNotNull(lineStyleModel.get('width'), 1.0);\n    lineColor[3] *= firstNotNull(lineStyleModel.get('opacity'), 1.0);\n    var ticksCoords = axis.getTicksCoords();\n    var tickLength = axisTickModel.get('length');\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = ticksCoords[i].coord;\n      var p0 = [0, 0, 0];\n      var p1 = [0, 0, 0];\n      var idx = dimIndicesMap[axis.dim];\n      var otherIdx = dimIndicesMap[otherDim[axis.dim]]; // 0 : x, 1 : y\n\n      p0[idx] = p1[idx] = tickCoord;\n      p1[otherIdx] = tickLength;\n      linesGeo.addLine(p0, p1, lineColor, lineWidth * dpr);\n    }\n  }\n\n  this.labelElements = [];\n  var dpr = api.getDevicePixelRatio();\n\n  if (axisLabelModel.get('show')) {\n    var ticksCoords = axis.getTicksCoords();\n    var categoryData = axisModel.get('data');\n    var labelMargin = axisLabelModel.get('margin');\n    var labels = axis.getViewLabels();\n\n    for (var i = 0; i < labels.length; i++) {\n      var tickValue = labels[i].tickValue;\n      var formattedLabel = labels[i].formattedLabel;\n      var rawLabel = labels[i].rawLabel;\n      var tickCoord = axis.dataToCoord(tickValue);\n      var p = [0, 0, 0];\n      var idx = dimIndicesMap[axis.dim];\n      var otherIdx = dimIndicesMap[otherDim[axis.dim]]; // 0 : x, 1 : y\n\n      p[idx] = p[idx] = tickCoord;\n      p[otherIdx] = labelMargin;\n      var itemTextStyleModel = axisLabelModel;\n\n      if (categoryData && categoryData[tickValue] && categoryData[tickValue].textStyle) {\n        itemTextStyleModel = new echarts.Model(categoryData[tickValue].textStyle, axisLabelModel, axisModel.ecModel);\n      }\n\n      var textColor = firstNotNull(itemTextStyleModel.get('color'), axisLineColor);\n      var textEl = new echarts.graphic.Text({\n        style: createTextStyle(itemTextStyleModel, {\n          text: formattedLabel,\n          fill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n          // index of axis.data. So tick should not be exposed to user\n          // in category axis.\n          // (2) Compatible with previous version, which always returns labelStr.\n          // But in interval scale labelStr is like '223,445', which maked\n          // user repalce ','. So we modify it to return original val but remain\n          // it as 'string' to avoid error in replacing.\n          axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, i) : textColor,\n          verticalAlign: 'top',\n          align: 'left'\n        })\n      });\n      var coords = axisLabelSurface.add(textEl);\n      var rect = textEl.getBoundingRect();\n      labelsGeo.addSprite(p, [rect.width * dpr, rect.height * dpr], coords);\n      this.labelElements.push(textEl);\n    }\n  }\n\n  if (axisModel.get('name')) {\n    var nameTextStyleModel = axisModel.getModel('nameTextStyle');\n    var p = [0, 0, 0];\n    var idx = dimIndicesMap[axis.dim];\n    var otherIdx = dimIndicesMap[otherDim[axis.dim]];\n    var labelColor = firstNotNull(nameTextStyleModel.get('color'), axisLineColor);\n    var strokeColor = nameTextStyleModel.get('borderColor');\n    var lineWidth = nameTextStyleModel.get('borderWidth'); // TODO start and end\n\n    p[idx] = p[idx] = (extent[0] + extent[1]) / 2;\n    p[otherIdx] = axisModel.get('nameGap');\n    var textEl = new echarts.graphic.Text({\n      style: createTextStyle(nameTextStyleModel, {\n        text: axisModel.get('name'),\n        fill: labelColor,\n        stroke: strokeColor,\n        lineWidth: lineWidth\n      })\n    });\n    var coords = axisLabelSurface.add(textEl);\n    var rect = textEl.getBoundingRect();\n    labelsGeo.addSprite(p, [rect.width * dpr, rect.height * dpr], coords);\n    textEl.__idx = this.labelElements.length;\n    this.nameLabelElement = textEl;\n  }\n\n  this.labelsMesh.material.set('textureAtlas', axisLabelSurface.getTexture());\n  this.labelsMesh.material.set('uvScale', axisLabelSurface.getCoordsScale());\n  linesGeo.convertToTypedArray();\n  labelsGeo.convertToTypedArray();\n};\n\nGrid3DAxis.prototype.setSpriteAlign = function (textAlign, textVerticalAlign, api) {\n  var dpr = api.getDevicePixelRatio();\n  var labelGeo = this.labelsMesh.geometry;\n\n  for (var i = 0; i < this.labelElements.length; i++) {\n    var labelEl = this.labelElements[i];\n    var rect = labelEl.getBoundingRect();\n    labelGeo.setSpriteAlign(i, [rect.width * dpr, rect.height * dpr], textAlign, textVerticalAlign);\n  } // name label\n\n\n  var nameLabelEl = this.nameLabelElement;\n\n  if (nameLabelEl) {\n    var rect = nameLabelEl.getBoundingRect();\n    labelGeo.setSpriteAlign(nameLabelEl.__idx, [rect.width * dpr, rect.height * dpr], textAlign, textVerticalAlign);\n    labelGeo.dirty();\n  }\n\n  this.textAlign = textAlign;\n  this.textVerticalAlign = textVerticalAlign;\n};\n\nexport default Grid3DAxis;","import graphicGL from '../graphicGL';\nimport SpritesGeometry from '../geometry/Sprites';\nimport labelsGLSL from '../shader/labels.glsl.js';\ngraphicGL.Shader.import(labelsGLSL);\nexport default graphicGL.Mesh.extend(function () {\n  var geometry = new SpritesGeometry({\n    dynamic: true\n  });\n  var material = new graphicGL.Material({\n    shader: graphicGL.createShader('ecgl.labels'),\n    transparent: true,\n    depthMask: false\n  });\n  return {\n    geometry: geometry,\n    material: material,\n    culling: false,\n    castShadow: false,\n    ignorePicking: true\n  };\n});","/**\n * Geometry collecting sprites\n *\n * @module echarts-gl/util/geometry/Sprites\n * @author Yi Shen(https://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Geometry from 'claygl/src/Geometry';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nvar squareTriangles = [0, 1, 2, 0, 2, 3];\nvar SpritesGeometry = Geometry.extend(function () {\n  return {\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      texcoord: new Geometry.Attribute('texcoord', 'float', 2, 'TEXCOORD_0'),\n      offset: new Geometry.Attribute('offset', 'float', 2),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR')\n    }\n  };\n}, {\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n  setSpriteCount: function (spriteCount) {\n    this._spriteCount = spriteCount;\n    var vertexCount = spriteCount * 4;\n    var triangleCount = spriteCount * 2;\n\n    if (this.vertexCount !== vertexCount) {\n      this.attributes.position.init(vertexCount);\n      this.attributes.offset.init(vertexCount);\n      this.attributes.color.init(vertexCount);\n    }\n\n    if (this.triangleCount !== triangleCount) {\n      this.indices = vertexCount > 0xffff ? new Uint32Array(triangleCount * 3) : new Uint16Array(triangleCount * 3);\n    }\n  },\n  setSpriteAlign: function (spriteOffset, size, align, verticalAlign, margin) {\n    if (align == null) {\n      align = 'left';\n    }\n\n    if (verticalAlign == null) {\n      verticalAlign = 'top';\n    }\n\n    var leftOffset, topOffset, rightOffset, bottomOffset;\n    margin = margin || 0;\n\n    switch (align) {\n      case 'left':\n        leftOffset = margin;\n        rightOffset = size[0] + margin;\n        break;\n\n      case 'center':\n      case 'middle':\n        leftOffset = -size[0] / 2;\n        rightOffset = size[0] / 2;\n        break;\n\n      case 'right':\n        leftOffset = -size[0] - margin;\n        rightOffset = -margin;\n        break;\n    }\n\n    switch (verticalAlign) {\n      case 'bottom':\n        topOffset = margin;\n        bottomOffset = size[1] + margin;\n        break;\n\n      case 'middle':\n        topOffset = -size[1] / 2;\n        bottomOffset = size[1] / 2;\n        break;\n\n      case 'top':\n        topOffset = -size[1] - margin;\n        bottomOffset = -margin;\n        break;\n    } // 3----2\n    // 0----1\n\n\n    var vertexOffset = spriteOffset * 4;\n    var offsetAttr = this.attributes.offset;\n    offsetAttr.set(vertexOffset, [leftOffset, bottomOffset]);\n    offsetAttr.set(vertexOffset + 1, [rightOffset, bottomOffset]);\n    offsetAttr.set(vertexOffset + 2, [rightOffset, topOffset]);\n    offsetAttr.set(vertexOffset + 3, [leftOffset, topOffset]);\n  },\n\n  /**\n   * Add sprite\n   * @param {Array.<number>} position\n   * @param {Array.<number>} size [width, height]\n   * @param {Array.<Array>} coords [leftBottom, rightTop]\n   * @param {string} [align='left'] 'left' 'center' 'right'\n   * @param {string} [verticalAlign='top'] 'top' 'middle' 'bottom'\n   * @param {number} [screenMargin=0]\n   */\n  addSprite: function (position, size, coords, align, verticalAlign, screenMargin) {\n    var vertexOffset = this._vertexOffset;\n    this.setSprite(this._vertexOffset / 4, position, size, coords, align, verticalAlign, screenMargin);\n\n    for (var i = 0; i < squareTriangles.length; i++) {\n      this.indices[this._faceOffset * 3 + i] = squareTriangles[i] + vertexOffset;\n    }\n\n    this._faceOffset += 2;\n    this._vertexOffset += 4;\n    return vertexOffset / 4;\n  },\n  setSprite: function (spriteOffset, position, size, coords, align, verticalAlign, screenMargin) {\n    var vertexOffset = spriteOffset * 4;\n    var attributes = this.attributes;\n\n    for (var i = 0; i < 4; i++) {\n      attributes.position.set(vertexOffset + i, position);\n    } // 3----2\n    // 0----1\n\n\n    var texcoordAttr = attributes.texcoord;\n    texcoordAttr.set(vertexOffset, [coords[0][0], coords[0][1]]);\n    texcoordAttr.set(vertexOffset + 1, [coords[1][0], coords[0][1]]);\n    texcoordAttr.set(vertexOffset + 2, [coords[1][0], coords[1][1]]);\n    texcoordAttr.set(vertexOffset + 3, [coords[0][0], coords[1][1]]);\n    this.setSpriteAlign(spriteOffset, size, align, verticalAlign, screenMargin);\n  }\n});\necharts.util.defaults(SpritesGeometry.prototype, dynamicConvertMixin);\nexport default SpritesGeometry;","export default \"@export ecgl.labels.vertex\\n\\nattribute vec3 position: POSITION;\\nattribute vec2 texcoord: TEXCOORD_0;\\nattribute vec2 offset;\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform vec4 viewport : VIEWPORT;\\n\\nvarying vec2 v_Texcoord;\\n\\nvoid main()\\n{\\n vec4 proj = worldViewProjection * vec4(position, 1.0);\\n\\n vec2 screen = (proj.xy / abs(proj.w) + 1.0) * 0.5 * viewport.zw;\\n\\n screen += offset;\\n\\n proj.xy = (screen / viewport.zw - 0.5) * 2.0 * abs(proj.w);\\n gl_Position = proj;\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n v_Texcoord = texcoord;\\n}\\n@end\\n\\n\\n@export ecgl.labels.fragment\\n\\nuniform vec3 color : [1.0, 1.0, 1.0];\\nuniform float alpha : 1.0;\\nuniform sampler2D textureAtlas;\\nuniform vec2 uvScale: [1.0, 1.0];\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\nvarying float v_Miter;\\n\\nvarying vec2 v_Texcoord;\\n\\nvoid main()\\n{\\n gl_FragColor = vec4(color, alpha) * texture2D(textureAtlas, v_Texcoord * uvScale);\\n#ifdef VERTEX_COLOR\\n gl_FragColor *= v_Color;\\n#endif\\n}\\n\\n@end\";","export default \"@export ecgl.lines3D.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nattribute vec3 position: POSITION;\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n\\nvoid main()\\n{\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n v_Color = a_Color;\\n}\\n\\n@end\\n\\n@export ecgl.lines3D.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nvarying vec4 v_Color;\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color * v_Color);\\n#else\\n gl_FragColor = color * v_Color;\\n#endif\\n}\\n@end\\n\\n\\n\\n@export ecgl.lines3D.clipNear\\n\\nvec4 clipNear(vec4 p1, vec4 p2) {\\n float n = (p1.w - near) / (p1.w - p2.w);\\n return vec4(mix(p1.xy, p2.xy, n), -near, near);\\n}\\n\\n@end\\n\\n@export ecgl.lines3D.expandLine\\n#ifdef VERTEX_ANIMATION\\n vec4 prevProj = worldViewProjection * vec4(mix(prevPositionPrev, positionPrev, percent), 1.0);\\n vec4 currProj = worldViewProjection * vec4(mix(prevPosition, position, percent), 1.0);\\n vec4 nextProj = worldViewProjection * vec4(mix(prevPositionNext, positionNext, percent), 1.0);\\n#else\\n vec4 prevProj = worldViewProjection * vec4(positionPrev, 1.0);\\n vec4 currProj = worldViewProjection * vec4(position, 1.0);\\n vec4 nextProj = worldViewProjection * vec4(positionNext, 1.0);\\n#endif\\n\\n if (currProj.w < 0.0) {\\n if (nextProj.w > 0.0) {\\n currProj = clipNear(currProj, nextProj);\\n }\\n else if (prevProj.w > 0.0) {\\n currProj = clipNear(currProj, prevProj);\\n }\\n }\\n\\n vec2 prevScreen = (prevProj.xy / abs(prevProj.w) + 1.0) * 0.5 * viewport.zw;\\n vec2 currScreen = (currProj.xy / abs(currProj.w) + 1.0) * 0.5 * viewport.zw;\\n vec2 nextScreen = (nextProj.xy / abs(nextProj.w) + 1.0) * 0.5 * viewport.zw;\\n\\n vec2 dir;\\n float len = offset;\\n if (position == positionPrev) {\\n dir = normalize(nextScreen - currScreen);\\n }\\n else if (position == positionNext) {\\n dir = normalize(currScreen - prevScreen);\\n }\\n else {\\n vec2 dirA = normalize(currScreen - prevScreen);\\n vec2 dirB = normalize(nextScreen - currScreen);\\n\\n vec2 tanget = normalize(dirA + dirB);\\n\\n float miter = 1.0 / max(dot(tanget, dirA), 0.5);\\n len *= miter;\\n dir = tanget;\\n }\\n\\n dir = vec2(-dir.y, dir.x) * len;\\n currScreen += dir;\\n\\n currProj.xy = (currScreen / viewport.zw - 0.5) * 2.0 * abs(currProj.w);\\n@end\\n\\n\\n@export ecgl.meshLines3D.vertex\\n\\nattribute vec3 position: POSITION;\\nattribute vec3 positionPrev;\\nattribute vec3 positionNext;\\nattribute float offset;\\nattribute vec4 a_Color : COLOR;\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nattribute vec3 prevPositionPrev;\\nattribute vec3 prevPositionNext;\\nuniform float percent : 1.0;\\n#endif\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform vec4 viewport : VIEWPORT;\\nuniform float near : NEAR;\\n\\nvarying vec4 v_Color;\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n@import ecgl.lines3D.clipNear\\n\\nvoid main()\\n{\\n @import ecgl.lines3D.expandLine\\n\\n gl_Position = currProj;\\n\\n v_Color = a_Color;\\n\\n @import ecgl.common.wireframe.vertexMain\\n}\\n@end\\n\\n\\n@export ecgl.meshLines3D.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nvarying vec4 v_Color;\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color * v_Color);\\n#else\\n gl_FragColor = color * v_Color;\\n#endif\\n\\n @import ecgl.common.wireframe.fragmentMain\\n}\\n\\n@end\";","import Cartesian3D from './grid3D/Cartesian3D';\nimport Axis3D from './grid3D/Axis3D';\nimport * as echarts from 'echarts/lib/echarts';\nimport { getLayoutRect } from 'echarts/lib/util/layout';\nimport ViewGL from '../core/ViewGL';\nimport retrieve from '../util/retrieve';\n\nfunction resizeCartesian3D(grid3DModel, api) {\n  // Use left/top/width/height\n  var boxLayoutOption = grid3DModel.getBoxLayoutParams();\n  var viewport = getLayoutRect(boxLayoutOption, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }); // Flip Y\n\n  viewport.y = api.getHeight() - viewport.y - viewport.height;\n  this.viewGL.setViewport(viewport.x, viewport.y, viewport.width, viewport.height, api.getDevicePixelRatio());\n  var boxWidth = grid3DModel.get('boxWidth');\n  var boxHeight = grid3DModel.get('boxHeight');\n  var boxDepth = grid3DModel.get('boxDepth');\n\n  if (process.env.NODE_ENV !== 'production') {\n    ['x', 'y', 'z'].forEach(function (dim) {\n      if (!this.getAxis(dim)) {\n        throw new Error('Grid' + grid3DModel.id + ' don\\'t have ' + dim + 'Axis');\n      }\n    }, this);\n  }\n\n  this.getAxis('x').setExtent(-boxWidth / 2, boxWidth / 2); // From near to far\n\n  this.getAxis('y').setExtent(boxDepth / 2, -boxDepth / 2);\n  this.getAxis('z').setExtent(-boxHeight / 2, boxHeight / 2);\n  this.size = [boxWidth, boxHeight, boxDepth];\n}\n\nfunction updateCartesian3D(ecModel, api) {\n  var dataExtents = {};\n\n  function unionDataExtents(dim, extent) {\n    dataExtents[dim] = dataExtents[dim] || [Infinity, -Infinity];\n    dataExtents[dim][0] = Math.min(extent[0], dataExtents[dim][0]);\n    dataExtents[dim][1] = Math.max(extent[1], dataExtents[dim][1]);\n  } // Get data extents for scale.\n\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem !== this) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    ['x', 'y', 'z'].forEach(function (coordDim) {\n      data.mapDimensionsAll(coordDim, true).forEach(function (dataDim) {\n        unionDataExtents(coordDim, data.getDataExtent(dataDim, true));\n      });\n    });\n  }, this);\n  ['xAxis3D', 'yAxis3D', 'zAxis3D'].forEach(function (axisType) {\n    ecModel.eachComponent(axisType, function (axisModel) {\n      var dim = axisType.charAt(0);\n      var grid3DModel = axisModel.getReferringComponents('grid3D').models[0];\n      var cartesian3D = grid3DModel.coordinateSystem;\n\n      if (cartesian3D !== this) {\n        return;\n      }\n\n      var axis = cartesian3D.getAxis(dim);\n\n      if (axis) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('Can\\'t have two %s in one grid3D', axisType);\n        }\n\n        return;\n      }\n\n      var scale = echarts.helper.createScale(dataExtents[dim] || [Infinity, -Infinity], axisModel);\n      axis = new Axis3D(dim, scale);\n      axis.type = axisModel.get('type');\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axisModel.axis = axis;\n      axis.model = axisModel; // override `echarts/coord/Axis#getLabelModel`\n\n      axis.getLabelModel = function () {\n        return axisModel.getModel('axisLabel', grid3DModel.getModel('axisLabel'));\n      }; // override `echarts/coord/Axis#getTickModel`\n\n\n      axis.getTickModel = function () {\n        return axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));\n      };\n\n      cartesian3D.addAxis(axis);\n    }, this);\n  }, this);\n  this.resize(this.model, api);\n}\n\nvar grid3DCreator = {\n  dimensions: Cartesian3D.prototype.dimensions,\n  create: function (ecModel, api) {\n    var cartesian3DList = [];\n    ecModel.eachComponent('grid3D', function (grid3DModel) {\n      // FIXME\n      grid3DModel.__viewGL = grid3DModel.__viewGL || new ViewGL();\n      var cartesian3D = new Cartesian3D();\n      cartesian3D.model = grid3DModel;\n      cartesian3D.viewGL = grid3DModel.__viewGL;\n      grid3DModel.coordinateSystem = cartesian3D;\n      cartesian3DList.push(cartesian3D); // Inject resize and update\n\n      cartesian3D.resize = resizeCartesian3D;\n      cartesian3D.update = updateCartesian3D;\n    });\n    var axesTypes = ['xAxis3D', 'yAxis3D', 'zAxis3D'];\n\n    function findAxesModels(seriesModel, ecModel) {\n      return axesTypes.map(function (axisType) {\n        var axisModel = seriesModel.getReferringComponents(axisType).models[0];\n\n        if (axisModel == null) {\n          axisModel = ecModel.getComponent(axisType);\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!axisModel) {\n            throw new Error(axisType + ' \"' + retrieve.firstNotNull(seriesModel.get(axisType + 'Index'), seriesModel.get(axisType + 'Id'), 0) + '\" not found');\n          }\n        }\n\n        return axisModel;\n      });\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') !== 'cartesian3D') {\n        return;\n      }\n\n      var firstGridModel = seriesModel.getReferringComponents('grid3D').models[0];\n\n      if (firstGridModel == null) {\n        var axesModels = findAxesModels(seriesModel, ecModel);\n        var firstGridModel = axesModels[0].getCoordSysModel();\n        axesModels.forEach(function (axisModel) {\n          var grid3DModel = axisModel.getCoordSysModel();\n\n          if (process.env.NODE_ENV !== 'production') {\n            if (!grid3DModel) {\n              throw new Error('grid3D \"' + retrieve.firstNotNull(axisModel.get('gridIndex'), axisModel.get('gridId'), 0) + '\" not found');\n            }\n\n            if (grid3DModel !== firstGridModel) {\n              throw new Error('xAxis3D, yAxis3D, zAxis3D must use the same grid');\n            }\n          }\n        });\n      }\n\n      var coordSys = firstGridModel.coordinateSystem;\n      seriesModel.coordinateSystem = coordSys;\n    });\n    return cartesian3DList;\n  }\n};\nexport default grid3DCreator;","import * as echarts from 'echarts/lib/echarts';\nimport Cartesian from 'echarts/lib/coord/cartesian/Cartesian';\n\nfunction Cartesian3D(name) {\n  Cartesian.call(this, name);\n  this.type = 'cartesian3D';\n  this.dimensions = ['x', 'y', 'z'];\n  this.size = [0, 0, 0];\n}\n\nCartesian3D.prototype = {\n  constructor: Cartesian3D,\n  model: null,\n  containPoint: function (point) {\n    return this.getAxis('x').contain(point[0]) && this.getAxis('y').contain(point[2]) && this.getAxis('z').contain(point[1]);\n  },\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]) && this.getAxis('z').containData(data[2]);\n  },\n  dataToPoint: function (data, out, clamp) {\n    out = out || [];\n    out[0] = this.getAxis('x').dataToCoord(data[0], clamp);\n    out[2] = this.getAxis('y').dataToCoord(data[1], clamp);\n    out[1] = this.getAxis('z').dataToCoord(data[2], clamp);\n    return out;\n  },\n  pointToData: function (point, out, clamp) {\n    out = out || [];\n    out[0] = this.getAxis('x').coordToData(point[0], clamp);\n    out[1] = this.getAxis('y').coordToData(point[2], clamp);\n    out[2] = this.getAxis('z').coordToData(point[1], clamp);\n    return out;\n  }\n};\necharts.util.inherits(Cartesian3D, Cartesian);\nexport default Cartesian3D;","import * as echarts from 'echarts/lib/echarts';\n\nfunction Axis3D(dim, scale, extent) {\n  echarts.Axis.call(this, dim, scale, extent);\n}\n\nAxis3D.prototype = {\n  constructor: Axis3D,\n  getExtentMin: function () {\n    var extent = this._extent;\n    return Math.min(extent[0], extent[1]);\n  },\n  getExtentMax: function () {\n    var extent = this._extent;\n    return Math.max(extent[0], extent[1]);\n  },\n  calculateCategoryInterval: function () {\n    // TODO consider label length\n    return Math.floor(this.scale.count() / 8);\n  }\n};\necharts.util.inherits(Axis3D, echarts.Axis);\nexport default Axis3D;","/*\n * @module echarts-gl/core/ViewGL\n * @author Yi Shen(http://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport ShadowMapPass from 'claygl/src/prePass/ShadowMap';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport EffectCompositor from '../effect/EffectCompositor';\nimport TemporalSuperSampling from '../effect/TemporalSuperSampling';\nimport halton from '../effect/halton';\n/**\n * @constructor\n * @alias module:echarts-gl/core/ViewGL\n * @param {string} [projection='perspective']\n */\n\nfunction ViewGL(projection) {\n  projection = projection || 'perspective';\n  /**\n   * @type {module:echarts-gl/core/LayerGL}\n   */\n\n  this.layer = null;\n  /**\n   * @type {clay.Scene}\n   */\n\n  this.scene = new Scene();\n  /**\n   * @type {clay.Node}\n   */\n\n  this.rootNode = this.scene;\n  this.viewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  this.setProjection(projection);\n  this._compositor = new EffectCompositor();\n  this._temporalSS = new TemporalSuperSampling();\n  this._shadowMapPass = new ShadowMapPass();\n  var pcfKernels = [];\n  var off = 0;\n\n  for (var i = 0; i < 30; i++) {\n    var pcfKernel = [];\n\n    for (var k = 0; k < 6; k++) {\n      pcfKernel.push(halton(off, 2) * 4.0 - 2.0);\n      pcfKernel.push(halton(off, 3) * 4.0 - 2.0);\n      off++;\n    }\n\n    pcfKernels.push(pcfKernel);\n  }\n\n  this._pcfKernels = pcfKernels;\n  this.scene.on('beforerender', function (renderer, scene, camera) {\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n  }, this);\n}\n/**\n * Set camera type of group\n * @param {string} cameraType 'perspective' | 'orthographic'\n */\n\n\nViewGL.prototype.setProjection = function (projection) {\n  var oldCamera = this.camera;\n  oldCamera && oldCamera.update();\n\n  if (projection === 'perspective') {\n    if (!(this.camera instanceof PerspectiveCamera)) {\n      this.camera = new PerspectiveCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } else {\n    if (!(this.camera instanceof OrthographicCamera)) {\n      this.camera = new OrthographicCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } // PENDING\n\n\n  this.camera.near = 0.1;\n  this.camera.far = 2000;\n};\n/**\n * Set viewport of group\n * @param {number} x Viewport left bottom x\n * @param {number} y Viewport left bottom y\n * @param {number} width Viewport height\n * @param {number} height Viewport height\n * @param {number} [dpr=1]\n */\n\n\nViewGL.prototype.setViewport = function (x, y, width, height, dpr) {\n  if (this.camera instanceof PerspectiveCamera) {\n    this.camera.aspect = width / height;\n  }\n\n  dpr = dpr || 1;\n  this.viewport.x = x;\n  this.viewport.y = y;\n  this.viewport.width = width;\n  this.viewport.height = height;\n  this.viewport.devicePixelRatio = dpr; // Source and output of compositor use high dpr texture.\n  // But the intermediate texture of bloom, dof effects use fixed 1.0 dpr\n\n  this._compositor.resize(width * dpr, height * dpr);\n\n  this._temporalSS.resize(width * dpr, height * dpr);\n};\n/**\n * If contain screen point x, y\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @return {boolean}\n */\n\n\nViewGL.prototype.containPoint = function (x, y) {\n  var viewport = this.viewport;\n  var height = this.layer.renderer.getHeight(); // Flip y;\n\n  y = height - y;\n  return x >= viewport.x && y >= viewport.y && x <= viewport.x + viewport.width && y <= viewport.y + viewport.height;\n};\n/**\n * Cast a ray\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @param {clay.math.Ray} out\n * @return {clay.math.Ray}\n */\n\n\nvar ndc = new Vector2();\n\nViewGL.prototype.castRay = function (x, y, out) {\n  var renderer = this.layer.renderer;\n  var oldViewport = renderer.viewport;\n  renderer.viewport = this.viewport;\n  renderer.screenToNDC(x, y, ndc);\n  this.camera.castRay(ndc, out);\n  renderer.viewport = oldViewport;\n  return out;\n};\n/**\n * Prepare and update scene before render\n */\n\n\nViewGL.prototype.prepareRender = function () {\n  this.scene.update();\n  this.camera.update();\n  this.scene.updateLights();\n  var renderList = this.scene.updateRenderList(this.camera);\n  this._needsSortProgressively = false; // If has any transparent mesh needs sort triangles progressively.\n\n  for (var i = 0; i < renderList.transparent.length; i++) {\n    var renderable = renderList.transparent[i];\n    var geometry = renderable.geometry;\n\n    if (geometry.needsSortVerticesProgressively && geometry.needsSortVerticesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n\n    if (geometry.needsSortTrianglesProgressively && geometry.needsSortTrianglesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n  }\n\n  this._frame = 0;\n\n  this._temporalSS.resetFrame(); // var lights = this.scene.getLights();\n  // for (var i = 0; i < lights.length; i++) {\n  //     if (lights[i].cubemap) {\n  //         if (this._compositor && this._compositor.isSSREnabled()) {\n  //             lights[i].invisible = true;\n  //         }\n  //         else {\n  //             lights[i].invisible = false;\n  //         }\n  //     }\n  // }\n\n};\n\nViewGL.prototype.render = function (renderer, accumulating) {\n  this._doRender(renderer, accumulating, this._frame);\n\n  this._frame++;\n};\n\nViewGL.prototype.needsAccumulate = function () {\n  return this.needsTemporalSS() || this._needsSortProgressively;\n};\n\nViewGL.prototype.needsTemporalSS = function () {\n  var enableTemporalSS = this._enableTemporalSS;\n\n  if (enableTemporalSS === 'auto') {\n    enableTemporalSS = this._enablePostEffect;\n  }\n\n  return enableTemporalSS;\n};\n\nViewGL.prototype.hasDOF = function () {\n  return this._enableDOF;\n};\n\nViewGL.prototype.isAccumulateFinished = function () {\n  return this.needsTemporalSS() ? this._temporalSS.isFinished() : this._frame > 30;\n};\n\nViewGL.prototype._doRender = function (renderer, accumulating, accumFrame) {\n  var scene = this.scene;\n  var camera = this.camera;\n  accumFrame = accumFrame || 0;\n\n  this._updateTransparent(renderer, scene, camera, accumFrame);\n\n  if (!accumulating) {\n    this._shadowMapPass.kernelPCF = this._pcfKernels[0]; // Not render shadowmap pass in accumulating frame.\n\n    this._shadowMapPass.render(renderer, scene, camera, true);\n  }\n\n  this._updateShadowPCFKernel(accumFrame); // Shadowmap will set clear color.\n\n\n  var bgColor = renderer.clearColor;\n  renderer.gl.clearColor(bgColor[0], bgColor[1], bgColor[2], bgColor[3]);\n\n  if (this._enablePostEffect) {\n    // normal render also needs to be jittered when have edge pass.\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n\n    this._compositor.updateNormal(renderer, scene, camera, this._temporalSS.getFrame());\n  } // Always update SSAO to make sure have correct ssaoMap status\n\n\n  this._updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n\n  if (this._enablePostEffect) {\n    var frameBuffer = this._compositor.getSourceFrameBuffer();\n\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    renderer.render(scene, camera, true, true);\n    frameBuffer.unbind(renderer);\n\n    if (this.needsTemporalSS() && accumulating) {\n      this._compositor.composite(renderer, scene, camera, this._temporalSS.getSourceFrameBuffer(), this._temporalSS.getFrame());\n\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n\n      this._compositor.composite(renderer, scene, camera, null, 0);\n    }\n  } else {\n    if (this.needsTemporalSS() && accumulating) {\n      var frameBuffer = this._temporalSS.getSourceFrameBuffer();\n\n      frameBuffer.bind(renderer);\n      renderer.saveClear();\n      renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT;\n      renderer.render(scene, camera, true, true);\n      renderer.restoreClear();\n      frameBuffer.unbind(renderer);\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n      renderer.render(scene, camera, true, true);\n    }\n  } // this._shadowMapPass.renderDebug(renderer);\n  // this._compositor._normalPass.renderDebug(renderer);\n\n};\n\nViewGL.prototype._updateTransparent = function (renderer, scene, camera, frame) {\n  var v3 = new Vector3();\n  var invWorldTransform = new Matrix4();\n  var cameraWorldPosition = camera.getWorldPosition();\n  var transparentList = scene.getRenderList(camera).transparent; // Sort transparent object.\n\n  for (var i = 0; i < transparentList.length; i++) {\n    var renderable = transparentList[i];\n    var geometry = renderable.geometry;\n    Matrix4.invert(invWorldTransform, renderable.worldTransform);\n    Vector3.transformMat4(v3, cameraWorldPosition, invWorldTransform);\n\n    if (geometry.needsSortTriangles && geometry.needsSortTriangles()) {\n      geometry.doSortTriangles(v3, frame);\n    }\n\n    if (geometry.needsSortVertices && geometry.needsSortVertices()) {\n      geometry.doSortVertices(v3, frame);\n    }\n  }\n};\n\nViewGL.prototype._updateSSAO = function (renderer, scene, camera) {\n  var ifEnableSSAO = this._enableSSAO && this._enablePostEffect;\n\n  if (ifEnableSSAO) {\n    this._compositor.updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n  }\n\n  var renderList = scene.getRenderList(camera);\n\n  for (var i = 0; i < renderList.opaque.length; i++) {\n    var renderable = renderList.opaque[i]; // PENDING\n\n    if (renderable.renderNormal) {\n      renderable.material[ifEnableSSAO ? 'enableTexture' : 'disableTexture']('ssaoMap');\n    }\n\n    if (ifEnableSSAO) {\n      renderable.material.set('ssaoMap', this._compositor.getSSAOTexture());\n    }\n  }\n};\n\nViewGL.prototype._updateShadowPCFKernel = function (frame) {\n  var pcfKernel = this._pcfKernels[frame % this._pcfKernels.length];\n  var renderList = this.scene.getRenderList(this.camera);\n  var opaqueList = renderList.opaque;\n\n  for (var i = 0; i < opaqueList.length; i++) {\n    if (opaqueList[i].receiveShadow) {\n      opaqueList[i].material.set('pcfKernel', pcfKernel);\n      opaqueList[i].material.define('fragment', 'PCF_KERNEL_SIZE', pcfKernel.length / 2);\n    }\n  }\n};\n\nViewGL.prototype.dispose = function (renderer) {\n  this._compositor.dispose(renderer.gl);\n\n  this._temporalSS.dispose(renderer.gl);\n\n  this._shadowMapPass.dispose(renderer);\n};\n/**\n * @param {module:echarts/Model} Post effect model\n */\n\n\nViewGL.prototype.setPostEffect = function (postEffectModel, api) {\n  var compositor = this._compositor;\n  this._enablePostEffect = postEffectModel.get('enable');\n  var bloomModel = postEffectModel.getModel('bloom');\n  var edgeModel = postEffectModel.getModel('edge');\n  var dofModel = postEffectModel.getModel('DOF', postEffectModel.getModel('depthOfField'));\n  var ssaoModel = postEffectModel.getModel('SSAO', postEffectModel.getModel('screenSpaceAmbientOcclusion'));\n  var ssrModel = postEffectModel.getModel('SSR', postEffectModel.getModel('screenSpaceReflection'));\n  var fxaaModel = postEffectModel.getModel('FXAA');\n  var colorCorrModel = postEffectModel.getModel('colorCorrection');\n  bloomModel.get('enable') ? compositor.enableBloom() : compositor.disableBloom();\n  dofModel.get('enable') ? compositor.enableDOF() : compositor.disableDOF();\n  ssrModel.get('enable') ? compositor.enableSSR() : compositor.disableSSR();\n  colorCorrModel.get('enable') ? compositor.enableColorCorrection() : compositor.disableColorCorrection();\n  edgeModel.get('enable') ? compositor.enableEdge() : compositor.disableEdge();\n  fxaaModel.get('enable') ? compositor.enableFXAA() : compositor.disableFXAA();\n  this._enableDOF = dofModel.get('enable');\n  this._enableSSAO = ssaoModel.get('enable');\n  this._enableSSAO ? compositor.enableSSAO() : compositor.disableSSAO();\n  compositor.setBloomIntensity(bloomModel.get('intensity'));\n  compositor.setEdgeColor(edgeModel.get('color'));\n  compositor.setColorLookupTexture(colorCorrModel.get('lookupTexture'), api);\n  compositor.setExposure(colorCorrModel.get('exposure'));\n  ['radius', 'quality', 'intensity'].forEach(function (name) {\n    compositor.setSSAOParameter(name, ssaoModel.get(name));\n  });\n  ['quality', 'maxRoughness', 'physical'].forEach(function (name) {\n    compositor.setSSRParameter(name, ssrModel.get(name));\n  });\n  ['quality', 'focalDistance', 'focalRange', 'blurRadius', 'fstop'].forEach(function (name) {\n    compositor.setDOFParameter(name, dofModel.get(name));\n  });\n  ['brightness', 'contrast', 'saturation'].forEach(function (name) {\n    compositor.setColorCorrection(name, colorCorrModel.get(name));\n  });\n};\n\nViewGL.prototype.setDOFFocusOnPoint = function (depth) {\n  if (this._enablePostEffect) {\n    if (depth > this.camera.far || depth < this.camera.near) {\n      return;\n    }\n\n    this._compositor.setDOFParameter('focalDistance', depth);\n\n    return true;\n  }\n};\n\nViewGL.prototype.setTemporalSuperSampling = function (temporalSuperSamplingModel) {\n  this._enableTemporalSS = temporalSuperSamplingModel.get('enable');\n};\n\nViewGL.prototype.isLinearSpace = function () {\n  return this._enablePostEffect;\n};\n\nViewGL.prototype.setRootNode = function (rootNode) {\n  if (this.rootNode === rootNode) {\n    return;\n  }\n\n  var children = this.rootNode.children();\n\n  for (var i = 0; i < children.length; i++) {\n    rootNode.add(children[i]);\n  }\n\n  if (rootNode !== this.scene) {\n    this.scene.add(rootNode);\n  }\n\n  this.rootNode = rootNode;\n}; // Proxies\n\n\nViewGL.prototype.add = function (node3D) {\n  this.rootNode.add(node3D);\n};\n\nViewGL.prototype.remove = function (node3D) {\n  this.rootNode.remove(node3D);\n};\n\nViewGL.prototype.removeAll = function (node3D) {\n  this.rootNode.removeAll(node3D);\n};\n\nObject.assign(ViewGL.prototype, notifier);\nexport default ViewGL;","import Base from '../core/Base';\nimport glenum from '../core/glenum';\nimport Vector3 from '../math/Vector3';\nimport BoundingBox from '../math/BoundingBox';\nimport Frustum from '../math/Frustum';\nimport Matrix4 from '../math/Matrix4';\nimport Renderer from '../Renderer';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport FrameBuffer from '../FrameBuffer';\nimport Texture from '../Texture';\nimport Texture2D from '../Texture2D';\nimport TextureCube from '../TextureCube';\nimport PerspectiveCamera from '../camera/Perspective';\nimport OrthoCamera from '../camera/Orthographic';\n\nimport Pass from '../compositor/Pass';\nimport TexturePool from '../compositor/TexturePool';\n\nimport mat4 from '../glmatrix/mat4';\n\nvar targets = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\nimport shadowmapEssl from '../shader/source/shadowmap.glsl.js';\nShader['import'](shadowmapEssl);\n\nfunction getDepthMaterialUniform(renderable, depthMaterial, symbol) {\n    if (symbol === 'alphaMap') {\n        return renderable.material.get('diffuseMap');\n    }\n    else if (symbol === 'alphaCutoff') {\n        if (renderable.material.isDefined('fragment', 'ALPHA_TEST')\n            && renderable.material.get('diffuseMap')\n        ) {\n            var alphaCutoff = renderable.material.get('alphaCutoff');\n            return alphaCutoff || 0;\n        }\n        return 0;\n    }\n    else if (symbol === 'uvRepeat') {\n        return renderable.material.get('uvRepeat');\n    }\n    else if (symbol === 'uvOffset') {\n        return renderable.material.get('uvOffset');\n    }\n    else {\n        return depthMaterial.get(symbol);\n    }\n}\n\nfunction isDepthMaterialChanged(renderable, prevRenderable) {\n    var matA = renderable.material;\n    var matB = prevRenderable.material;\n    return matA.get('diffuseMap') !== matB.get('diffuseMap')\n        || (matA.get('alphaCutoff') || 0) !== (matB.get('alphaCutoff') || 0);\n}\n\n/**\n * Pass rendering shadow map.\n *\n * @constructor clay.prePass.ShadowMap\n * @extends clay.core.Base\n * @example\n *     var shadowMapPass = new clay.prePass.ShadowMap({\n *         softShadow: clay.prePass.ShadowMap.VSM\n *     });\n *     ...\n *     animation.on('frame', function (frameTime) {\n *         shadowMapPass.render(renderer, scene, camera);\n *         renderer.render(scene, camera);\n *     });\n */\nvar ShadowMapPass = Base.extend(function () {\n    return /** @lends clay.prePass.ShadowMap# */ {\n        /**\n         * Soft shadow technique.\n         * Can be {@link clay.prePass.ShadowMap.PCF} or {@link clay.prePass.ShadowMap.VSM}\n         * @type {number}\n         */\n        softShadow: ShadowMapPass.PCF,\n\n        /**\n         * Soft shadow blur size\n         * @type {number}\n         */\n        shadowBlur: 1.0,\n\n        lightFrustumBias: 'auto',\n\n        kernelPCF: new Float32Array([\n            1, 0,\n            1, 1,\n            -1, 1,\n            0, 1,\n            -1, 0,\n            -1, -1,\n            1, -1,\n            0, -1\n        ]),\n\n        precision: 'highp',\n\n        _lastRenderNotCastShadow: false,\n\n        _frameBuffer: new FrameBuffer(),\n\n        _textures: {},\n        _shadowMapNumber: {\n            'POINT_LIGHT': 0,\n            'DIRECTIONAL_LIGHT': 0,\n            'SPOT_LIGHT': 0\n        },\n\n        _depthMaterials: {},\n        _distanceMaterials: {},\n\n        _receivers: [],\n        _lightsCastShadow: [],\n\n        _lightCameras: {},\n        _lightMaterials: {},\n\n        _texturePool: new TexturePool()\n    };\n}, function () {\n    // Gaussian filter pass for VSM\n    this._gaussianPassH = new Pass({\n        fragment: Shader.source('clay.compositor.gaussian_blur')\n    });\n    this._gaussianPassV = new Pass({\n        fragment: Shader.source('clay.compositor.gaussian_blur')\n    });\n    this._gaussianPassH.setUniform('blurSize', this.shadowBlur);\n    this._gaussianPassH.setUniform('blurDir', 0.0);\n    this._gaussianPassV.setUniform('blurSize', this.shadowBlur);\n    this._gaussianPassV.setUniform('blurDir', 1.0);\n\n    this._outputDepthPass = new Pass({\n        fragment: Shader.source('clay.sm.debug_depth')\n    });\n}, {\n    /**\n     * Render scene to shadow textures\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.Scene} scene\n     * @param  {clay.Camera} sceneCamera\n     * @param  {boolean} [notUpdateScene=false]\n     * @memberOf clay.prePass.ShadowMap.prototype\n     */\n    render: function (renderer, scene, sceneCamera, notUpdateScene) {\n        if (!sceneCamera) {\n            sceneCamera = scene.getMainCamera();\n        }\n        this.trigger('beforerender', this, renderer, scene, sceneCamera);\n        this._renderShadowPass(renderer, scene, sceneCamera, notUpdateScene);\n        this.trigger('afterrender', this, renderer, scene, sceneCamera);\n    },\n\n    /**\n     * Debug rendering of shadow textures\n     * @param  {clay.Renderer} renderer\n     * @param  {number} size\n     * @memberOf clay.prePass.ShadowMap.prototype\n     */\n    renderDebug: function (renderer, size) {\n        renderer.saveClear();\n        var viewport = renderer.viewport;\n        var x = 0, y = 0;\n        var width = size || viewport.width / 4;\n        var height = width;\n        if (this.softShadow === ShadowMapPass.VSM) {\n            this._outputDepthPass.material.define('fragment', 'USE_VSM');\n        }\n        else {\n            this._outputDepthPass.material.undefine('fragment', 'USE_VSM');\n        }\n        for (var name in this._textures) {\n            var texture = this._textures[name];\n            renderer.setViewport(x, y, width * texture.width / texture.height, height);\n            this._outputDepthPass.setUniform('depthMap', texture);\n            this._outputDepthPass.render(renderer);\n            x += width * texture.width / texture.height;\n        }\n        renderer.setViewport(viewport);\n        renderer.restoreClear();\n    },\n\n    _updateReceivers: function (renderer, mesh) {\n        if (mesh.receiveShadow) {\n            this._receivers.push(mesh);\n            mesh.material.set('shadowEnabled', 1);\n\n            mesh.material.set('pcfKernel', this.kernelPCF);\n        }\n        else {\n            mesh.material.set('shadowEnabled', 0);\n        }\n\n        if (this.softShadow === ShadowMapPass.VSM) {\n            mesh.material.define('fragment', 'USE_VSM');\n            mesh.material.undefine('fragment', 'PCF_KERNEL_SIZE');\n        }\n        else {\n            mesh.material.undefine('fragment', 'USE_VSM');\n            var kernelPCF = this.kernelPCF;\n            if (kernelPCF && kernelPCF.length) {\n                mesh.material.define('fragment', 'PCF_KERNEL_SIZE', kernelPCF.length / 2);\n            }\n            else {\n                mesh.material.undefine('fragment', 'PCF_KERNEL_SIZE');\n            }\n        }\n    },\n\n    _update: function (renderer, scene) {\n        var self = this;\n        scene.traverse(function (renderable) {\n            if (renderable.isRenderable()) {\n                self._updateReceivers(renderer, renderable);\n            }\n        });\n\n        for (var i = 0; i < scene.lights.length; i++) {\n            var light = scene.lights[i];\n            if (light.castShadow && !light.invisible) {\n                this._lightsCastShadow.push(light);\n            }\n        }\n    },\n\n    _renderShadowPass: function (renderer, scene, sceneCamera, notUpdateScene) {\n        // reset\n        for (var name in this._shadowMapNumber) {\n            this._shadowMapNumber[name] = 0;\n        }\n        this._lightsCastShadow.length = 0;\n        this._receivers.length = 0;\n\n        var _gl = renderer.gl;\n\n        if (!notUpdateScene) {\n            scene.update();\n        }\n        if (sceneCamera) {\n            sceneCamera.update();\n        }\n\n        scene.updateLights();\n        this._update(renderer, scene);\n\n        // Needs to update the receivers again if shadows come from 1 to 0.\n        if (!this._lightsCastShadow.length && this._lastRenderNotCastShadow) {\n            return;\n        }\n\n        this._lastRenderNotCastShadow = this._lightsCastShadow === 0;\n\n        _gl.enable(_gl.DEPTH_TEST);\n        _gl.depthMask(true);\n        _gl.disable(_gl.BLEND);\n\n        // Clear with high-z, so the part not rendered will not been shadowed\n        // TODO\n        // TODO restore\n        _gl.clearColor(1.0, 1.0, 1.0, 1.0);\n\n        // Shadow uniforms\n        var spotLightShadowMaps = [];\n        var spotLightMatrices = [];\n        var directionalLightShadowMaps = [];\n        var directionalLightMatrices = [];\n        var shadowCascadeClips = [];\n        var pointLightShadowMaps = [];\n\n        var dirLightHasCascade;\n        // Create textures for shadow map\n        for (var i = 0; i < this._lightsCastShadow.length; i++) {\n            var light = this._lightsCastShadow[i];\n            if (light.type === 'DIRECTIONAL_LIGHT') {\n\n                if (dirLightHasCascade) {\n                    console.warn('Only one direectional light supported with shadow cascade');\n                    continue;\n                }\n                if (light.shadowCascade > 4) {\n                    console.warn('Support at most 4 cascade');\n                    continue;\n                }\n                if (light.shadowCascade > 1) {\n                    dirLightHasCascade = light;\n                }\n\n                this.renderDirectionalLightShadow(\n                    renderer,\n                    scene,\n                    sceneCamera,\n                    light,\n                    shadowCascadeClips,\n                    directionalLightMatrices,\n                    directionalLightShadowMaps\n                );\n            }\n            else if (light.type === 'SPOT_LIGHT') {\n                this.renderSpotLightShadow(\n                    renderer,\n                    scene,\n                    light,\n                    spotLightMatrices,\n                    spotLightShadowMaps\n                );\n            }\n            else if (light.type === 'POINT_LIGHT') {\n                this.renderPointLightShadow(\n                    renderer,\n                    scene,\n                    light,\n                    pointLightShadowMaps\n                );\n            }\n\n            this._shadowMapNumber[light.type]++;\n        }\n\n        for (var lightType in this._shadowMapNumber) {\n            var number = this._shadowMapNumber[lightType];\n            var key = lightType + '_SHADOWMAP_COUNT';\n            for (var i = 0; i < this._receivers.length; i++) {\n                var mesh = this._receivers[i];\n                var material = mesh.material;\n                if (material.fragmentDefines[key] !== number) {\n                    if (number > 0) {\n                        material.define('fragment', key, number);\n                    }\n                    else if (material.isDefined('fragment', key)) {\n                        material.undefine('fragment', key);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < this._receivers.length; i++) {\n            var mesh = this._receivers[i];\n            var material = mesh.material;\n            if (dirLightHasCascade) {\n                material.define('fragment', 'SHADOW_CASCADE', dirLightHasCascade.shadowCascade);\n            }\n            else {\n                material.undefine('fragment', 'SHADOW_CASCADE');\n            }\n        }\n\n        var shadowUniforms = scene.shadowUniforms;\n\n        function getSize(texture) {\n            return texture.height;\n        }\n        if (directionalLightShadowMaps.length > 0) {\n            var directionalLightShadowMapSizes = directionalLightShadowMaps.map(getSize);\n            shadowUniforms.directionalLightShadowMaps = { value: directionalLightShadowMaps, type: 'tv' };\n            shadowUniforms.directionalLightMatrices = { value: directionalLightMatrices, type: 'm4v' };\n            shadowUniforms.directionalLightShadowMapSizes = { value: directionalLightShadowMapSizes, type: '1fv' };\n            if (dirLightHasCascade) {\n                var shadowCascadeClipsNear = shadowCascadeClips.slice();\n                var shadowCascadeClipsFar = shadowCascadeClips.slice();\n                shadowCascadeClipsNear.pop();\n                shadowCascadeClipsFar.shift();\n\n                // Iterate from far to near\n                shadowCascadeClipsNear.reverse();\n                shadowCascadeClipsFar.reverse();\n                // directionalLightShadowMaps.reverse();\n                directionalLightMatrices.reverse();\n                shadowUniforms.shadowCascadeClipsNear = { value: shadowCascadeClipsNear, type: '1fv' };\n                shadowUniforms.shadowCascadeClipsFar = { value: shadowCascadeClipsFar, type: '1fv' };\n            }\n        }\n\n        if (spotLightShadowMaps.length > 0) {\n            var spotLightShadowMapSizes = spotLightShadowMaps.map(getSize);\n            var shadowUniforms = scene.shadowUniforms;\n            shadowUniforms.spotLightShadowMaps = { value: spotLightShadowMaps, type: 'tv' };\n            shadowUniforms.spotLightMatrices = { value: spotLightMatrices, type: 'm4v' };\n            shadowUniforms.spotLightShadowMapSizes = { value: spotLightShadowMapSizes, type: '1fv' };\n        }\n\n        if (pointLightShadowMaps.length > 0) {\n            shadowUniforms.pointLightShadowMaps = { value: pointLightShadowMaps, type: 'tv' };\n        }\n    },\n\n    renderDirectionalLightShadow: (function () {\n\n        var splitFrustum = new Frustum();\n        var splitProjMatrix = new Matrix4();\n        var cropBBox = new BoundingBox();\n        var cropMatrix = new Matrix4();\n        var lightViewMatrix = new Matrix4();\n        var lightViewProjMatrix = new Matrix4();\n        var lightProjMatrix = new Matrix4();\n\n        return function (renderer, scene, sceneCamera, light, shadowCascadeClips, directionalLightMatrices, directionalLightShadowMaps) {\n\n            var defaultShadowMaterial = this._getDepthMaterial(light);\n            var passConfig = {\n                getMaterial: function (renderable) {\n                    return renderable.shadowDepthMaterial || defaultShadowMaterial;\n                },\n                isMaterialChanged: isDepthMaterialChanged,\n                getUniform: getDepthMaterialUniform,\n                ifRender: function (renderable) {\n                    return renderable.castShadow;\n                },\n                sortCompare: Renderer.opaqueSortCompare\n            };\n\n            // First frame\n            if (!scene.viewBoundingBoxLastFrame.isFinite()) {\n                var boundingBox = scene.getBoundingBox();\n                scene.viewBoundingBoxLastFrame\n                    .copy(boundingBox).applyTransform(sceneCamera.viewMatrix);\n            }\n            // Considering moving speed since the bounding box is from last frame\n            // TODO: add a bias\n            var clippedFar = Math.min(-scene.viewBoundingBoxLastFrame.min.z, sceneCamera.far);\n            var clippedNear = Math.max(-scene.viewBoundingBoxLastFrame.max.z, sceneCamera.near);\n\n            var lightCamera = this._getDirectionalLightCamera(light, scene, sceneCamera);\n\n            var lvpMat4Arr = lightViewProjMatrix.array;\n            lightProjMatrix.copy(lightCamera.projectionMatrix);\n            mat4.invert(lightViewMatrix.array, lightCamera.worldTransform.array);\n            mat4.multiply(lightViewMatrix.array, lightViewMatrix.array, sceneCamera.worldTransform.array);\n            mat4.multiply(lvpMat4Arr, lightProjMatrix.array, lightViewMatrix.array);\n\n            var clipPlanes = [];\n            var isPerspective = sceneCamera instanceof PerspectiveCamera;\n\n            var scaleZ = (sceneCamera.near + sceneCamera.far) / (sceneCamera.near - sceneCamera.far);\n            var offsetZ = 2 * sceneCamera.near * sceneCamera.far / (sceneCamera.near - sceneCamera.far);\n            for (var i = 0; i <= light.shadowCascade; i++) {\n                var clog = clippedNear * Math.pow(clippedFar / clippedNear, i / light.shadowCascade);\n                var cuni = clippedNear + (clippedFar - clippedNear) * i / light.shadowCascade;\n                var c = clog * light.cascadeSplitLogFactor + cuni * (1 - light.cascadeSplitLogFactor);\n                clipPlanes.push(c);\n                shadowCascadeClips.push(-(-c * scaleZ + offsetZ) / -c);\n            }\n            var texture = this._getTexture(light, light.shadowCascade);\n            directionalLightShadowMaps.push(texture);\n\n            var viewport = renderer.viewport;\n\n            var _gl = renderer.gl;\n            this._frameBuffer.attach(texture);\n            this._frameBuffer.bind(renderer);\n            _gl.clear(_gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT);\n\n            for (var i = 0; i < light.shadowCascade; i++) {\n                // Get the splitted frustum\n                var nearPlane = clipPlanes[i];\n                var farPlane = clipPlanes[i + 1];\n                if (isPerspective) {\n                    mat4.perspective(splitProjMatrix.array, sceneCamera.fov / 180 * Math.PI, sceneCamera.aspect, nearPlane, farPlane);\n                }\n                else {\n                    mat4.ortho(\n                        splitProjMatrix.array,\n                        sceneCamera.left, sceneCamera.right, sceneCamera.bottom, sceneCamera.top,\n                        nearPlane, farPlane\n                    );\n                }\n                splitFrustum.setFromProjection(splitProjMatrix);\n                splitFrustum.getTransformedBoundingBox(cropBBox, lightViewMatrix);\n                cropBBox.applyProjection(lightProjMatrix);\n                var _min = cropBBox.min.array;\n                var _max = cropBBox.max.array;\n                _min[0] = Math.max(_min[0], -1);\n                _min[1] = Math.max(_min[1], -1);\n                _max[0] = Math.min(_max[0], 1);\n                _max[1] = Math.min(_max[1], 1);\n                cropMatrix.ortho(_min[0], _max[0], _min[1], _max[1], 1, -1);\n                lightCamera.projectionMatrix.multiplyLeft(cropMatrix);\n\n                var shadowSize = light.shadowResolution || 512;\n\n                // Reversed, left to right => far to near\n                renderer.setViewport((light.shadowCascade - i - 1) * shadowSize, 0, shadowSize, shadowSize, 1);\n\n                var renderList = scene.updateRenderList(lightCamera);\n                renderer.renderPass(renderList.opaque, lightCamera, passConfig);\n\n                // Filter for VSM\n                if (this.softShadow === ShadowMapPass.VSM) {\n                    this._gaussianFilter(renderer, texture, texture.width);\n                }\n\n                var matrix = new Matrix4();\n                matrix.copy(lightCamera.viewMatrix)\n                    .multiplyLeft(lightCamera.projectionMatrix);\n\n                directionalLightMatrices.push(matrix.array);\n\n                lightCamera.projectionMatrix.copy(lightProjMatrix);\n            }\n\n            this._frameBuffer.unbind(renderer);\n\n            renderer.setViewport(viewport);\n        };\n    })(),\n\n    renderSpotLightShadow: function (renderer, scene, light, spotLightMatrices, spotLightShadowMaps) {\n\n        var texture = this._getTexture(light);\n        var lightCamera = this._getSpotLightCamera(light);\n        var _gl = renderer.gl;\n\n        this._frameBuffer.attach(texture);\n        this._frameBuffer.bind(renderer);\n\n        _gl.clear(_gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT);\n\n        var defaultShadowMaterial = this._getDepthMaterial(light);\n        var passConfig = {\n            getMaterial: function (renderable) {\n                return renderable.shadowDepthMaterial || defaultShadowMaterial;\n            },\n            isMaterialChanged: isDepthMaterialChanged,\n            getUniform: getDepthMaterialUniform,\n            ifRender: function (renderable) {\n                return renderable.castShadow;\n            },\n            sortCompare: Renderer.opaqueSortCompare\n        };\n\n        var renderList = scene.updateRenderList(lightCamera);\n        renderer.renderPass(renderList.opaque, lightCamera, passConfig);\n\n        this._frameBuffer.unbind(renderer);\n\n        // Filter for VSM\n        if (this.softShadow === ShadowMapPass.VSM) {\n            this._gaussianFilter(renderer, texture, texture.width);\n        }\n\n        var matrix = new Matrix4();\n        matrix.copy(lightCamera.worldTransform)\n            .invert()\n            .multiplyLeft(lightCamera.projectionMatrix);\n\n        spotLightShadowMaps.push(texture);\n        spotLightMatrices.push(matrix.array);\n    },\n\n    renderPointLightShadow: function (renderer, scene, light, pointLightShadowMaps) {\n        var texture = this._getTexture(light);\n        var _gl = renderer.gl;\n        pointLightShadowMaps.push(texture);\n\n        var defaultShadowMaterial = this._getDepthMaterial(light);\n        var passConfig = {\n            getMaterial: function (renderable) {\n                return renderable.shadowDepthMaterial || defaultShadowMaterial;\n            },\n            getUniform: getDepthMaterialUniform,\n            sortCompare: Renderer.opaqueSortCompare\n        };\n\n        var renderListEachSide = {\n            px: [], py: [], pz: [], nx: [], ny: [], nz: []\n        };\n        var bbox = new BoundingBox();\n        var lightWorldPosition = light.getWorldPosition().array;\n        var lightBBox = new BoundingBox();\n        var range = light.range;\n        lightBBox.min.setArray(lightWorldPosition);\n        lightBBox.max.setArray(lightWorldPosition);\n        var extent = new Vector3(range, range, range);\n        lightBBox.max.add(extent);\n        lightBBox.min.sub(extent);\n\n        var targetsNeedRender = { px: false, py: false, pz: false, nx: false, ny: false, nz: false };\n        scene.traverse(function (renderable) {\n            if (renderable.isRenderable() && renderable.castShadow) {\n                var geometry = renderable.geometry;\n                if (!geometry.boundingBox) {\n                    for (var i = 0; i < targets.length; i++) {\n                        renderListEachSide[targets[i]].push(renderable);\n                    }\n                    return;\n                }\n                bbox.transformFrom(geometry.boundingBox, renderable.worldTransform);\n                if (!bbox.intersectBoundingBox(lightBBox)) {\n                    return;\n                }\n\n                bbox.updateVertices();\n                for (var i = 0; i < targets.length; i++) {\n                    targetsNeedRender[targets[i]] = false;\n                }\n                for (var i = 0; i < 8; i++) {\n                    var vtx = bbox.vertices[i];\n                    var x = vtx[0] - lightWorldPosition[0];\n                    var y = vtx[1] - lightWorldPosition[1];\n                    var z = vtx[2] - lightWorldPosition[2];\n                    var absx = Math.abs(x);\n                    var absy = Math.abs(y);\n                    var absz = Math.abs(z);\n                    if (absx > absy) {\n                        if (absx > absz) {\n                            targetsNeedRender[x > 0 ? 'px' : 'nx'] = true;\n                        }\n                        else {\n                            targetsNeedRender[z > 0 ? 'pz' : 'nz'] = true;\n                        }\n                    }\n                    else {\n                        if (absy > absz) {\n                            targetsNeedRender[y > 0 ? 'py' : 'ny'] = true;\n                        }\n                        else {\n                            targetsNeedRender[z > 0 ? 'pz' : 'nz'] = true;\n                        }\n                    }\n                }\n                for (var i = 0; i < targets.length; i++) {\n                    if (targetsNeedRender[targets[i]]) {\n                        renderListEachSide[targets[i]].push(renderable);\n                    }\n                }\n            }\n        });\n\n        for (var i = 0; i < 6; i++) {\n            var target = targets[i];\n            var camera = this._getPointLightCamera(light, target);\n\n            this._frameBuffer.attach(texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n            this._frameBuffer.bind(renderer);\n            _gl.clear(_gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT);\n\n            renderer.renderPass(renderListEachSide[target], camera, passConfig);\n        }\n\n        this._frameBuffer.unbind(renderer);\n    },\n\n    _getDepthMaterial: function (light) {\n        var shadowMaterial = this._lightMaterials[light.__uid__];\n        var isPointLight = light.type === 'POINT_LIGHT';\n        if (!shadowMaterial) {\n            var shaderPrefix = isPointLight ? 'clay.sm.distance.' : 'clay.sm.depth.';\n            shadowMaterial = new Material({\n                precision: this.precision,\n                shader: new Shader(Shader.source(shaderPrefix + 'vertex'), Shader.source(shaderPrefix + 'fragment'))\n            });\n\n            this._lightMaterials[light.__uid__] = shadowMaterial;\n        }\n        if (light.shadowSlopeScale != null) {\n            shadowMaterial.setUniform('slopeScale', light.shadowSlopeScale);\n        }\n        if (light.shadowBias != null) {\n            shadowMaterial.setUniform('bias', light.shadowBias);\n        }\n        if (this.softShadow === ShadowMapPass.VSM) {\n            shadowMaterial.define('fragment', 'USE_VSM');\n        }\n        else {\n            shadowMaterial.undefine('fragment', 'USE_VSM');\n        }\n\n        if (isPointLight) {\n            shadowMaterial.set('lightPosition', light.getWorldPosition().array);\n            shadowMaterial.set('range', light.range);\n        }\n\n        return shadowMaterial;\n    },\n\n    _gaussianFilter: function (renderer, texture, size) {\n        var parameter = {\n            width: size,\n            height: size,\n            type: Texture.FLOAT\n        };\n        var tmpTexture = this._texturePool.get(parameter);\n\n        this._frameBuffer.attach(tmpTexture);\n        this._frameBuffer.bind(renderer);\n        this._gaussianPassH.setUniform('texture', texture);\n        this._gaussianPassH.setUniform('textureWidth', size);\n        this._gaussianPassH.render(renderer);\n\n        this._frameBuffer.attach(texture);\n        this._gaussianPassV.setUniform('texture', tmpTexture);\n        this._gaussianPassV.setUniform('textureHeight', size);\n        this._gaussianPassV.render(renderer);\n        this._frameBuffer.unbind(renderer);\n\n        this._texturePool.put(tmpTexture);\n    },\n\n    _getTexture: function (light, cascade) {\n        var key = light.__uid__;\n        var texture = this._textures[key];\n        var resolution = light.shadowResolution || 512;\n        cascade = cascade || 1;\n        if (!texture) {\n            if (light.type === 'POINT_LIGHT') {\n                texture = new TextureCube();\n            }\n            else {\n                texture = new Texture2D();\n            }\n            // At most 4 cascade\n            // TODO share with height ?\n            texture.width = resolution * cascade;\n            texture.height = resolution;\n            if (this.softShadow === ShadowMapPass.VSM) {\n                texture.type = Texture.FLOAT;\n                texture.anisotropic = 4;\n            }\n            else {\n                texture.minFilter = glenum.NEAREST;\n                texture.magFilter = glenum.NEAREST;\n                texture.useMipmap = false;\n            }\n            this._textures[key] = texture;\n        }\n\n        return texture;\n    },\n\n    _getPointLightCamera: function (light, target) {\n        if (!this._lightCameras.point) {\n            this._lightCameras.point = {\n                px: new PerspectiveCamera(),\n                nx: new PerspectiveCamera(),\n                py: new PerspectiveCamera(),\n                ny: new PerspectiveCamera(),\n                pz: new PerspectiveCamera(),\n                nz: new PerspectiveCamera()\n            };\n        }\n        var camera = this._lightCameras.point[target];\n\n        camera.far = light.range;\n        camera.fov = 90;\n        camera.position.set(0, 0, 0);\n        switch (target) {\n            case 'px':\n                camera.lookAt(Vector3.POSITIVE_X, Vector3.NEGATIVE_Y);\n                break;\n            case 'nx':\n                camera.lookAt(Vector3.NEGATIVE_X, Vector3.NEGATIVE_Y);\n                break;\n            case 'py':\n                camera.lookAt(Vector3.POSITIVE_Y, Vector3.POSITIVE_Z);\n                break;\n            case 'ny':\n                camera.lookAt(Vector3.NEGATIVE_Y, Vector3.NEGATIVE_Z);\n                break;\n            case 'pz':\n                camera.lookAt(Vector3.POSITIVE_Z, Vector3.NEGATIVE_Y);\n                break;\n            case 'nz':\n                camera.lookAt(Vector3.NEGATIVE_Z, Vector3.NEGATIVE_Y);\n                break;\n        }\n        light.getWorldPosition(camera.position);\n        camera.update();\n\n        return camera;\n    },\n\n    _getDirectionalLightCamera: (function () {\n        var lightViewMatrix = new Matrix4();\n        var sceneViewBoundingBox = new BoundingBox();\n        var lightViewBBox = new BoundingBox();\n        // Camera of directional light will be adjusted\n        // to contain the view frustum and scene bounding box as tightly as possible\n        return function (light, scene, sceneCamera) {\n            if (!this._lightCameras.directional) {\n                this._lightCameras.directional = new OrthoCamera();\n            }\n            var camera = this._lightCameras.directional;\n\n            sceneViewBoundingBox.copy(scene.viewBoundingBoxLastFrame);\n            sceneViewBoundingBox.intersection(sceneCamera.frustum.boundingBox);\n            // Move to the center of frustum(in world space)\n            camera.position\n                .copy(sceneViewBoundingBox.min)\n                .add(sceneViewBoundingBox.max)\n                .scale(0.5)\n                .transformMat4(sceneCamera.worldTransform);\n            camera.rotation.copy(light.rotation);\n            camera.scale.copy(light.scale);\n            camera.updateWorldTransform();\n\n            // Transform to light view space\n            Matrix4.invert(lightViewMatrix, camera.worldTransform);\n            Matrix4.multiply(lightViewMatrix, lightViewMatrix, sceneCamera.worldTransform);\n\n            lightViewBBox.copy(sceneViewBoundingBox).applyTransform(lightViewMatrix);\n\n            var min = lightViewBBox.min.array;\n            var max = lightViewBBox.max.array;\n\n            // Move camera to adjust the near to 0\n            camera.position.set((min[0] + max[0]) / 2, (min[1] + max[1]) / 2, max[2])\n                .transformMat4(camera.worldTransform);\n            camera.near = 0;\n            camera.far = -min[2] + max[2];\n            // Make sure receivers not in the frustum will stil receive the shadow.\n            if (isNaN(this.lightFrustumBias)) {\n                camera.far *= 4;\n            }\n            else {\n                camera.far += this.lightFrustumBias;\n            }\n            camera.left = min[0];\n            camera.right = max[0];\n            camera.top = max[1];\n            camera.bottom = min[1];\n            camera.update(true);\n\n            return camera;\n        };\n    })(),\n\n    _getSpotLightCamera: function (light) {\n        if (!this._lightCameras.spot) {\n            this._lightCameras.spot = new PerspectiveCamera();\n        }\n        var camera = this._lightCameras.spot;\n        // Update properties\n        camera.fov = light.penumbraAngle * 2;\n        camera.far = light.range;\n        camera.worldTransform.copy(light.worldTransform);\n        camera.updateProjectionMatrix();\n        mat4.invert(camera.viewMatrix.array, camera.worldTransform.array);\n\n        return camera;\n    },\n\n    /**\n     * @param  {clay.Renderer|WebGLRenderingContext} [renderer]\n     * @memberOf clay.prePass.ShadowMap.prototype\n     */\n    // PENDING Renderer or WebGLRenderingContext\n    dispose: function (renderer) {\n        var _gl = renderer.gl || renderer;\n\n        if (this._frameBuffer) {\n            this._frameBuffer.dispose(_gl);\n        }\n\n        for (var name in this._textures) {\n            this._textures[name].dispose(_gl);\n        }\n\n        this._texturePool.clear(renderer.gl);\n\n        this._depthMaterials = {};\n        this._distanceMaterials = {};\n        this._textures = {};\n        this._lightCameras = {};\n        this._shadowMapNumber = {\n            'POINT_LIGHT': 0,\n            'DIRECTIONAL_LIGHT': 0,\n            'SPOT_LIGHT': 0\n        };\n        this._meshMaterials = {};\n\n        for (var i = 0; i < this._receivers.length; i++) {\n            var mesh = this._receivers[i];\n            // Mesh may be disposed\n            if (mesh.material) {\n                var material = mesh.material;\n                material.undefine('fragment', 'POINT_LIGHT_SHADOW_COUNT');\n                material.undefine('fragment', 'DIRECTIONAL_LIGHT_SHADOW_COUNT');\n                material.undefine('fragment', 'AMBIENT_LIGHT_SHADOW_COUNT');\n                material.set('shadowEnabled', 0);\n            }\n        }\n\n        this._receivers = [];\n        this._lightsCastShadow = [];\n    }\n});\n\n/**\n * @name clay.prePass.ShadowMap.VSM\n * @type {number}\n */\nShadowMapPass.VSM = 1;\n\n/**\n * @name clay.prePass.ShadowMap.PCF\n * @type {number}\n */\nShadowMapPass.PCF = 2;\n\nexport default ShadowMapPass;\n","import Texture2D from '../Texture2D';\nimport glenum from '../core/glenum';\nimport util from '../core/util';\n\nvar TexturePool = function () {\n\n    this._pool = {};\n\n    this._allocatedTextures = [];\n};\n\nTexturePool.prototype = {\n\n    constructor: TexturePool,\n\n    get: function (parameters) {\n        var key = generateKey(parameters);\n        if (!this._pool.hasOwnProperty(key)) {\n            this._pool[key] = [];\n        }\n        var list = this._pool[key];\n        if (!list.length) {\n            var texture = new Texture2D(parameters);\n            this._allocatedTextures.push(texture);\n            return texture;\n        }\n        return list.pop();\n    },\n\n    put: function (texture) {\n        var key = generateKey(texture);\n        if (!this._pool.hasOwnProperty(key)) {\n            this._pool[key] = [];\n        }\n        var list = this._pool[key];\n        list.push(texture);\n    },\n\n    clear: function (renderer) {\n        for (var i = 0; i < this._allocatedTextures.length; i++) {\n            this._allocatedTextures[i].dispose(renderer);\n        }\n        this._pool = {};\n        this._allocatedTextures = [];\n    }\n};\n\nvar defaultParams = {\n    width: 512,\n    height: 512,\n    type: glenum.UNSIGNED_BYTE,\n    format: glenum.RGBA,\n    wrapS: glenum.CLAMP_TO_EDGE,\n    wrapT: glenum.CLAMP_TO_EDGE,\n    minFilter: glenum.LINEAR_MIPMAP_LINEAR,\n    magFilter: glenum.LINEAR,\n    useMipmap: true,\n    anisotropic: 1,\n    flipY: true,\n    unpackAlignment: 4,\n    premultiplyAlpha: false\n};\n\nvar defaultParamPropList = Object.keys(defaultParams);\n\nfunction generateKey(parameters) {\n    util.defaultsWithPropList(parameters, defaultParams, defaultParamPropList);\n    fallBack(parameters);\n\n    var key = '';\n    for (var i = 0; i < defaultParamPropList.length; i++) {\n        var name = defaultParamPropList[i];\n        var chunk = parameters[name].toString();\n        key += chunk;\n    }\n    return key;\n}\n\nfunction fallBack(target) {\n\n    var IPOT = isPowerOfTwo(target.width, target.height);\n\n    if (target.format === glenum.DEPTH_COMPONENT) {\n        target.useMipmap = false;\n    }\n\n    if (!IPOT || !target.useMipmap) {\n        if (target.minFilter == glenum.NEAREST_MIPMAP_NEAREST ||\n            target.minFilter == glenum.NEAREST_MIPMAP_LINEAR) {\n            target.minFilter = glenum.NEAREST;\n        } else if (\n            target.minFilter == glenum.LINEAR_MIPMAP_LINEAR ||\n            target.minFilter == glenum.LINEAR_MIPMAP_NEAREST\n        ) {\n            target.minFilter = glenum.LINEAR;\n        }\n    }\n    if (!IPOT) {\n        target.wrapS = glenum.CLAMP_TO_EDGE;\n        target.wrapT = glenum.CLAMP_TO_EDGE;\n    }\n}\n\nfunction isPowerOfTwo(width, height) {\n    return (width & (width-1)) === 0 &&\n            (height & (height-1)) === 0;\n}\n\nexport default TexturePool;\n","export default \"@export clay.sm.depth.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\nuniform vec2 uvRepeat = vec2(1.0, 1.0);\\nuniform vec2 uvOffset = vec2(0.0, 0.0);\\n@import clay.chunk.skinning_header\\n@import clay.chunk.instancing_header\\nvarying vec4 v_ViewPosition;\\nvarying vec2 v_Texcoord;\\nvoid main(){\\n vec4 P = vec4(position, 1.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n P = skinMatrixWS * P;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n P = instanceMat * P;\\n#endif\\n v_ViewPosition = worldViewProjection * P;\\n gl_Position = v_ViewPosition;\\n v_Texcoord = texcoord * uvRepeat + uvOffset;\\n}\\n@end\\n@export clay.sm.depth.fragment\\nvarying vec4 v_ViewPosition;\\nvarying vec2 v_Texcoord;\\nuniform float bias : 0.001;\\nuniform float slopeScale : 1.0;\\nuniform sampler2D alphaMap;\\nuniform float alphaCutoff: 0.0;\\n@import clay.util.encode_float\\nvoid main(){\\n float depth = v_ViewPosition.z / v_ViewPosition.w;\\n if (alphaCutoff > 0.0) {\\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\\n discard;\\n }\\n }\\n#ifdef USE_VSM\\n depth = depth * 0.5 + 0.5;\\n float moment1 = depth;\\n float moment2 = depth * depth;\\n #ifdef SUPPORT_STANDARD_DERIVATIVES\\n float dx = dFdx(depth);\\n float dy = dFdy(depth);\\n moment2 += 0.25*(dx*dx+dy*dy);\\n #endif\\n gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\\n#else\\n #ifdef SUPPORT_STANDARD_DERIVATIVES\\n float dx = dFdx(depth);\\n float dy = dFdy(depth);\\n depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\\n #else\\n depth += bias;\\n #endif\\n gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\\n#endif\\n}\\n@end\\n@export clay.sm.debug_depth\\nuniform sampler2D depthMap;\\nvarying vec2 v_Texcoord;\\n@import clay.util.decode_float\\nvoid main() {\\n vec4 tex = texture2D(depthMap, v_Texcoord);\\n#ifdef USE_VSM\\n gl_FragColor = vec4(tex.rgb, 1.0);\\n#else\\n float depth = decodeFloat(tex);\\n gl_FragColor = vec4(depth, depth, depth, 1.0);\\n#endif\\n}\\n@end\\n@export clay.sm.distance.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 world : WORLD;\\nattribute vec3 position : POSITION;\\n@import clay.chunk.skinning_header\\nvarying vec3 v_WorldPosition;\\nvoid main (){\\n vec4 P = vec4(position, 1.0);\\n#ifdef SKINNING\\n @import clay.chunk.skin_matrix\\n P = skinMatrixWS * P;\\n#endif\\n#ifdef INSTANCING\\n @import clay.chunk.instancing_matrix\\n P = instanceMat * P;\\n#endif\\n gl_Position = worldViewProjection * P;\\n v_WorldPosition = (world * P).xyz;\\n}\\n@end\\n@export clay.sm.distance.fragment\\nuniform vec3 lightPosition;\\nuniform float range : 100;\\nvarying vec3 v_WorldPosition;\\n@import clay.util.encode_float\\nvoid main(){\\n float dist = distance(lightPosition, v_WorldPosition);\\n#ifdef USE_VSM\\n gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\\n#else\\n dist = dist / range;\\n gl_FragColor = encodeFloat(dist);\\n#endif\\n}\\n@end\\n@export clay.plugin.shadow_map_common\\n@import clay.util.decode_float\\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\\n vec4 tex = texture2D(map, uv);\\n return step(z, decodeFloat(tex) * 2.0 - 1.0);\\n}\\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\\n float shadowContrib = tapShadowMap(map, uv, z);\\n vec2 offset = vec2(1.0 / textureSize) * scale;\\n#ifdef PCF_KERNEL_SIZE\\n for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\\n shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\\n }}\\n return shadowContrib / float(PCF_KERNEL_SIZE + 1);\\n#else\\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\\n return shadowContrib / 9.0;\\n#endif\\n}\\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\\n return pcf(map, uv, z, textureSize, vec2(1.0));\\n}\\nfloat chebyshevUpperBound(vec2 moments, float z){\\n float p = 0.0;\\n z = z * 0.5 + 0.5;\\n if (z <= moments.x) {\\n p = 1.0;\\n }\\n float variance = moments.y - moments.x * moments.x;\\n variance = max(variance, 0.0000001);\\n float mD = moments.x - z;\\n float pMax = variance / (variance + mD * mD);\\n pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\\n return max(p, pMax);\\n}\\nfloat computeShadowContrib(\\n sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\\n) {\\n vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\\n posInLightSpace.xyz /= posInLightSpace.w;\\n float z = posInLightSpace.z;\\n if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\\n all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\\n vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\\n #ifdef USE_VSM\\n vec2 moments = texture2D(map, uv * scale + offset).xy;\\n return chebyshevUpperBound(moments, z);\\n #else\\n return pcf(map, uv * scale + offset, z, textureSize, scale);\\n #endif\\n }\\n return 1.0;\\n}\\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\\n return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\\n}\\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\\n{\\n float dist = length(direction);\\n vec4 shadowTex = textureCube(map, direction);\\n#ifdef USE_VSM\\n vec2 moments = shadowTex.xy;\\n float variance = moments.y - moments.x * moments.x;\\n float mD = moments.x - dist;\\n float p = variance / (variance + mD * mD);\\n if(moments.x + 0.001 < dist){\\n return clamp(p, 0.0, 1.0);\\n }else{\\n return 1.0;\\n }\\n#else\\n return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\\n#endif\\n}\\n@end\\n@export clay.plugin.compute_shadow_map\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\\n#if defined(SHADOW_CASCADE)\\nuniform sampler2D directionalLightShadowMaps[1]:unconfigurable;\\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE]:unconfigurable;\\nuniform float directionalLightShadowMapSizes[1]:unconfigurable;\\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE]:unconfigurable;\\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE]:unconfigurable;\\n#else\\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\n#endif\\n#endif\\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\\n#endif\\nuniform bool shadowEnabled : true;\\n#ifdef PCF_KERNEL_SIZE\\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\\n#endif\\n@import clay.plugin.shadow_map_common\\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\\n float shadowContrib;\\n for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\\n shadowContrib = computeShadowContrib(\\n spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\\n spotLightShadowMapSizes[_idx_]\\n );\\n shadowContribs[_idx_] = shadowContrib;\\n }}\\n for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#endif\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n#ifdef SHADOW_CASCADE\\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\\n float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\\n / (gl_DepthRange.far - gl_DepthRange.near);\\n float shadowContrib;\\n shadowContribs[0] = 1.0;\\n for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\\n if (\\n depth >= shadowCascadeClipsNear[_idx_] &&\\n depth <= shadowCascadeClipsFar[_idx_]\\n ) {\\n shadowContrib = computeShadowContrib(\\n directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\\n directionalLightShadowMapSizes[0],\\n vec2(1.0 / float(SHADOW_CASCADE), 1.0),\\n vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\\n );\\n shadowContribs[0] = shadowContrib;\\n }\\n }}\\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#else\\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\\n float shadowContrib;\\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\\n shadowContrib = computeShadowContrib(\\n directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\\n directionalLightShadowMapSizes[_idx_]\\n );\\n shadowContribs[_idx_] = shadowContrib;\\n }}\\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#endif\\n#endif\\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\\n vec3 lightPosition;\\n vec3 direction;\\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\\n lightPosition = pointLightPosition[_idx_];\\n direction = position - lightPosition;\\n shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\\n }}\\n for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\\n shadowContribs[_idx_] = 1.0;\\n }}\\n}\\n#endif\\n#endif\\n@end\";\n","import Shader from 'claygl/src/Shader';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport createCompositor from 'claygl/src/compositor/createCompositor';\nimport SSAOPass from './SSAOPass';\nimport SSRPass from './SSRPass';\nimport poissonKernel from './poissonKernel';\nimport graphicGL from '../util/graphicGL';\nimport NormalPass from './NormalPass';\nimport EdgePass from './EdgePass';\nimport effectJson from './composite.js';\nimport blurCode from 'claygl/src/shader/source/compositor/blur.glsl.js';\nimport lutCode from 'claygl/src/shader/source/compositor/lut.glsl.js';\nimport outputCode from 'claygl/src/shader/source/compositor/output.glsl.js';\nimport brightCode from 'claygl/src/shader/source/compositor/bright.glsl.js';\nimport downsampleCode from 'claygl/src/shader/source/compositor/downsample.glsl.js';\nimport upsampleCode from 'claygl/src/shader/source/compositor/upsample.glsl.js';\nimport hdrCode from 'claygl/src/shader/source/compositor/hdr.glsl.js';\nimport blendCode from 'claygl/src/shader/source/compositor/blend.glsl.js';\nimport fxaaCode from 'claygl/src/shader/source/compositor/fxaa.glsl.js';\nimport DOFCode from './DOF.glsl.js';\nimport edgeCode from './edge.glsl.js';\nShader['import'](blurCode);\nShader['import'](lutCode);\nShader['import'](outputCode);\nShader['import'](brightCode);\nShader['import'](downsampleCode);\nShader['import'](upsampleCode);\nShader['import'](hdrCode);\nShader['import'](blendCode);\nShader['import'](fxaaCode);\nShader['import'](DOFCode);\nShader['import'](edgeCode);\n\nfunction makeCommonOutputs(getWidth, getHeight) {\n  return {\n    color: {\n      parameters: {\n        width: getWidth,\n        height: getHeight\n      }\n    }\n  };\n}\n\nvar FINAL_NODES_CHAIN = ['composite', 'FXAA'];\n\nfunction EffectCompositor() {\n  this._width;\n  this._height;\n  this._dpr;\n  this._sourceTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._depthTexture = new Texture2D({\n    format: Texture.DEPTH_COMPONENT,\n    type: Texture.UNSIGNED_INT\n  });\n  this._framebuffer = new FrameBuffer();\n\n  this._framebuffer.attach(this._sourceTexture);\n\n  this._framebuffer.attach(this._depthTexture, FrameBuffer.DEPTH_ATTACHMENT);\n\n  this._normalPass = new NormalPass();\n  this._compositor = createCompositor(effectJson);\n\n  var sourceNode = this._compositor.getNodeByName('source');\n\n  sourceNode.texture = this._sourceTexture;\n\n  var cocNode = this._compositor.getNodeByName('coc');\n\n  this._sourceNode = sourceNode;\n  this._cocNode = cocNode;\n  this._compositeNode = this._compositor.getNodeByName('composite');\n  this._fxaaNode = this._compositor.getNodeByName('FXAA');\n  this._dofBlurNodes = ['dof_far_blur', 'dof_near_blur', 'dof_coc_blur'].map(function (name) {\n    return this._compositor.getNodeByName(name);\n  }, this);\n  this._dofBlurKernel = 0;\n  this._dofBlurKernelSize = new Float32Array(0);\n  this._finalNodesChain = FINAL_NODES_CHAIN.map(function (name) {\n    return this._compositor.getNodeByName(name);\n  }, this);\n  var gBufferObj = {\n    normalTexture: this._normalPass.getNormalTexture(),\n    depthTexture: this._normalPass.getDepthTexture()\n  };\n  this._ssaoPass = new SSAOPass(gBufferObj);\n  this._ssrPass = new SSRPass(gBufferObj);\n  this._edgePass = new EdgePass(gBufferObj);\n}\n\nEffectCompositor.prototype.resize = function (width, height, dpr) {\n  dpr = dpr || 1;\n  var width = width * dpr;\n  var height = height * dpr;\n  var sourceTexture = this._sourceTexture;\n  var depthTexture = this._depthTexture;\n  sourceTexture.width = width;\n  sourceTexture.height = height;\n  depthTexture.width = width;\n  depthTexture.height = height;\n  var rendererMock = {\n    getWidth: function () {\n      return width;\n    },\n    getHeight: function () {\n      return height;\n    },\n    getDevicePixelRatio: function () {\n      return dpr;\n    }\n  };\n\n  function wrapCallback(obj, key) {\n    if (typeof obj[key] === 'function') {\n      var oldFunc = obj[key].__original || obj[key]; // Use viewport width/height instead of renderer width/height\n\n      obj[key] = function (renderer) {\n        return oldFunc.call(this, rendererMock);\n      };\n\n      obj[key].__original = oldFunc;\n    }\n  }\n\n  this._compositor.nodes.forEach(function (node) {\n    for (var outKey in node.outputs) {\n      var parameters = node.outputs[outKey].parameters;\n\n      if (parameters) {\n        wrapCallback(parameters, 'width');\n        wrapCallback(parameters, 'height');\n      }\n    }\n\n    for (var paramKey in node.parameters) {\n      wrapCallback(node.parameters, paramKey);\n    }\n  });\n\n  this._width = width;\n  this._height = height;\n  this._dpr = dpr;\n};\n\nEffectCompositor.prototype.getWidth = function () {\n  return this._width;\n};\n\nEffectCompositor.prototype.getHeight = function () {\n  return this._height;\n};\n\nEffectCompositor.prototype._ifRenderNormalPass = function () {\n  return this._enableSSAO || this._enableEdge || this._enableSSR;\n};\n\nEffectCompositor.prototype._getPrevNode = function (node) {\n  var idx = FINAL_NODES_CHAIN.indexOf(node.name) - 1;\n  var prevNode = this._finalNodesChain[idx];\n\n  while (prevNode && !this._compositor.getNodeByName(prevNode.name)) {\n    idx -= 1;\n    prevNode = this._finalNodesChain[idx];\n  }\n\n  return prevNode;\n};\n\nEffectCompositor.prototype._getNextNode = function (node) {\n  var idx = FINAL_NODES_CHAIN.indexOf(node.name) + 1;\n  var nextNode = this._finalNodesChain[idx];\n\n  while (nextNode && !this._compositor.getNodeByName(nextNode.name)) {\n    idx += 1;\n    nextNode = this._finalNodesChain[idx];\n  }\n\n  return nextNode;\n};\n\nEffectCompositor.prototype._addChainNode = function (node) {\n  var prevNode = this._getPrevNode(node);\n\n  var nextNode = this._getNextNode(node);\n\n  if (!prevNode) {\n    return;\n  }\n\n  node.inputs.texture = prevNode.name;\n\n  if (nextNode) {\n    node.outputs = makeCommonOutputs(this.getWidth.bind(this), this.getHeight.bind(this));\n    nextNode.inputs.texture = node.name;\n  } else {\n    node.outputs = null;\n  }\n\n  this._compositor.addNode(node);\n};\n\nEffectCompositor.prototype._removeChainNode = function (node) {\n  var prevNode = this._getPrevNode(node);\n\n  var nextNode = this._getNextNode(node);\n\n  if (!prevNode) {\n    return;\n  }\n\n  if (nextNode) {\n    prevNode.outputs = makeCommonOutputs(this.getWidth.bind(this), this.getHeight.bind(this));\n    nextNode.inputs.texture = prevNode.name;\n  } else {\n    prevNode.outputs = null;\n  }\n\n  this._compositor.removeNode(node);\n};\n/**\n * Update normal\n */\n\n\nEffectCompositor.prototype.updateNormal = function (renderer, scene, camera, frame) {\n  if (this._ifRenderNormalPass()) {\n    this._normalPass.update(renderer, scene, camera);\n  }\n};\n/**\n * Render SSAO after render the scene, before compositing\n */\n\n\nEffectCompositor.prototype.updateSSAO = function (renderer, scene, camera, frame) {\n  this._ssaoPass.update(renderer, camera, frame);\n};\n/**\n * Enable SSAO effect\n */\n\n\nEffectCompositor.prototype.enableSSAO = function () {\n  this._enableSSAO = true;\n};\n/**\n * Disable SSAO effect\n */\n\n\nEffectCompositor.prototype.disableSSAO = function () {\n  this._enableSSAO = false;\n};\n/**\n * Enable SSR effect\n */\n\n\nEffectCompositor.prototype.enableSSR = function () {\n  this._enableSSR = true; // this._normalPass.enableTargetTexture3 = true;\n};\n/**\n * Disable SSR effect\n */\n\n\nEffectCompositor.prototype.disableSSR = function () {\n  this._enableSSR = false; // this._normalPass.enableTargetTexture3 = false;\n};\n/**\n * Render SSAO after render the scene, before compositing\n */\n\n\nEffectCompositor.prototype.getSSAOTexture = function () {\n  return this._ssaoPass.getTargetTexture();\n};\n/**\n * @return {clay.FrameBuffer}\n */\n\n\nEffectCompositor.prototype.getSourceFrameBuffer = function () {\n  return this._framebuffer;\n};\n/**\n * @return {clay.Texture2D}\n */\n\n\nEffectCompositor.prototype.getSourceTexture = function () {\n  return this._sourceTexture;\n};\n/**\n * Disable fxaa effect\n */\n\n\nEffectCompositor.prototype.disableFXAA = function () {\n  this._removeChainNode(this._fxaaNode);\n};\n/**\n * Enable fxaa effect\n */\n\n\nEffectCompositor.prototype.enableFXAA = function () {\n  this._addChainNode(this._fxaaNode);\n};\n/**\n * Enable bloom effect\n */\n\n\nEffectCompositor.prototype.enableBloom = function () {\n  this._compositeNode.inputs.bloom = 'bloom_composite';\n\n  this._compositor.dirty();\n};\n/**\n * Disable bloom effect\n */\n\n\nEffectCompositor.prototype.disableBloom = function () {\n  this._compositeNode.inputs.bloom = null;\n\n  this._compositor.dirty();\n};\n/**\n * Enable depth of field effect\n */\n\n\nEffectCompositor.prototype.enableDOF = function () {\n  this._compositeNode.inputs.texture = 'dof_composite';\n\n  this._compositor.dirty();\n};\n/**\n * Disable depth of field effect\n */\n\n\nEffectCompositor.prototype.disableDOF = function () {\n  this._compositeNode.inputs.texture = 'source';\n\n  this._compositor.dirty();\n};\n/**\n * Enable color correction\n */\n\n\nEffectCompositor.prototype.enableColorCorrection = function () {\n  this._compositeNode.define('COLOR_CORRECTION');\n\n  this._enableColorCorrection = true;\n};\n/**\n * Disable color correction\n */\n\n\nEffectCompositor.prototype.disableColorCorrection = function () {\n  this._compositeNode.undefine('COLOR_CORRECTION');\n\n  this._enableColorCorrection = false;\n};\n/**\n * Enable edge detection\n */\n\n\nEffectCompositor.prototype.enableEdge = function () {\n  this._enableEdge = true;\n};\n/**\n * Disable edge detection\n */\n\n\nEffectCompositor.prototype.disableEdge = function () {\n  this._enableEdge = false;\n};\n/**\n * Set bloom intensity\n * @param {number} value\n */\n\n\nEffectCompositor.prototype.setBloomIntensity = function (value) {\n  this._compositeNode.setParameter('bloomIntensity', value);\n};\n\nEffectCompositor.prototype.setSSAOParameter = function (name, value) {\n  switch (name) {\n    case 'quality':\n      // PENDING\n      var kernelSize = {\n        low: 6,\n        medium: 12,\n        high: 32,\n        ultra: 62\n      }[value] || 12;\n\n      this._ssaoPass.setParameter('kernelSize', kernelSize);\n\n      break;\n\n    case 'radius':\n      this._ssaoPass.setParameter(name, value);\n\n      this._ssaoPass.setParameter('bias', value / 200);\n\n      break;\n\n    case 'intensity':\n      this._ssaoPass.setParameter(name, value);\n\n      break;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Unkown SSAO parameter ' + name);\n      }\n\n  }\n};\n\nEffectCompositor.prototype.setDOFParameter = function (name, value) {\n  switch (name) {\n    case 'focalDistance':\n    case 'focalRange':\n    case 'fstop':\n      this._cocNode.setParameter(name, value);\n\n      break;\n\n    case 'blurRadius':\n      for (var i = 0; i < this._dofBlurNodes.length; i++) {\n        this._dofBlurNodes[i].setParameter('blurRadius', value);\n      }\n\n      break;\n\n    case 'quality':\n      var kernelSize = {\n        low: 4,\n        medium: 8,\n        high: 16,\n        ultra: 32\n      }[value] || 8;\n      this._dofBlurKernelSize = kernelSize;\n\n      for (var i = 0; i < this._dofBlurNodes.length; i++) {\n        this._dofBlurNodes[i].pass.material.define('POISSON_KERNEL_SIZE', kernelSize);\n      }\n\n      this._dofBlurKernel = new Float32Array(kernelSize * 2);\n      break;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Unkown DOF parameter ' + name);\n      }\n\n  }\n};\n\nEffectCompositor.prototype.setSSRParameter = function (name, value) {\n  if (value == null) {\n    return;\n  }\n\n  switch (name) {\n    case 'quality':\n      // PENDING\n      var maxIteration = {\n        low: 10,\n        medium: 15,\n        high: 30,\n        ultra: 80\n      }[value] || 20;\n      var pixelStride = {\n        low: 32,\n        medium: 16,\n        high: 8,\n        ultra: 4\n      }[value] || 16;\n\n      this._ssrPass.setParameter('maxIteration', maxIteration);\n\n      this._ssrPass.setParameter('pixelStride', pixelStride);\n\n      break;\n\n    case 'maxRoughness':\n      this._ssrPass.setParameter('minGlossiness', Math.max(Math.min(1.0 - value, 1.0), 0.0));\n\n      break;\n\n    case 'physical':\n      this.setPhysicallyCorrectSSR(value);\n      break;\n\n    default:\n      console.warn('Unkown SSR parameter ' + name);\n  }\n};\n\nEffectCompositor.prototype.setPhysicallyCorrectSSR = function (physical) {\n  this._ssrPass.setPhysicallyCorrect(physical);\n};\n/**\n * Set color of edge\n */\n\n\nEffectCompositor.prototype.setEdgeColor = function (value) {\n  var color = graphicGL.parseColor(value);\n\n  this._edgePass.setParameter('edgeColor', color);\n};\n\nEffectCompositor.prototype.setExposure = function (value) {\n  this._compositeNode.setParameter('exposure', Math.pow(2, value));\n};\n\nEffectCompositor.prototype.setColorLookupTexture = function (image, api) {\n  this._compositeNode.pass.material.setTextureImage('lut', this._enableColorCorrection ? image : 'none', api, {\n    minFilter: graphicGL.Texture.NEAREST,\n    magFilter: graphicGL.Texture.NEAREST,\n    flipY: false\n  });\n};\n\nEffectCompositor.prototype.setColorCorrection = function (type, value) {\n  this._compositeNode.setParameter(type, value);\n};\n\nEffectCompositor.prototype.isSSREnabled = function () {\n  return this._enableSSR;\n};\n\nEffectCompositor.prototype.composite = function (renderer, scene, camera, framebuffer, frame) {\n  var sourceTexture = this._sourceTexture;\n  var targetTexture = sourceTexture;\n\n  if (this._enableEdge) {\n    this._edgePass.update(renderer, camera, sourceTexture, frame);\n\n    sourceTexture = targetTexture = this._edgePass.getTargetTexture();\n  }\n\n  if (this._enableSSR) {\n    this._ssrPass.update(renderer, camera, sourceTexture, frame);\n\n    targetTexture = this._ssrPass.getTargetTexture();\n\n    this._ssrPass.setSSAOTexture(this._enableSSAO ? this._ssaoPass.getTargetTexture() : null); // var lights = scene.getLights();\n    // for (var i = 0; i < lights.length; i++) {\n    //     if (lights[i].cubemap) {\n    //         this._ssrPass.setAmbientCubemap(lights[i].cubemap, lights[i].intensity);\n    //     }\n    // }\n\n  }\n\n  this._sourceNode.texture = targetTexture;\n\n  this._cocNode.setParameter('depth', this._depthTexture);\n\n  var blurKernel = this._dofBlurKernel;\n  var blurKernelSize = this._dofBlurKernelSize;\n  var frameAll = Math.floor(poissonKernel.length / 2 / blurKernelSize);\n  var kernelOffset = frame % frameAll;\n\n  for (var i = 0; i < blurKernelSize * 2; i++) {\n    blurKernel[i] = poissonKernel[i + kernelOffset * blurKernelSize * 2];\n  }\n\n  for (var i = 0; i < this._dofBlurNodes.length; i++) {\n    this._dofBlurNodes[i].setParameter('percent', frame / 30.0);\n\n    this._dofBlurNodes[i].setParameter('poissonKernel', blurKernel);\n  }\n\n  this._cocNode.setParameter('zNear', camera.near);\n\n  this._cocNode.setParameter('zFar', camera.far);\n\n  this._compositor.render(renderer, framebuffer);\n};\n\nEffectCompositor.prototype.dispose = function (renderer) {\n  this._sourceTexture.dispose(renderer);\n\n  this._depthTexture.dispose(renderer);\n\n  this._framebuffer.dispose(renderer);\n\n  this._compositor.dispose(renderer);\n\n  this._normalPass.dispose(renderer);\n\n  this._ssaoPass.dispose(renderer);\n};\n\nexport default EffectCompositor;","// DEPRECATED\nimport createCompositor from '../createCompositor';\nexport default createCompositor;","import util from './core/util';\nimport Compositor from './compositor/Compositor';\nimport CompoSceneNode from './compositor/SceneNode';\nimport CompoTextureNode from './compositor/TextureNode';\nimport CompoFilterNode from './compositor/FilterNode';\nimport Shader from './Shader';\nimport Texture from './Texture';\nimport Texture2D from './Texture2D';\nimport TextureCube from './TextureCube';\n\nimport registerBuiltinCompositor from './shader/registerBuiltinCompositor';\n\nregisterBuiltinCompositor(Shader);\n\nvar shaderSourceReg = /^#source\\((.*?)\\)/;\n\n/**\n * @name clay.createCompositor\n * @function\n * @param {Object} json\n * @param {Object} [opts]\n * @return {clay.compositor.Compositor}\n */\nfunction createCompositor(json, opts) {\n    var compositor = new Compositor();\n    opts = opts || {};\n\n    var lib = {\n        textures: {},\n        parameters: {}\n    };\n    var afterLoad = function(shaderLib, textureLib) {\n        for (var i = 0; i < json.nodes.length; i++) {\n            var nodeInfo = json.nodes[i];\n            var node = createNode(nodeInfo, lib, opts);\n            if (node) {\n                compositor.addNode(node);\n            }\n        }\n    };\n\n    for (var name in json.parameters) {\n        var paramInfo = json.parameters[name];\n        lib.parameters[name] = convertParameter(paramInfo);\n    }\n    // TODO load texture asynchronous\n    loadTextures(json, lib, opts, function(textureLib) {\n        lib.textures = textureLib;\n        afterLoad();\n    });\n\n    return compositor;\n}\n\nfunction createNode(nodeInfo, lib, opts) {\n    var type = nodeInfo.type || 'filter';\n    var shaderSource;\n    var inputs;\n    var outputs;\n\n    if (type === 'filter') {\n        var shaderExp = nodeInfo.shader.trim();\n        var res = shaderSourceReg.exec(shaderExp);\n        if (res) {\n            shaderSource = Shader.source(res[1].trim());\n        }\n        else if (shaderExp.charAt(0) === '#') {\n            shaderSource = lib.shaders[shaderExp.substr(1)];\n        }\n        if (!shaderSource) {\n            shaderSource = shaderExp;\n        }\n        if (!shaderSource) {\n            return;\n        }\n    }\n\n    if (nodeInfo.inputs) {\n        inputs = {};\n        for (var name in nodeInfo.inputs) {\n            if (typeof nodeInfo.inputs[name] === 'string') {\n                inputs[name] = nodeInfo.inputs[name];\n            }\n            else {\n                inputs[name] = {\n                    node: nodeInfo.inputs[name].node,\n                    pin: nodeInfo.inputs[name].pin\n                };\n            }\n        }\n    }\n    if (nodeInfo.outputs) {\n        outputs = {};\n        for (var name in nodeInfo.outputs) {\n            var outputInfo = nodeInfo.outputs[name];\n            outputs[name] = {};\n            if (outputInfo.attachment != null) {\n                outputs[name].attachment = outputInfo.attachment;\n            }\n            if (outputInfo.keepLastFrame != null) {\n                outputs[name].keepLastFrame = outputInfo.keepLastFrame;\n            }\n            if (outputInfo.outputLastFrame != null) {\n                outputs[name].outputLastFrame = outputInfo.outputLastFrame;\n            }\n            if (outputInfo.parameters) {\n                outputs[name].parameters = convertParameter(outputInfo.parameters);\n            }\n        }\n    }\n    var node;\n    if (type === 'scene') {\n        node = new CompoSceneNode({\n            name: nodeInfo.name,\n            scene: opts.scene,\n            camera: opts.camera,\n            outputs: outputs\n        });\n    }\n    else if (type === 'texture') {\n        node = new CompoTextureNode({\n            name: nodeInfo.name,\n            outputs: outputs\n        });\n    }\n    // Default is filter\n    else {\n        node = new CompoFilterNode({\n            name: nodeInfo.name,\n            shader: shaderSource,\n            inputs: inputs,\n            outputs: outputs\n        });\n    }\n    if (node) {\n        if (nodeInfo.parameters) {\n            for (var name in nodeInfo.parameters) {\n                var val = nodeInfo.parameters[name];\n                if (typeof val === 'string') {\n                    val = val.trim();\n                    if (val.charAt(0) === '#') {\n                        val = lib.textures[val.substr(1)];\n                    }\n                    else {\n                        node.on(\n                            'beforerender', createSizeSetHandler(\n                                name, tryConvertExpr(val)\n                            )\n                        );\n                    }\n                }\n                else if (typeof val === 'function') {\n                    node.on('beforerender', val);\n                }\n                node.setParameter(name, val);\n            }\n        }\n        if (nodeInfo.defines && node.pass) {\n            for (var name in nodeInfo.defines) {\n                var val = nodeInfo.defines[name];\n                node.pass.material.define('fragment', name, val);\n            }\n        }\n    }\n    return node;\n}\n\nfunction defaultWidthFunc(width, height) {\n    return width;\n}\nfunction defaultHeightFunc(width, height) {\n    return height;\n}\n\nfunction convertParameter(paramInfo) {\n    var param = {};\n    if (!paramInfo) {\n        return param;\n    }\n    ['type', 'minFilter', 'magFilter', 'wrapS', 'wrapT', 'flipY', 'useMipmap']\n        .forEach(function(name) {\n            var val = paramInfo[name];\n            if (val != null) {\n                // Convert string to enum\n                if (typeof val === 'string') {\n                    val = Texture[val];\n                }\n                param[name] = val;\n            }\n        });\n\n    var sizeScale = paramInfo.scale || 1;\n    ['width', 'height']\n        .forEach(function(name) {\n            if (paramInfo[name] != null) {\n                var val = paramInfo[name];\n                if (typeof val === 'string') {\n                    val = val.trim();\n                    param[name] = createSizeParser(\n                        name, tryConvertExpr(val), sizeScale\n                    );\n                }\n                else {\n                    param[name] = val;\n                }\n            }\n        });\n    if (!param.width) {\n        param.width = defaultWidthFunc;\n    }\n    if (!param.height) {\n        param.height = defaultHeightFunc;\n    }\n\n    if (paramInfo.useMipmap != null) {\n        param.useMipmap = paramInfo.useMipmap;\n    }\n    return param;\n}\n\nfunction loadTextures(json, lib, opts, callback) {\n    if (!json.textures) {\n        callback({});\n        return;\n    }\n    var textures = {};\n    var loading = 0;\n\n    var cbd = false;\n    var textureRootPath = opts.textureRootPath;\n    util.each(json.textures, function(textureInfo, name) {\n        var texture;\n        var path = textureInfo.path;\n        var parameters = convertParameter(textureInfo.parameters);\n        if (Array.isArray(path) && path.length === 6) {\n            if (textureRootPath) {\n                path = path.map(function(item) {\n                    return util.relative2absolute(item, textureRootPath);\n                });\n            }\n            texture = new TextureCube(parameters);\n        }\n        else if(typeof path === 'string') {\n            if (textureRootPath) {\n                path = util.relative2absolute(path, textureRootPath);\n            }\n            texture = new Texture2D(parameters);\n        }\n        else {\n            return;\n        }\n\n        texture.load(path);\n        loading++;\n        texture.once('success', function() {\n            textures[name] = texture;\n            loading--;\n            if (loading === 0) {\n                callback(textures);\n                cbd = true;\n            }\n        });\n    });\n\n    if (loading === 0 && !cbd) {\n        callback(textures);\n    }\n}\n\nfunction createSizeSetHandler(name, exprFunc) {\n    return function (renderer) {\n        // PENDING viewport size or window size\n        var dpr = renderer.getDevicePixelRatio();\n        // PENDING If multiply dpr ?\n        var width = renderer.getWidth();\n        var height = renderer.getHeight();\n        var result = exprFunc(width, height, dpr);\n        this.setParameter(name, result);\n    };\n}\n\nfunction createSizeParser(name, exprFunc, scale) {\n    scale = scale || 1;\n    return function (renderer) {\n        var dpr = renderer.getDevicePixelRatio();\n        var width = renderer.getWidth() * scale;\n        var height = renderer.getHeight() * scale;\n        return exprFunc(width, height, dpr);\n    };\n}\n\nfunction tryConvertExpr(string) {\n    // PENDING\n    var exprRes = /^expr\\((.*)\\)$/.exec(string);\n    if (exprRes) {\n        try {\n            var func = new Function('width', 'height', 'dpr', 'return ' + exprRes[1]);\n            // Try run t\n            func(1, 1);\n\n            return func;\n        }\n        catch (e) {\n            throw new Error('Invalid expression.');\n        }\n    }\n}\n\nexport default createCompositor;\n","import Graph from './Graph';\nimport TexturePool from './TexturePool';\nimport FrameBuffer from '../FrameBuffer';\n\n/**\n * Compositor provide graph based post processing\n *\n * @constructor clay.compositor.Compositor\n * @extends clay.compositor.Graph\n *\n */\nvar Compositor = Graph.extend(function() {\n    return {\n        // Output node\n        _outputs: [],\n\n        _texturePool: new TexturePool(),\n\n        _frameBuffer: new FrameBuffer({\n            depthBuffer: false\n        })\n    };\n},\n/** @lends clay.compositor.Compositor.prototype */\n{\n    addNode: function(node) {\n        Graph.prototype.addNode.call(this, node);\n        node._compositor = this;\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    render: function(renderer, frameBuffer) {\n        if (this._dirty) {\n            this.update();\n            this._dirty = false;\n\n            this._outputs.length = 0;\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (!this.nodes[i].outputs) {\n                    this._outputs.push(this.nodes[i]);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.nodes.length; i++) {\n            // Update the reference number of each output texture\n            this.nodes[i].beforeFrame();\n        }\n\n        for (var i = 0; i < this._outputs.length; i++) {\n            this._outputs[i].updateReference();\n        }\n\n        for (var i = 0; i < this._outputs.length; i++) {\n            this._outputs[i].render(renderer, frameBuffer);\n        }\n\n        for (var i = 0; i < this.nodes.length; i++) {\n            // Clear up\n            this.nodes[i].afterFrame();\n        }\n    },\n\n    allocateTexture: function (parameters) {\n        return this._texturePool.get(parameters);\n    },\n\n    releaseTexture: function (parameters) {\n        this._texturePool.put(parameters);\n    },\n\n    getFrameBuffer: function () {\n        return this._frameBuffer;\n    },\n\n    /**\n     * Dispose compositor\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this._texturePool.clear(renderer);\n    }\n});\n\nexport default Compositor;\n","import Base from '../core/Base';\nimport GraphNode from './CompositorNode';\n\n/**\n * @constructor clay.compositor.Graph\n * @extends clay.core.Base\n */\nvar Graph = Base.extend(function () {\n    return /** @lends clay.compositor.Graph# */ {\n        /**\n         * @type {Array.<clay.compositor.CompositorNode>}\n         */\n        nodes: []\n    };\n},\n/** @lends clay.compositor.Graph.prototype */\n{\n\n    /**\n     * Mark to update\n     */\n    dirty: function () {\n        this._dirty = true;\n    },\n    /**\n     * @param {clay.compositor.CompositorNode} node\n     */\n    addNode: function (node) {\n\n        if (this.nodes.indexOf(node) >= 0) {\n            return;\n        }\n\n        this.nodes.push(node);\n\n        this._dirty = true;\n    },\n    /**\n     * @param  {clay.compositor.CompositorNode|string} node\n     */\n    removeNode: function (node) {\n        if (typeof node === 'string') {\n            node = this.getNodeByName(node);\n        }\n        var idx = this.nodes.indexOf(node);\n        if (idx >= 0) {\n            this.nodes.splice(idx, 1);\n            this._dirty = true;\n        }\n    },\n    /**\n     * @param {string} name\n     * @return {clay.compositor.CompositorNode}\n     */\n    getNodeByName: function (name) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            if (this.nodes[i].name === name) {\n                return this.nodes[i];\n            }\n        }\n    },\n    /**\n     * Update links of graph\n     */\n    update: function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.nodes[i].clear();\n        }\n        // Traverse all the nodes and build the graph\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n\n            if (!node.inputs) {\n                continue;\n            }\n            for (var inputName in node.inputs) {\n                if (!node.inputs[inputName]) {\n                    continue;\n                }\n                if (node.pass && !node.pass.material.isUniformEnabled(inputName)) {\n                    console.warn('Pin '  + node.name + '.' + inputName + ' not used.');\n                    continue;\n                }\n                var fromPinInfo = node.inputs[inputName];\n\n                var fromPin = this.findPin(fromPinInfo);\n                if (fromPin) {\n                    node.link(inputName, fromPin.node, fromPin.pin);\n                }\n                else {\n                    if (typeof fromPinInfo === 'string') {\n                        console.warn('Node ' + fromPinInfo + ' not exist');\n                    }\n                    else {\n                        console.warn('Pin of ' + fromPinInfo.node + '.' + fromPinInfo.pin + ' not exist');\n                    }\n                }\n            }\n        }\n    },\n\n    findPin: function (input) {\n        var node;\n        // Try to take input as a directly a node\n        if (typeof input === 'string' || input instanceof GraphNode) {\n            input = {\n                node: input\n            };\n        }\n\n        if (typeof input.node === 'string') {\n            for (var i = 0; i < this.nodes.length; i++) {\n                var tmp = this.nodes[i];\n                if (tmp.name === input.node) {\n                    node = tmp;\n                }\n            }\n        }\n        else {\n            node = input.node;\n        }\n        if (node) {\n            var inputPin = input.pin;\n            if (!inputPin) {\n                // Use first pin defaultly\n                if (node.outputs) {\n                    inputPin = Object.keys(node.outputs)[0];\n                }\n            }\n            if (node.outputs[inputPin]) {\n                return {\n                    node: node,\n                    pin: inputPin\n                };\n            }\n        }\n    }\n});\n\nexport default Graph;\n","import Base from '../core/Base';\n\n// PENDING\n// Use topological sort ?\n\n/**\n * Node of graph based post processing.\n *\n * @constructor clay.compositor.CompositorNode\n * @extends clay.core.Base\n *\n */\nvar CompositorNode = Base.extend(function () {\n    return /** @lends clay.compositor.CompositorNode# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * Input links, will be updated by the graph\n         * @example:\n         *     inputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        inputLinks: {},\n\n        /**\n         * Output links, will be updated by the graph\n         * @example:\n         *     outputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        outputLinks: {},\n\n        // Save the output texture of previous frame\n        // Will be used when there exist a circular reference\n        _prevOutputTextures: {},\n        _outputTextures: {},\n\n        // Example: { name: 2 }\n        _outputReferences: {},\n\n        _rendering: false,\n        // If rendered in this frame\n        _rendered: false,\n\n        _compositor: null\n    };\n},\n/** @lends clay.compositor.CompositorNode.prototype */\n{\n\n    // TODO Remove parameter function callback\n    updateParameter: function (outputName, renderer) {\n        var outputInfo = this.outputs[outputName];\n        var parameters = outputInfo.parameters;\n        var parametersCopy = outputInfo._parametersCopy;\n        if (!parametersCopy) {\n            parametersCopy = outputInfo._parametersCopy = {};\n        }\n        if (parameters) {\n            for (var key in parameters) {\n                if (key !== 'width' && key !== 'height') {\n                    parametersCopy[key] = parameters[key];\n                }\n            }\n        }\n        var width, height;\n        if (parameters.width instanceof Function) {\n            width = parameters.width.call(this, renderer);\n        }\n        else {\n            width = parameters.width;\n        }\n        if (parameters.height instanceof Function) {\n            height = parameters.height.call(this, renderer);\n        }\n        else {\n            height = parameters.height;\n        }\n        if (\n            parametersCopy.width !== width\n            || parametersCopy.height !== height\n        ) {\n            if (this._outputTextures[outputName]) {\n                this._outputTextures[outputName].dispose(renderer.gl);\n            }\n        }\n        parametersCopy.width = width;\n        parametersCopy.height = height;\n\n        return parametersCopy;\n    },\n\n    /**\n     * Set parameter\n     * @param {string} name\n     * @param {} value\n     */\n    setParameter: function (name, value) {},\n    /**\n     * Get parameter value\n     * @param  {string} name\n     * @return {}\n     */\n    getParameter: function (name) {},\n    /**\n     * Set parameters\n     * @param {Object} obj\n     */\n    setParameters: function (obj) {\n        for (var name in obj) {\n            this.setParameter(name, obj[name]);\n        }\n    },\n\n    render: function () {},\n\n    getOutput: function (renderer /*optional*/, name) {\n        if (name == null) {\n            // Return the output texture without rendering\n            name = renderer;\n            return this._outputTextures[name];\n        }\n        var outputInfo = this.outputs[name];\n        if (!outputInfo) {\n            return ;\n        }\n\n        // Already been rendered in this frame\n        if (this._rendered) {\n            // Force return texture in last frame\n            if (outputInfo.outputLastFrame) {\n                return this._prevOutputTextures[name];\n            }\n            else {\n                return this._outputTextures[name];\n            }\n        }\n        else if (\n            // TODO\n            this._rendering   // Solve Circular Reference\n        ) {\n            if (!this._prevOutputTextures[name]) {\n                // Create a blank texture at first pass\n                this._prevOutputTextures[name] = this._compositor.allocateTexture(outputInfo.parameters || {});\n            }\n            return this._prevOutputTextures[name];\n        }\n\n        this.render(renderer);\n\n        return this._outputTextures[name];\n    },\n\n    removeReference: function (outputName) {\n        this._outputReferences[outputName]--;\n        if (this._outputReferences[outputName] === 0) {\n            var outputInfo = this.outputs[outputName];\n            if (outputInfo.keepLastFrame) {\n                if (this._prevOutputTextures[outputName]) {\n                    this._compositor.releaseTexture(this._prevOutputTextures[outputName]);\n                }\n                this._prevOutputTextures[outputName] = this._outputTextures[outputName];\n            }\n            else {\n                // Output of this node have alreay been used by all other nodes\n                // Put the texture back to the pool.\n                this._compositor.releaseTexture(this._outputTextures[outputName]);\n            }\n        }\n    },\n\n    link: function (inputPinName, fromNode, fromPinName) {\n\n        // The relationship from output pin to input pin is one-on-multiple\n        this.inputLinks[inputPinName] = {\n            node: fromNode,\n            pin: fromPinName\n        };\n        if (!fromNode.outputLinks[fromPinName]) {\n            fromNode.outputLinks[fromPinName] = [];\n        }\n        fromNode.outputLinks[fromPinName].push({\n            node: this,\n            pin: inputPinName\n        });\n\n        // Enabled the pin texture in shader\n        this.pass.material.enableTexture(inputPinName);\n    },\n\n    clear: function () {\n        this.inputLinks = {};\n        this.outputLinks = {};\n    },\n\n    updateReference: function (outputName) {\n        if (!this._rendering) {\n            this._rendering = true;\n            for (var inputName in this.inputLinks) {\n                var link = this.inputLinks[inputName];\n                link.node.updateReference(link.pin);\n            }\n            this._rendering = false;\n        }\n        if (outputName) {\n            this._outputReferences[outputName] ++;\n        }\n    },\n\n    beforeFrame: function () {\n        this._rendered = false;\n\n        for (var name in this.outputLinks) {\n            this._outputReferences[name] = 0;\n        }\n    },\n\n    afterFrame: function () {\n        // Put back all the textures to pool\n        for (var name in this.outputLinks) {\n            if (this._outputReferences[name] > 0) {\n                var outputInfo = this.outputs[name];\n                if (outputInfo.keepLastFrame) {\n                    if (this._prevOutputTextures[name]) {\n                        this._compositor.releaseTexture(this._prevOutputTextures[name]);\n                    }\n                    this._prevOutputTextures[name] = this._outputTextures[name];\n                }\n                else {\n                    this._compositor.releaseTexture(this._outputTextures[name]);\n                }\n            }\n        }\n    }\n});\n\nexport default CompositorNode;\n","import CompositorNode from './CompositorNode';\nimport glenum from '../core/glenum';\nimport FrameBuffer from '../FrameBuffer';\n\n/**\n * @constructor clay.compositor.SceneNode\n * @extends clay.compositor.CompositorNode\n */\nvar SceneNode = CompositorNode.extend(\n/** @lends clay.compositor.SceneNode# */\n{\n    name: 'scene',\n    /**\n     * @type {clay.Scene}\n     */\n    scene: null,\n    /**\n     * @type {clay.Camera}\n     */\n    camera: null,\n    /**\n     * @type {boolean}\n     */\n    autoUpdateScene: true,\n    /**\n     * @type {boolean}\n     */\n    preZ: false\n\n}, function() {\n    this.frameBuffer = new FrameBuffer();\n}, {\n    render: function(renderer) {\n\n        this._rendering = true;\n        var _gl = renderer.gl;\n\n        this.trigger('beforerender');\n\n        var renderInfo;\n\n        if (!this.outputs) {\n\n            renderInfo = renderer.render(this.scene, this.camera, !this.autoUpdateScene, this.preZ);\n\n        }\n        else {\n\n            var frameBuffer = this.frameBuffer;\n            for (var name in this.outputs) {\n                var parameters = this.updateParameter(name, renderer);\n                var outputInfo = this.outputs[name];\n                var texture = this._compositor.allocateTexture(parameters);\n                this._outputTextures[name] = texture;\n\n                var attachment = outputInfo.attachment || _gl.COLOR_ATTACHMENT0;\n                if (typeof(attachment) == 'string') {\n                    attachment = _gl[attachment];\n                }\n                frameBuffer.attach(texture, attachment);\n            }\n            frameBuffer.bind(renderer);\n\n            // MRT Support in chrome\n            // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n            var ext = renderer.getGLExtension('EXT_draw_buffers');\n            if (ext) {\n                var bufs = [];\n                for (var attachment in this.outputs) {\n                    attachment = parseInt(attachment);\n                    if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n                        bufs.push(attachment);\n                    }\n                }\n                ext.drawBuffersEXT(bufs);\n            }\n\n            // Always clear\n            // PENDING\n            renderer.saveClear();\n            renderer.clearBit = glenum.DEPTH_BUFFER_BIT | glenum.COLOR_BUFFER_BIT;\n            renderInfo = renderer.render(this.scene, this.camera, !this.autoUpdateScene, this.preZ);\n            renderer.restoreClear();\n\n            frameBuffer.unbind(renderer);\n        }\n\n        this.trigger('afterrender', renderInfo);\n\n        this._rendering = false;\n        this._rendered = true;\n    }\n});\n\nexport default SceneNode;\n","import CompositorNode from './CompositorNode';\n\n/**\n * @constructor clay.compositor.TextureNode\n * @extends clay.compositor.CompositorNode\n */\nvar TextureNode = CompositorNode.extend(function() {\n    return /** @lends clay.compositor.TextureNode# */ {\n        /**\n         * @type {clay.Texture2D}\n         */\n        texture: null,\n\n        // Texture node must have output without parameters\n        outputs: {\n            color: {}\n        }\n    };\n}, function () {\n}, {\n\n    getOutput: function (renderer, name) {\n        return this.texture;\n    },\n\n    // Do nothing\n    beforeFrame: function () {},\n    afterFrame: function () {}\n});\n\nexport default TextureNode;\n","// TODO Shader library\nimport Pass from './Pass';\nimport CompositorNode from './CompositorNode';\n\n// TODO curlnoise demo wrong\n\n// PENDING\n// Use topological sort ?\n\n/**\n * Filter node\n *\n * @constructor clay.compositor.FilterNode\n * @extends clay.compositor.CompositorNode\n *\n * @example\n    var node = new clay.compositor.FilterNode({\n        name: 'fxaa',\n        shader: clay.Shader.source('clay.compositor.fxaa'),\n        inputs: {\n            texture: {\n                    node: 'scene',\n                    pin: 'color'\n            }\n        },\n        // Multiple outputs is preserved for MRT support in WebGL2.0\n        outputs: {\n            color: {\n                attachment: clay.FrameBuffer.COLOR_ATTACHMENT0\n                parameters: {\n                    format: clay.Texture.RGBA,\n                    width: 512,\n                    height: 512\n                },\n                // Node will keep the RTT rendered in last frame\n                keepLastFrame: true,\n                // Force the node output the RTT rendered in last frame\n                outputLastFrame: true\n            }\n        }\n    });\n    *\n    */\nvar FilterNode = CompositorNode.extend(function () {\n    return /** @lends clay.compositor.FilterNode# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * @type {Object}\n         */\n        inputs: {},\n\n        /**\n         * @type {Object}\n         */\n        outputs: null,\n\n        /**\n         * @type {string}\n         */\n        shader: '',\n\n        /**\n         * Input links, will be updated by the graph\n         * @example:\n         *     inputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        inputLinks: {},\n\n        /**\n         * Output links, will be updated by the graph\n         * @example:\n         *     outputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        outputLinks: {},\n\n        /**\n         * @type {clay.compositor.Pass}\n         */\n        pass: null,\n\n        // Save the output texture of previous frame\n        // Will be used when there exist a circular reference\n        _prevOutputTextures: {},\n        _outputTextures: {},\n\n        // Example: { name: 2 }\n        _outputReferences: {},\n\n        _rendering: false,\n        // If rendered in this frame\n        _rendered: false,\n\n        _compositor: null\n    };\n}, function () {\n\n    var pass = new Pass({\n        fragment: this.shader\n    });\n    this.pass = pass;\n},\n/** @lends clay.compositor.FilterNode.prototype */\n{\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    render: function (renderer, frameBuffer) {\n        this.trigger('beforerender', renderer);\n\n        this._rendering = true;\n\n        var _gl = renderer.gl;\n\n        for (var inputName in this.inputLinks) {\n            var link = this.inputLinks[inputName];\n            var inputTexture = link.node.getOutput(renderer, link.pin);\n            this.pass.setUniform(inputName, inputTexture);\n        }\n        // Output\n        if (!this.outputs) {\n            this.pass.outputs = null;\n\n            this._compositor.getFrameBuffer().unbind(renderer);\n\n            this.pass.render(renderer, frameBuffer);\n        }\n        else {\n            this.pass.outputs = {};\n\n            var attachedTextures = {};\n            for (var name in this.outputs) {\n                var parameters = this.updateParameter(name, renderer);\n                if (isNaN(parameters.width)) {\n                    this.updateParameter(name, renderer);\n                }\n                var outputInfo = this.outputs[name];\n                var texture = this._compositor.allocateTexture(parameters);\n                this._outputTextures[name] = texture;\n                var attachment = outputInfo.attachment || _gl.COLOR_ATTACHMENT0;\n                if (typeof(attachment) === 'string') {\n                    attachment = _gl[attachment];\n                }\n                attachedTextures[attachment] = texture;\n            }\n            this._compositor.getFrameBuffer().bind(renderer);\n\n            for (var attachment in attachedTextures) {\n                // FIXME attachment changes in different nodes\n                this._compositor.getFrameBuffer().attach(\n                    attachedTextures[attachment], attachment\n                );\n            }\n\n            this.pass.render(renderer);\n\n            // Because the data of texture is changed over time,\n            // Here update the mipmaps of texture each time after rendered;\n            this._compositor.getFrameBuffer().updateMipmap(renderer);\n        }\n\n        for (var inputName in this.inputLinks) {\n            var link = this.inputLinks[inputName];\n            link.node.removeReference(link.pin);\n        }\n\n        this._rendering = false;\n        this._rendered = true;\n\n        this.trigger('afterrender', renderer);\n    },\n\n    // TODO Remove parameter function callback\n    updateParameter: function (outputName, renderer) {\n        var outputInfo = this.outputs[outputName];\n        var parameters = outputInfo.parameters;\n        var parametersCopy = outputInfo._parametersCopy;\n        if (!parametersCopy) {\n            parametersCopy = outputInfo._parametersCopy = {};\n        }\n        if (parameters) {\n            for (var key in parameters) {\n                if (key !== 'width' && key !== 'height') {\n                    parametersCopy[key] = parameters[key];\n                }\n            }\n        }\n        var width, height;\n        if (typeof parameters.width === 'function') {\n            width = parameters.width.call(this, renderer);\n        }\n        else {\n            width = parameters.width;\n        }\n        if (typeof parameters.height === 'function') {\n            height = parameters.height.call(this, renderer);\n        }\n        else {\n            height = parameters.height;\n        }\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n        if (\n            parametersCopy.width !== width\n            || parametersCopy.height !== height\n        ) {\n            if (this._outputTextures[outputName]) {\n                this._outputTextures[outputName].dispose(renderer);\n            }\n        }\n        parametersCopy.width = width;\n        parametersCopy.height = height;\n\n        return parametersCopy;\n    },\n\n    /**\n     * Set parameter\n     * @param {string} name\n     * @param {} value\n     */\n    setParameter: function (name, value) {\n        this.pass.setUniform(name, value);\n    },\n    /**\n     * Get parameter value\n     * @param  {string} name\n     * @return {}\n     */\n    getParameter: function (name) {\n        return this.pass.getUniform(name);\n    },\n    /**\n     * Set parameters\n     * @param {Object} obj\n     */\n    setParameters: function (obj) {\n        for (var name in obj) {\n            this.setParameter(name, obj[name]);\n        }\n    },\n    // /**\n    //  * Set shader code\n    //  * @param {string} shaderStr\n    //  */\n    // setShader: function (shaderStr) {\n    //     var material = this.pass.material;\n    //     material.shader.setFragment(shaderStr);\n    //     material.attachShader(material.shader, true);\n    // },\n    /**\n     * Proxy of pass.material.define('fragment', xxx);\n     * @param  {string} symbol\n     * @param  {number} [val]\n     */\n    define: function (symbol, val) {\n        this.pass.material.define('fragment', symbol, val);\n    },\n\n    /**\n     * Proxy of pass.material.undefine('fragment', xxx)\n     * @param  {string} symbol\n     */\n    undefine: function (symbol) {\n        this.pass.material.undefine('fragment', symbol);\n    },\n\n    removeReference: function (outputName) {\n        this._outputReferences[outputName]--;\n        if (this._outputReferences[outputName] === 0) {\n            var outputInfo = this.outputs[outputName];\n            if (outputInfo.keepLastFrame) {\n                if (this._prevOutputTextures[outputName]) {\n                    this._compositor.releaseTexture(this._prevOutputTextures[outputName]);\n                }\n                this._prevOutputTextures[outputName] = this._outputTextures[outputName];\n            }\n            else {\n                // Output of this node have alreay been used by all other nodes\n                // Put the texture back to the pool.\n                this._compositor.releaseTexture(this._outputTextures[outputName]);\n            }\n        }\n    },\n\n    clear: function () {\n        CompositorNode.prototype.clear.call(this);\n\n        // Default disable all texture\n        this.pass.material.disableTexturesAll();\n    }\n});\n\nexport default FilterNode;\n","import coloradjustEssl from './source/compositor/coloradjust.glsl.js';\nimport blurEssl from './source/compositor/blur.glsl.js';\nimport lumEssl from './source/compositor/lum.glsl.js';\nimport lutEssl from './source/compositor/lut.glsl.js';\nimport vigentteEssl from './source/compositor/vignette.glsl.js';\nimport outputEssl from './source/compositor/output.glsl.js';\nimport brightEssl from './source/compositor/bright.glsl.js';\nimport downsampleEssl from './source/compositor/downsample.glsl.js';\nimport upsampleEssl from './source/compositor/upsample.glsl.js';\nimport hdrEssl from './source/compositor/hdr.glsl.js';\nimport lensflareEssl from './source/compositor/lensflare.glsl.js';\nimport blendEssl from './source/compositor/blend.glsl.js';\nimport fxaaEssl from './source/compositor/fxaa.glsl.js';\n// import fxaa3Essl from './source/compositor/fxaa3.glsl.js';\n\n// TODO Must export a module and be used in the other modules. Or it will be tree shaked\nexport default function register(Shader) {\n    // Some build in shaders\n    Shader['import'](coloradjustEssl);\n    Shader['import'](blurEssl);\n    Shader['import'](lumEssl);\n    Shader['import'](lutEssl);\n    Shader['import'](vigentteEssl);\n    Shader['import'](outputEssl);\n    Shader['import'](brightEssl);\n    Shader['import'](downsampleEssl);\n    Shader['import'](upsampleEssl);\n    Shader['import'](hdrEssl);\n    Shader['import'](lensflareEssl);\n    Shader['import'](blendEssl);\n\n    Shader['import'](fxaaEssl);\n\n}","export default \"@export clay.compositor.coloradjust\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float brightness : 0.0;\\nuniform float contrast : 1.0;\\nuniform float exposure : 0.0;\\nuniform float gamma : 1.0;\\nuniform float saturation : 1.0;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord);\\n vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\\n color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\\n color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\\n color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\\n float luminance = dot( color, w );\\n color = mix(vec3(luminance), color, saturation);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.brightness\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float brightness : 0.0;\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord);\\n vec3 color = tex.rgb + vec3(brightness);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.contrast\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float contrast : 1.0;\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord);\\n vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.exposure\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float exposure : 0.0;\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n vec3 color = tex.rgb * pow(2.0, exposure);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.gamma\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float gamma : 1.0;\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n vec3 color = pow(tex.rgb, vec3(gamma));\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\\n@export clay.compositor.saturation\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float saturation : 1.0;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n vec3 color = tex.rgb;\\n float luminance = dot(color, w);\\n color = mix(vec3(luminance), color, saturation);\\n gl_FragColor = vec4(color, tex.a);\\n}\\n@end\";\n","export default \"@export clay.compositor.kernel.gaussian_9\\nfloat gaussianKernel[9];\\ngaussianKernel[0] = 0.07;\\ngaussianKernel[1] = 0.09;\\ngaussianKernel[2] = 0.12;\\ngaussianKernel[3] = 0.14;\\ngaussianKernel[4] = 0.16;\\ngaussianKernel[5] = 0.14;\\ngaussianKernel[6] = 0.12;\\ngaussianKernel[7] = 0.09;\\ngaussianKernel[8] = 0.07;\\n@end\\n@export clay.compositor.kernel.gaussian_13\\nfloat gaussianKernel[13];\\ngaussianKernel[0] = 0.02;\\ngaussianKernel[1] = 0.03;\\ngaussianKernel[2] = 0.06;\\ngaussianKernel[3] = 0.08;\\ngaussianKernel[4] = 0.11;\\ngaussianKernel[5] = 0.13;\\ngaussianKernel[6] = 0.14;\\ngaussianKernel[7] = 0.13;\\ngaussianKernel[8] = 0.11;\\ngaussianKernel[9] = 0.08;\\ngaussianKernel[10] = 0.06;\\ngaussianKernel[11] = 0.03;\\ngaussianKernel[12] = 0.02;\\n@end\\n@export clay.compositor.gaussian_blur\\n#define SHADER_NAME gaussian_blur\\nuniform sampler2D texture;varying vec2 v_Texcoord;\\nuniform float blurSize : 2.0;\\nuniform vec2 textureSize : [512.0, 512.0];\\nuniform float blurDir : 0.0;\\n@import clay.util.rgbm\\n@import clay.util.clamp_sample\\nvoid main (void)\\n{\\n @import clay.compositor.kernel.gaussian_9\\n vec2 off = blurSize / textureSize;\\n off *= vec2(1.0 - blurDir, blurDir);\\n vec4 sum = vec4(0.0);\\n float weightAll = 0.0;\\n for (int i = 0; i < 9; i++) {\\n float w = gaussianKernel[i];\\n vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\\n sum += texel * w;\\n weightAll += w;\\n }\\n gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\\n}\\n@end\\n\";\n","export default \"@export clay.compositor.hdr.log_lum\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\\n float luminance = dot(tex.rgb, w);\\n luminance = log(luminance + 0.001);\\n gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\\n}\\n@end\\n@export clay.compositor.hdr.lum_adaption\\nvarying vec2 v_Texcoord;\\nuniform sampler2D adaptedLum;\\nuniform sampler2D currentLum;\\nuniform float frameTime : 0.02;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\\n float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\\n fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\\n gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\\n}\\n@end\\n@export clay.compositor.lum\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\nvoid main()\\n{\\n vec4 tex = texture2D( texture, v_Texcoord );\\n float luminance = dot(tex.rgb, w);\\n gl_FragColor = vec4(vec3(luminance), 1.0);\\n}\\n@end\";\n","export default \"\\n@export clay.compositor.lut\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform sampler2D lookup;\\nvoid main()\\n{\\n vec4 tex = texture2D(texture, v_Texcoord);\\n float blueColor = tex.b * 63.0;\\n vec2 quad1;\\n quad1.y = floor(floor(blueColor) / 8.0);\\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\\n vec2 quad2;\\n quad2.y = floor(ceil(blueColor) / 8.0);\\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\\n vec2 texPos1;\\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\\n vec2 texPos2;\\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\\n vec4 newColor1 = texture2D(lookup, texPos1);\\n vec4 newColor2 = texture2D(lookup, texPos2);\\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\\n gl_FragColor = vec4(newColor.rgb, tex.w);\\n}\\n@end\";\n","export default \"@export clay.compositor.vignette\\n#define OUTPUT_ALPHA\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\nuniform float darkness: 1;\\nuniform float offset: 1;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\\n gl_FragColor.rgb = texel.rgb;\\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\\n gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\\n}\\n@end\";\n","export default \"@export clay.compositor.output\\n#define OUTPUT_ALPHA\\nvarying vec2 v_Texcoord;\\nuniform sampler2D texture;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\\n gl_FragColor.rgb = tex.rgb;\\n#ifdef OUTPUT_ALPHA\\n gl_FragColor.a = tex.a;\\n#else\\n gl_FragColor.a = 1.0;\\n#endif\\n gl_FragColor = encodeHDR(gl_FragColor);\\n#ifdef PREMULTIPLY_ALPHA\\n gl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n}\\n@end\";\n","export default \"@export clay.compositor.bright\\nuniform sampler2D texture;\\nuniform float threshold : 1;\\nuniform float scale : 1.0;\\nuniform vec2 textureSize: [512, 512];\\nvarying vec2 v_Texcoord;\\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\\n@import clay.util.rgbm\\nvec4 median(vec4 a, vec4 b, vec4 c)\\n{\\n return a + b + c - min(min(a, b), c) - max(max(a, b), c);\\n}\\nvoid main()\\n{\\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\\n#ifdef ANTI_FLICKER\\n vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\\n vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\\n vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\\n vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\\n vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\\n texel = median(median(texel, s1, s2), s3, s4);\\n#endif\\n float lum = dot(texel.rgb , lumWeight);\\n vec4 color;\\n if (lum > threshold && texel.a > 0.0)\\n {\\n color = vec4(texel.rgb * scale, texel.a * scale);\\n }\\n else\\n {\\n color = vec4(0.0);\\n }\\n gl_FragColor = encodeHDR(color);\\n}\\n@end\\n\";\n","export default \"@export clay.compositor.downsample\\nuniform sampler2D texture;\\nuniform vec2 textureSize : [512, 512];\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\nfloat brightness(vec3 c)\\n{\\n return max(max(c.r, c.g), c.b);\\n}\\n@import clay.util.clamp_sample\\nvoid main()\\n{\\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\\n#ifdef ANTI_FLICKER\\n vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\\n vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\\n vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\\n vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\\n float s1w = 1.0 / (brightness(s1) + 1.0);\\n float s2w = 1.0 / (brightness(s2) + 1.0);\\n float s3w = 1.0 / (brightness(s3) + 1.0);\\n float s4w = 1.0 / (brightness(s4) + 1.0);\\n float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\\n vec4 color = vec4(\\n (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\\n 1.0\\n );\\n#else\\n vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\\n color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\\n color *= 0.25;\\n#endif\\n gl_FragColor = encodeHDR(color);\\n}\\n@end\";\n","export default \"\\n@export clay.compositor.upsample\\n#define HIGH_QUALITY\\nuniform sampler2D texture;\\nuniform vec2 textureSize : [512, 512];\\nuniform float sampleScale: 0.5;\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\n@import clay.util.clamp_sample\\nvoid main()\\n{\\n#ifdef HIGH_QUALITY\\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\\n vec4 s;\\n s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\\n s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\\n gl_FragColor = encodeHDR(s / 16.0);\\n#else\\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\\n vec4 s;\\n s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\\n gl_FragColor = encodeHDR(s / 4.0);\\n#endif\\n}\\n@end\";\n","export default \"@export clay.compositor.hdr.composite\\n#define TONEMAPPING\\nuniform sampler2D texture;\\n#ifdef BLOOM_ENABLED\\nuniform sampler2D bloom;\\n#endif\\n#ifdef LENSFLARE_ENABLED\\nuniform sampler2D lensflare;\\nuniform sampler2D lensdirt;\\n#endif\\n#ifdef LUM_ENABLED\\nuniform sampler2D lum;\\n#endif\\n#ifdef LUT_ENABLED\\nuniform sampler2D lut;\\n#endif\\n#ifdef COLOR_CORRECTION\\nuniform float brightness : 0.0;\\nuniform float contrast : 1.0;\\nuniform float saturation : 1.0;\\n#endif\\n#ifdef VIGNETTE\\nuniform float vignetteDarkness: 1.0;\\nuniform float vignetteOffset: 1.0;\\n#endif\\nuniform float exposure : 1.0;\\nuniform float bloomIntensity : 0.25;\\nuniform float lensflareIntensity : 1;\\nvarying vec2 v_Texcoord;\\n@import clay.util.srgb\\nvec3 ACESToneMapping(vec3 color)\\n{\\n const float A = 2.51;\\n const float B = 0.03;\\n const float C = 2.43;\\n const float D = 0.59;\\n const float E = 0.14;\\n return (color * (A * color + B)) / (color * (C * color + D) + E);\\n}\\nfloat eyeAdaption(float fLum)\\n{\\n return mix(0.2, fLum, 0.5);\\n}\\n#ifdef LUT_ENABLED\\nvec3 lutTransform(vec3 color) {\\n float blueColor = color.b * 63.0;\\n vec2 quad1;\\n quad1.y = floor(floor(blueColor) / 8.0);\\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\\n vec2 quad2;\\n quad2.y = floor(ceil(blueColor) / 8.0);\\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\\n vec2 texPos1;\\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\\n vec2 texPos2;\\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\\n vec4 newColor1 = texture2D(lut, texPos1);\\n vec4 newColor2 = texture2D(lut, texPos2);\\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\\n return newColor.rgb;\\n}\\n#endif\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 texel = vec4(0.0);\\n vec4 originalTexel = vec4(0.0);\\n#ifdef TEXTURE_ENABLED\\n texel = decodeHDR(texture2D(texture, v_Texcoord));\\n originalTexel = texel;\\n#endif\\n#ifdef BLOOM_ENABLED\\n vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\\n texel.rgb += bloomTexel.rgb * bloomIntensity;\\n texel.a += bloomTexel.a * bloomIntensity;\\n#endif\\n#ifdef LENSFLARE_ENABLED\\n texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\\n#endif\\n texel.a = min(texel.a, 1.0);\\n#ifdef LUM_ENABLED\\n float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\\n float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\\n float exposureBias = adaptedLumDest * exposure;\\n#else\\n float exposureBias = exposure;\\n#endif\\n#ifdef TONEMAPPING\\n texel.rgb *= exposureBias;\\n texel.rgb = ACESToneMapping(texel.rgb);\\n#endif\\n texel = linearTosRGB(texel);\\n#ifdef LUT_ENABLED\\n texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\\n#endif\\n#ifdef COLOR_CORRECTION\\n texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\\n texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\\n float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\\n texel.rgb = mix(vec3(lum), texel.rgb, saturation);\\n#endif\\n#ifdef VIGNETTE\\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\\n texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\\n#endif\\n gl_FragColor = encodeHDR(texel);\\n#ifdef DEBUG\\n #if DEBUG == 1\\n gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\\n #elif DEBUG == 2\\n gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\\n #elif DEBUG == 3\\n gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\\n #endif\\n#endif\\n if (originalTexel.a <= 0.01 && gl_FragColor.a > 1e-5) {\\n gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\\n }\\n#ifdef PREMULTIPLY_ALPHA\\n gl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n}\\n@end\";\n","export default \"@export clay.compositor.lensflare\\n#define SAMPLE_NUMBER 8\\nuniform sampler2D texture;\\nuniform sampler2D lenscolor;\\nuniform vec2 textureSize : [512, 512];\\nuniform float dispersal : 0.3;\\nuniform float haloWidth : 0.4;\\nuniform float distortion : 1.0;\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\nvec4 textureDistorted(\\n in vec2 texcoord,\\n in vec2 direction,\\n in vec3 distortion\\n) {\\n return vec4(\\n decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\\n decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\\n decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\\n 1.0\\n );\\n}\\nvoid main()\\n{\\n vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;\\n vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\\n vec2 haloVec = normalize(ghostVec) * haloWidth;\\n vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\\n vec4 result = vec4(0.0);\\n for (int i = 0; i < SAMPLE_NUMBER; i++)\\n {\\n vec2 offset = fract(texcoord + ghostVec * float(i));\\n float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\\n weight = pow(1.0 - weight, 10.0);\\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\\n }\\n result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\\n float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\\n weight = pow(1.0 - weight, 10.0);\\n vec2 offset = fract(texcoord + haloVec);\\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\\n gl_FragColor = result;\\n}\\n@end\";\n","export default \"@export clay.compositor.blend\\n#define SHADER_NAME blend\\n#ifdef TEXTURE1_ENABLED\\nuniform sampler2D texture1;\\nuniform float weight1 : 1.0;\\n#endif\\n#ifdef TEXTURE2_ENABLED\\nuniform sampler2D texture2;\\nuniform float weight2 : 1.0;\\n#endif\\n#ifdef TEXTURE3_ENABLED\\nuniform sampler2D texture3;\\nuniform float weight3 : 1.0;\\n#endif\\n#ifdef TEXTURE4_ENABLED\\nuniform sampler2D texture4;\\nuniform float weight4 : 1.0;\\n#endif\\n#ifdef TEXTURE5_ENABLED\\nuniform sampler2D texture5;\\nuniform float weight5 : 1.0;\\n#endif\\n#ifdef TEXTURE6_ENABLED\\nuniform sampler2D texture6;\\nuniform float weight6 : 1.0;\\n#endif\\nvarying vec2 v_Texcoord;\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec4 tex = vec4(0.0);\\n#ifdef TEXTURE1_ENABLED\\n tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\\n#endif\\n#ifdef TEXTURE2_ENABLED\\n tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\\n#endif\\n#ifdef TEXTURE3_ENABLED\\n tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\\n#endif\\n#ifdef TEXTURE4_ENABLED\\n tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\\n#endif\\n#ifdef TEXTURE5_ENABLED\\n tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\\n#endif\\n#ifdef TEXTURE6_ENABLED\\n tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\\n#endif\\n gl_FragColor = encodeHDR(tex);\\n}\\n@end\";\n","export default \"@export clay.compositor.fxaa\\nuniform sampler2D texture;\\nuniform vec4 viewport : VIEWPORT;\\nvarying vec2 v_Texcoord;\\n#define FXAA_REDUCE_MIN (1.0/128.0)\\n#define FXAA_REDUCE_MUL (1.0/8.0)\\n#define FXAA_SPAN_MAX 8.0\\n@import clay.util.rgbm\\nvoid main()\\n{\\n vec2 resolution = 1.0 / viewport.zw;\\n vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\\n vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\\n vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\\n vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\\n vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );\\n vec3 rgbM = rgbaM.xyz;\\n float opacity = rgbaM.w;\\n vec3 luma = vec3( 0.299, 0.587, 0.114 );\\n float lumaNW = dot( rgbNW, luma );\\n float lumaNE = dot( rgbNE, luma );\\n float lumaSW = dot( rgbSW, luma );\\n float lumaSE = dot( rgbSE, luma );\\n float lumaM = dot( rgbM, luma );\\n float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\\n float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\\n vec2 dir;\\n dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\\n float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\\n dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n dir * rcpDirMin)) * resolution;\\n vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\\n rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\\n rgbA *= 0.5;\\n vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;\\n rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;\\n rgbB *= 0.25;\\n rgbB += rgbA * 0.5;\\n float lumaB = dot( rgbB, luma );\\n if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\\n {\\n gl_FragColor = vec4( rgbA, opacity );\\n }\\n else {\\n gl_FragColor = vec4( rgbB, opacity );\\n }\\n}\\n@end\";\n","import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport halton from './halton';\nimport SSAOGLSL from './SSAO.glsl.js';\nShader.import(SSAOGLSL);\n\nfunction generateNoiseData(size) {\n  var data = new Uint8Array(size * size * 4);\n  var n = 0;\n  var v3 = new Vector3();\n\n  for (var i = 0; i < size; i++) {\n    for (var j = 0; j < size; j++) {\n      v3.set(Math.random() * 2 - 1, Math.random() * 2 - 1, 0).normalize();\n      data[n++] = (v3.x * 0.5 + 0.5) * 255;\n      data[n++] = (v3.y * 0.5 + 0.5) * 255;\n      data[n++] = 0;\n      data[n++] = 255;\n    }\n  }\n\n  return data;\n}\n\nfunction generateNoiseTexture(size) {\n  return new Texture2D({\n    pixels: generateNoiseData(size),\n    wrapS: Texture.REPEAT,\n    wrapT: Texture.REPEAT,\n    width: size,\n    height: size\n  });\n}\n\nfunction generateKernel(size, offset, hemisphere) {\n  var kernel = new Float32Array(size * 3);\n  offset = offset || 0;\n\n  for (var i = 0; i < size; i++) {\n    var phi = halton(i + offset, 2) * (hemisphere ? 1 : 2) * Math.PI;\n    var theta = halton(i + offset, 3) * Math.PI;\n    var r = Math.random();\n    var x = Math.cos(phi) * Math.sin(theta) * r;\n    var y = Math.cos(theta) * r;\n    var z = Math.sin(phi) * Math.sin(theta) * r;\n    kernel[i * 3] = x;\n    kernel[i * 3 + 1] = y;\n    kernel[i * 3 + 2] = z;\n  }\n\n  return kernel; // var kernel = new Float32Array(size * 3);\n  // var v3 = new Vector3();\n  // for (var i = 0; i < size; i++) {\n  //     v3.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random())\n  //         .normalize().scale(Math.random());\n  //     kernel[i * 3] = v3.x;\n  //     kernel[i * 3 + 1] = v3.y;\n  //     kernel[i * 3 + 2] = v3.z;\n  // }\n  // return kernel;\n}\n\nfunction SSAOPass(opt) {\n  opt = opt || {};\n  this._ssaoPass = new Pass({\n    fragment: Shader.source('ecgl.ssao.estimate')\n  });\n  this._blurPass = new Pass({\n    fragment: Shader.source('ecgl.ssao.blur')\n  });\n  this._framebuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._ssaoTexture = new Texture2D();\n  this._blurTexture = new Texture2D();\n  this._blurTexture2 = new Texture2D();\n  this._depthTex = opt.depthTexture;\n  this._normalTex = opt.normalTexture;\n  this.setNoiseSize(4);\n  this.setKernelSize(opt.kernelSize || 12);\n\n  if (opt.radius != null) {\n    this.setParameter('radius', opt.radius);\n  }\n\n  if (opt.power != null) {\n    this.setParameter('power', opt.power);\n  }\n\n  if (!this._normalTex) {\n    this._ssaoPass.material.disableTexture('normalTex');\n\n    this._blurPass.material.disableTexture('normalTex');\n  }\n\n  if (!this._depthTex) {\n    this._blurPass.material.disableTexture('depthTex');\n  }\n\n  this._blurPass.material.setUniform('normalTex', this._normalTex);\n\n  this._blurPass.material.setUniform('depthTex', this._depthTex);\n}\n\nSSAOPass.prototype.setDepthTexture = function (depthTex) {\n  this._depthTex = depthTex;\n};\n\nSSAOPass.prototype.setNormalTexture = function (normalTex) {\n  this._normalTex = normalTex;\n\n  this._ssaoPass.material[normalTex ? 'enableTexture' : 'disableTexture']('normalTex'); // Switch between hemisphere and shere kernel.\n\n\n  this.setKernelSize(this._kernelSize);\n};\n\nSSAOPass.prototype.update = function (renderer, camera, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var ssaoPass = this._ssaoPass;\n  var blurPass = this._blurPass;\n  ssaoPass.setUniform('kernel', this._kernels[frame % this._kernels.length]);\n  ssaoPass.setUniform('depthTex', this._depthTex);\n\n  if (this._normalTex != null) {\n    ssaoPass.setUniform('normalTex', this._normalTex);\n  }\n\n  ssaoPass.setUniform('depthTexSize', [this._depthTex.width, this._depthTex.height]);\n  var viewInverseTranspose = new Matrix4();\n  Matrix4.transpose(viewInverseTranspose, camera.worldTransform);\n  ssaoPass.setUniform('projection', camera.projectionMatrix.array);\n  ssaoPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n  ssaoPass.setUniform('viewInverseTranspose', viewInverseTranspose.array);\n  var ssaoTexture = this._ssaoTexture;\n  var blurTexture = this._blurTexture;\n  var blurTexture2 = this._blurTexture2;\n  ssaoTexture.width = width / 2;\n  ssaoTexture.height = height / 2;\n  blurTexture.width = width;\n  blurTexture.height = height;\n  blurTexture2.width = width;\n  blurTexture2.height = height;\n\n  this._framebuffer.attach(ssaoTexture);\n\n  this._framebuffer.bind(renderer);\n\n  renderer.gl.clearColor(1, 1, 1, 1);\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT);\n  ssaoPass.render(renderer);\n  blurPass.setUniform('textureSize', [width / 2, height / 2]);\n  blurPass.setUniform('projection', camera.projectionMatrix.array);\n\n  this._framebuffer.attach(blurTexture);\n\n  blurPass.setUniform('direction', 0);\n  blurPass.setUniform('ssaoTexture', ssaoTexture);\n  blurPass.render(renderer);\n\n  this._framebuffer.attach(blurTexture2);\n\n  blurPass.setUniform('textureSize', [width, height]);\n  blurPass.setUniform('direction', 1);\n  blurPass.setUniform('ssaoTexture', blurTexture);\n  blurPass.render(renderer);\n\n  this._framebuffer.unbind(renderer); // Restore clear\n\n\n  var clearColor = renderer.clearColor;\n  renderer.gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n};\n\nSSAOPass.prototype.getTargetTexture = function () {\n  return this._blurTexture2;\n};\n\nSSAOPass.prototype.setParameter = function (name, val) {\n  if (name === 'noiseTexSize') {\n    this.setNoiseSize(val);\n  } else if (name === 'kernelSize') {\n    this.setKernelSize(val);\n  } else if (name === 'intensity') {\n    this._ssaoPass.material.set('intensity', val);\n  } else {\n    this._ssaoPass.setUniform(name, val);\n  }\n};\n\nSSAOPass.prototype.setKernelSize = function (size) {\n  this._kernelSize = size;\n\n  this._ssaoPass.material.define('fragment', 'KERNEL_SIZE', size);\n\n  this._kernels = this._kernels || [];\n\n  for (var i = 0; i < 30; i++) {\n    this._kernels[i] = generateKernel(size, i * size, !!this._normalTex);\n  }\n};\n\nSSAOPass.prototype.setNoiseSize = function (size) {\n  var texture = this._ssaoPass.getUniform('noiseTex');\n\n  if (!texture) {\n    texture = generateNoiseTexture(size);\n\n    this._ssaoPass.setUniform('noiseTex', generateNoiseTexture(size));\n  } else {\n    texture.data = generateNoiseData(size);\n    texture.width = texture.height = size;\n    texture.dirty();\n  }\n\n  this._ssaoPass.setUniform('noiseTexSize', [size, size]);\n};\n\nSSAOPass.prototype.dispose = function (renderer) {\n  this._blurTexture.dispose(renderer);\n\n  this._ssaoTexture.dispose(renderer);\n\n  this._blurTexture2.dispose(renderer);\n};\n\nexport default SSAOPass;","// Generate halton sequence\n// https://en.wikipedia.org/wiki/Halton_sequence\nfunction halton(index, base) {\n  var result = 0;\n  var f = 1 / base;\n  var i = index;\n\n  while (i > 0) {\n    result = result + f * (i % base);\n    i = Math.floor(i / base);\n    f = f / base;\n  }\n\n  return result;\n}\n\nexport default halton;","export default \"@export ecgl.ssao.estimate\\n\\nuniform sampler2D depthTex;\\n\\nuniform sampler2D normalTex;\\n\\nuniform sampler2D noiseTex;\\n\\nuniform vec2 depthTexSize;\\n\\nuniform vec2 noiseTexSize;\\n\\nuniform mat4 projection;\\n\\nuniform mat4 projectionInv;\\n\\nuniform mat4 viewInverseTranspose;\\n\\nuniform vec3 kernel[KERNEL_SIZE];\\n\\nuniform float radius : 1;\\n\\nuniform float power : 1;\\n\\nuniform float bias: 1e-2;\\n\\nuniform float intensity: 1.0;\\n\\nvarying vec2 v_Texcoord;\\n\\nfloat ssaoEstimator(in vec3 originPos, in mat3 kernelBasis) {\\n float occlusion = 0.0;\\n\\n for (int i = 0; i < KERNEL_SIZE; i++) {\\n vec3 samplePos = kernel[i];\\n#ifdef NORMALTEX_ENABLED\\n samplePos = kernelBasis * samplePos;\\n#endif\\n samplePos = samplePos * radius + originPos;\\n\\n vec4 texCoord = projection * vec4(samplePos, 1.0);\\n texCoord.xy /= texCoord.w;\\n\\n vec4 depthTexel = texture2D(depthTex, texCoord.xy * 0.5 + 0.5);\\n\\n float sampleDepth = depthTexel.r * 2.0 - 1.0;\\n if (projection[3][3] == 0.0) {\\n sampleDepth = projection[3][2] / (sampleDepth * projection[2][3] - projection[2][2]);\\n }\\n else {\\n sampleDepth = (sampleDepth - projection[3][2]) / projection[2][2];\\n }\\n \\n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - sampleDepth));\\n occlusion += rangeCheck * step(samplePos.z, sampleDepth - bias);\\n }\\n#ifdef NORMALTEX_ENABLED\\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\\n#else\\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\\n#endif\\n return pow(occlusion, power);\\n}\\n\\nvoid main()\\n{\\n\\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\\n\\n#ifdef NORMALTEX_ENABLED\\n vec4 tex = texture2D(normalTex, v_Texcoord);\\n if (dot(tex.rgb, tex.rgb) == 0.0) {\\n gl_FragColor = vec4(1.0);\\n return;\\n }\\n vec3 N = tex.rgb * 2.0 - 1.0;\\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\\n\\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\\n vec3 T = normalize(rvec - N * dot(rvec, N));\\n vec3 BT = normalize(cross(N, T));\\n mat3 kernelBasis = mat3(T, BT, N);\\n#else\\n if (depthTexel.r > 0.99999) {\\n gl_FragColor = vec4(1.0);\\n return;\\n }\\n mat3 kernelBasis;\\n#endif\\n\\n float z = depthTexel.r * 2.0 - 1.0;\\n\\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\\n vec4 p4 = projectionInv * projectedPos;\\n\\n vec3 position = p4.xyz / p4.w;\\n\\n float ao = ssaoEstimator(position, kernelBasis);\\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\\n gl_FragColor = vec4(vec3(ao), 1.0);\\n}\\n\\n@end\\n\\n\\n@export ecgl.ssao.blur\\n#define SHADER_NAME SSAO_BLUR\\n\\nuniform sampler2D ssaoTexture;\\n\\n#ifdef NORMALTEX_ENABLED\\nuniform sampler2D normalTex;\\n#endif\\n\\nvarying vec2 v_Texcoord;\\n\\nuniform vec2 textureSize;\\nuniform float blurSize : 1.0;\\n\\nuniform int direction: 0.0;\\n\\n#ifdef DEPTHTEX_ENABLED\\nuniform sampler2D depthTex;\\nuniform mat4 projection;\\nuniform float depthRange : 0.5;\\n\\nfloat getLinearDepth(vec2 coord)\\n{\\n float depth = texture2D(depthTex, coord).r * 2.0 - 1.0;\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n}\\n#endif\\n\\nvoid main()\\n{\\n float kernel[5];\\n kernel[0] = 0.122581;\\n kernel[1] = 0.233062;\\n kernel[2] = 0.288713;\\n kernel[3] = 0.233062;\\n kernel[4] = 0.122581;\\n\\n vec2 off = vec2(0.0);\\n if (direction == 0) {\\n off[0] = blurSize / textureSize.x;\\n }\\n else {\\n off[1] = blurSize / textureSize.y;\\n }\\n\\n vec2 coord = v_Texcoord;\\n\\n float sum = 0.0;\\n float weightAll = 0.0;\\n\\n#ifdef NORMALTEX_ENABLED\\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\\n#endif\\n#if defined(DEPTHTEX_ENABLED)\\n float centerDepth = getLinearDepth(v_Texcoord);\\n#endif\\n\\n for (int i = 0; i < 5; i++) {\\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 2.0) * off, vec2(0.0), vec2(1.0));\\n\\n float w = kernel[i];\\n#ifdef NORMALTEX_ENABLED\\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\\n w *= clamp(dot(normal, centerNormal), 0.0, 1.0);\\n#endif\\n#ifdef DEPTHTEX_ENABLED\\n float d = getLinearDepth(coord);\\n w *= (1.0 - smoothstep(abs(centerDepth - d) / depthRange, 0.0, 1.0));\\n#endif\\n\\n weightAll += w;\\n sum += texture2D(ssaoTexture, coord).r * w;\\n }\\n\\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\\n}\\n\\n@end\\n\";","import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport halton from './halton';\nimport cubemapUtil from 'claygl/src/util/cubemap';\nimport SSRGLSLCode from './SSR.glsl.js';\nShader.import(SSRGLSLCode);\n\nfunction SSRPass(opt) {\n  opt = opt || {};\n  this._ssrPass = new Pass({\n    fragment: Shader.source('ecgl.ssr.main'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass1 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass2 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n\n  this._blendPass.material.disableTexturesAll();\n\n  this._blendPass.material.enableTexture(['texture1', 'texture2']);\n\n  this._ssrPass.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._ssrPass.setUniform('gBufferTexture2', opt.depthTexture); // this._ssrPass.setUniform('gBufferTexture3', opt.albedoTexture);\n\n\n  this._blurPass1.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._blurPass1.setUniform('gBufferTexture2', opt.depthTexture);\n\n  this._blurPass2.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._blurPass2.setUniform('gBufferTexture2', opt.depthTexture);\n\n  this._blurPass2.material.define('fragment', 'VERTICAL');\n\n  this._blurPass2.material.define('fragment', 'BLEND');\n\n  this._ssrTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture2 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture3 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._prevTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._currentTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._normalDistribution = null;\n  this._totalSamples = 256;\n  this._samplePerFrame = 4;\n\n  this._ssrPass.material.define('fragment', 'SAMPLE_PER_FRAME', this._samplePerFrame);\n\n  this._ssrPass.material.define('fragment', 'TOTAL_SAMPLES', this._totalSamples);\n\n  this._downScale = 1;\n}\n\nSSRPass.prototype.setAmbientCubemap = function (specularCubemap, specularIntensity) {\n  this._ssrPass.material.set('specularCubemap', specularCubemap);\n\n  this._ssrPass.material.set('specularIntensity', specularIntensity);\n\n  var enableSpecularMap = specularCubemap && specularIntensity;\n\n  this._ssrPass.material[enableSpecularMap ? 'enableTexture' : 'disableTexture']('specularCubemap');\n};\n\nSSRPass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var ssrTexture = this._ssrTexture;\n  var texture2 = this._texture2;\n  var texture3 = this._texture3;\n  ssrTexture.width = this._prevTexture.width = this._currentTexture.width = width / this._downScale;\n  ssrTexture.height = this._prevTexture.height = this._currentTexture.height = height / this._downScale;\n  texture2.width = texture3.width = width;\n  texture2.height = texture3.height = height;\n  var frameBuffer = this._frameBuffer;\n  var ssrPass = this._ssrPass;\n  var blurPass1 = this._blurPass1;\n  var blurPass2 = this._blurPass2;\n  var blendPass = this._blendPass;\n  var toViewSpace = new Matrix4();\n  var toWorldSpace = new Matrix4();\n  Matrix4.transpose(toViewSpace, camera.worldTransform);\n  Matrix4.transpose(toWorldSpace, camera.viewMatrix);\n  ssrPass.setUniform('sourceTexture', sourceTexture);\n  ssrPass.setUniform('projection', camera.projectionMatrix.array);\n  ssrPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n  ssrPass.setUniform('toViewSpace', toViewSpace.array);\n  ssrPass.setUniform('toWorldSpace', toWorldSpace.array);\n  ssrPass.setUniform('nearZ', camera.near);\n  var percent = frame / this._totalSamples * this._samplePerFrame;\n  ssrPass.setUniform('jitterOffset', percent);\n  ssrPass.setUniform('sampleOffset', frame * this._samplePerFrame);\n  blurPass1.setUniform('textureSize', [ssrTexture.width, ssrTexture.height]);\n  blurPass2.setUniform('textureSize', [width, height]);\n  blurPass2.setUniform('sourceTexture', sourceTexture);\n  blurPass1.setUniform('projection', camera.projectionMatrix.array);\n  blurPass2.setUniform('projection', camera.projectionMatrix.array);\n  frameBuffer.attach(ssrTexture);\n  frameBuffer.bind(renderer);\n  ssrPass.render(renderer);\n\n  if (this._physicallyCorrect) {\n    frameBuffer.attach(this._currentTexture);\n    blendPass.setUniform('texture1', this._prevTexture);\n    blendPass.setUniform('texture2', ssrTexture);\n    blendPass.material.set({\n      'weight1': frame >= 1 ? 0.95 : 0,\n      'weight2': frame >= 1 ? 0.05 : 1 // weight1: frame >= 1 ? 1 : 0,\n      // weight2: 1\n\n    });\n    blendPass.render(renderer);\n  }\n\n  frameBuffer.attach(texture2);\n  blurPass1.setUniform('texture', this._physicallyCorrect ? this._currentTexture : ssrTexture);\n  blurPass1.render(renderer);\n  frameBuffer.attach(texture3);\n  blurPass2.setUniform('texture', texture2);\n  blurPass2.render(renderer);\n  frameBuffer.unbind(renderer);\n\n  if (this._physicallyCorrect) {\n    var tmp = this._prevTexture;\n    this._prevTexture = this._currentTexture;\n    this._currentTexture = tmp;\n  }\n};\n\nSSRPass.prototype.getTargetTexture = function () {\n  return this._texture3;\n};\n\nSSRPass.prototype.setParameter = function (name, val) {\n  if (name === 'maxIteration') {\n    this._ssrPass.material.define('fragment', 'MAX_ITERATION', val);\n  } else {\n    this._ssrPass.setUniform(name, val);\n  }\n};\n\nSSRPass.prototype.setPhysicallyCorrect = function (isPhysicallyCorrect) {\n  if (isPhysicallyCorrect) {\n    if (!this._normalDistribution) {\n      this._normalDistribution = cubemapUtil.generateNormalDistribution(64, this._totalSamples);\n    }\n\n    this._ssrPass.material.define('fragment', 'PHYSICALLY_CORRECT');\n\n    this._ssrPass.material.set('normalDistribution', this._normalDistribution);\n\n    this._ssrPass.material.set('normalDistributionSize', [64, this._totalSamples]);\n  } else {\n    this._ssrPass.material.undefine('fragment', 'PHYSICALLY_CORRECT');\n  }\n\n  this._physicallyCorrect = isPhysicallyCorrect;\n};\n\nSSRPass.prototype.setSSAOTexture = function (texture) {\n  var blendPass = this._blurPass2;\n\n  if (texture) {\n    blendPass.material.enableTexture('ssaoTex');\n    blendPass.material.set('ssaoTex', texture);\n  } else {\n    blendPass.material.disableTexture('ssaoTex');\n  }\n};\n\nSSRPass.prototype.isFinished = function (frame) {\n  if (this._physicallyCorrect) {\n    return frame > this._totalSamples / this._samplePerFrame;\n  } else {\n    return true;\n  }\n};\n\nSSRPass.prototype.dispose = function (renderer) {\n  this._ssrTexture.dispose(renderer);\n\n  this._texture2.dispose(renderer);\n\n  this._texture3.dispose(renderer);\n\n  this._prevTexture.dispose(renderer);\n\n  this._currentTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default SSRPass;","export default \"@export ecgl.ssr.main\\n\\n#define SHADER_NAME SSR\\n#define MAX_ITERATION 20;\\n#define SAMPLE_PER_FRAME 5;\\n#define TOTAL_SAMPLES 128;\\n\\nuniform sampler2D sourceTexture;\\nuniform sampler2D gBufferTexture1;\\nuniform sampler2D gBufferTexture2;\\nuniform sampler2D gBufferTexture3;\\nuniform samplerCube specularCubemap;\\nuniform float specularIntensity: 1;\\n\\nuniform mat4 projection;\\nuniform mat4 projectionInv;\\nuniform mat4 toViewSpace;\\nuniform mat4 toWorldSpace;\\n\\nuniform float maxRayDistance: 200;\\n\\nuniform float pixelStride: 16;\\nuniform float pixelStrideZCutoff: 50; \\nuniform float screenEdgeFadeStart: 0.9; \\nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \\nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 1;\\n\\nuniform float nearZ;\\nuniform vec2 viewportSize : VIEWPORT_SIZE;\\n\\nuniform float jitterOffset: 0;\\n\\nvarying vec2 v_Texcoord;\\n\\n#ifdef DEPTH_DECODE\\n@import clay.util.decode_float\\n#endif\\n\\n#ifdef PHYSICALLY_CORRECT\\nuniform sampler2D normalDistribution;\\nuniform float sampleOffset: 0;\\nuniform vec2 normalDistributionSize;\\n\\nvec3 transformNormal(vec3 H, vec3 N) {\\n vec3 upVector = N.y > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\\n vec3 tangentX = normalize(cross(N, upVector));\\n vec3 tangentZ = cross(N, tangentX);\\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\\n}\\nvec3 importanceSampleNormalGGX(float i, float roughness, vec3 N) {\\n float p = fract((i + sampleOffset) / float(TOTAL_SAMPLES));\\n vec3 H = texture2D(normalDistribution,vec2(roughness, p)).rgb;\\n return transformNormal(H, N);\\n}\\nfloat G_Smith(float g, float ndv, float ndl) {\\n float roughness = 1.0 - g;\\n float k = roughness * roughness / 2.0;\\n float G1V = ndv / (ndv * (1.0 - k) + k);\\n float G1L = ndl / (ndl * (1.0 - k) + k);\\n return G1L * G1V;\\n}\\nvec3 F_Schlick(float ndv, vec3 spec) {\\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\\n}\\n#endif\\n\\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\\n{\\n vec4 depthTexel = texture2D(depthTexture, uv);\\n return depthTexel.r * 2.0 - 1.0;\\n}\\n\\nfloat linearDepth(float depth)\\n{\\n if (projection[3][3] == 0.0) {\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n }\\n else {\\n return (depth - projection[3][2]) / projection[2][2];\\n }\\n}\\n\\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\\n{\\n if (rayZFar > rayZNear)\\n {\\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\\n }\\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\\n}\\n\\n\\nbool traceScreenSpaceRay(\\n vec3 rayOrigin, vec3 rayDir, float jitter,\\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\\n)\\n{\\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\\n\\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\\n\\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\\n vec4 H1 = projection * vec4(rayEnd, 1.0);\\n\\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\\n\\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\\n\\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\\n\\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\\n vec2 delta = P1 - P0;\\n\\n bool permute = false;\\n if (abs(delta.x) < abs(delta.y)) {\\n permute = true;\\n delta = delta.yx;\\n P0 = P0.yx;\\n P1 = P1.yx;\\n }\\n float stepDir = sign(delta.x);\\n float invdx = stepDir / delta.x;\\n\\n vec3 dQ = (Q1 - Q0) * invdx;\\n float dk = (k1 - k0) * invdx;\\n\\n vec2 dP = vec2(stepDir, delta.y * invdx);\\n\\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\\n float pixStride = 1.0 + strideScaler * pixelStride;\\n\\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\\n\\n vec4 pqk = vec4(P0, Q0.z, k0);\\n vec4 dPQK = vec4(dP, dQ.z, dk);\\n\\n pqk += dPQK * jitter;\\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\\n float rayZNear;\\n\\n bool intersect = false;\\n\\n vec2 texelSize = 1.0 / viewportSize;\\n\\n iterationCount = 0.0;\\n\\n for (int i = 0; i < MAX_ITERATION; i++)\\n {\\n pqk += dPQK;\\n\\n rayZNear = rayZFar;\\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\\n\\n hitPixel = permute ? pqk.yx : pqk.xy;\\n hitPixel *= texelSize;\\n\\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\\n\\n iterationCount += 1.0;\\n\\n dPQK *= 1.2;\\n\\n if (intersect) {\\n break;\\n }\\n }\\n\\n Q0.xy += dQ.xy * iterationCount;\\n Q0.z = pqk.z;\\n hitPoint = Q0 / pqk.w;\\n\\n return intersect;\\n}\\n\\nfloat calculateAlpha(\\n float iterationCount, float reflectivity,\\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\\n)\\n{\\n float alpha = clamp(reflectivity, 0.0, 1.0);\\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\\n\\n float _eyeFadeStart = eyeFadeStart;\\n float _eyeFadeEnd = eyeFadeEnd;\\n if (_eyeFadeStart > _eyeFadeEnd) {\\n float tmp = _eyeFadeEnd;\\n _eyeFadeEnd = _eyeFadeStart;\\n _eyeFadeStart = tmp;\\n }\\n\\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\\n\\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\\n\\n return alpha;\\n}\\n\\n@import clay.util.rand\\n\\n@import clay.util.rgbm\\n\\nvoid main()\\n{\\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\\n\\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\\n discard;\\n }\\n\\n float g = normalAndGloss.a;\\n#if !defined(PHYSICALLY_CORRECT)\\n if (g <= minGlossiness) {\\n discard;\\n }\\n#endif\\n\\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\\n\\n vec3 N = normalize(normalAndGloss.rgb * 2.0 - 1.0);\\n N = normalize((toViewSpace * vec4(N, 0.0)).xyz);\\n\\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\\n vec4 pos = projectionInv * projectedPos;\\n vec3 rayOrigin = pos.xyz / pos.w;\\n vec3 V = -normalize(rayOrigin);\\n\\n float ndv = clamp(dot(N, V), 0.0, 1.0);\\n float iterationCount;\\n float jitter = rand(fract(v_Texcoord + jitterOffset));\\n\\n#ifdef PHYSICALLY_CORRECT\\n vec4 color = vec4(vec3(0.0), 1.0);\\n vec4 albedoMetalness = texture2D(gBufferTexture3, v_Texcoord);\\n vec3 albedo = albedoMetalness.rgb;\\n float m = albedoMetalness.a;\\n vec3 diffuseColor = albedo * (1.0 - m);\\n vec3 spec = mix(vec3(0.04), albedo, m);\\n\\n float jitter2 = rand(fract(v_Texcoord)) * float(TOTAL_SAMPLES);\\n\\n for (int i = 0; i < SAMPLE_PER_FRAME; i++) {\\n vec3 H = importanceSampleNormalGGX(float(i) + jitter2, 1.0 - g, N);\\n vec3 rayDir = normalize(reflect(-V, H));\\n#else\\n vec3 rayDir = normalize(reflect(-V, N));\\n#endif\\n vec2 hitPixel;\\n vec3 hitPoint;\\n\\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\\n\\n float dist = distance(rayOrigin, hitPoint);\\n\\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\\n hitNormal = normalize((toViewSpace * vec4(hitNormal, 0.0)).xyz);\\n#ifdef PHYSICALLY_CORRECT\\n float ndl = clamp(dot(N, rayDir), 0.0, 1.0);\\n float vdh = clamp(dot(V, H), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n vec3 litTexel = vec3(0.0);\\n if (dot(hitNormal, rayDir) < 0.0 && intersect) {\\n litTexel = texture2D(sourceTexture, hitPixel).rgb;\\n litTexel *= pow(clamp(1.0 - dist / 200.0, 0.0, 1.0), 3.0);\\n\\n }\\n else {\\n #ifdef SPECULARCUBEMAP_ENABLED\\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\\n litTexel = RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, 0.0), 8.12).rgb * specularIntensity;\\n#endif\\n }\\n color.rgb += ndl * litTexel * (\\n F_Schlick(ndl, spec) * G_Smith(g, ndv, ndl) * vdh / (ndh * ndv + 0.001)\\n );\\n }\\n color.rgb /= float(SAMPLE_PER_FRAME);\\n#else\\n #if !defined(SPECULARCUBEMAP_ENABLED)\\n if (dot(hitNormal, rayDir) >= 0.0) {\\n discard;\\n }\\n if (!intersect) {\\n discard;\\n }\\n#endif\\n float alpha = clamp(calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir), 0.0, 1.0);\\n vec4 color = texture2D(sourceTexture, hitPixel);\\n color.rgb *= alpha;\\n\\n#ifdef SPECULARCUBEMAP_ENABLED\\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\\n alpha = alpha * (intersect ? 1.0 : 0.0);\\n float bias = (1.0 -g) * 5.0;\\n color.rgb += (1.0 - alpha)\\n * RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, bias), 8.12).rgb\\n * specularIntensity;\\n#endif\\n\\n#endif\\n\\n gl_FragColor = encodeHDR(color);\\n}\\n@end\\n\\n@export ecgl.ssr.blur\\n\\nuniform sampler2D texture;\\nuniform sampler2D gBufferTexture1;\\nuniform sampler2D gBufferTexture2;\\nuniform mat4 projection;\\nuniform float depthRange : 0.05;\\n\\nvarying vec2 v_Texcoord;\\n\\nuniform vec2 textureSize;\\nuniform float blurSize : 1.0;\\n\\n#ifdef BLEND\\n #ifdef SSAOTEX_ENABLED\\nuniform sampler2D ssaoTex;\\n #endif\\nuniform sampler2D sourceTexture;\\n#endif\\n\\nfloat getLinearDepth(vec2 coord)\\n{\\n float depth = texture2D(gBufferTexture2, coord).r * 2.0 - 1.0;\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n}\\n\\n@import clay.util.rgbm\\n\\n\\nvoid main()\\n{\\n @import clay.compositor.kernel.gaussian_9\\n\\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\\n float g = centerNTexel.a;\\n float maxBlurSize = clamp(1.0 - g, 0.0, 1.0) * blurSize;\\n#ifdef VERTICAL\\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\\n#else\\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\\n#endif\\n\\n vec2 coord = v_Texcoord;\\n\\n vec4 sum = vec4(0.0);\\n float weightAll = 0.0;\\n\\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\\n float cD = getLinearDepth(v_Texcoord);\\n for (int i = 0; i < 9; i++) {\\n vec2 coord = clamp((float(i) - 4.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\\n float w = gaussianKernel[i]\\n * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\\n float d = getLinearDepth(coord);\\n w *= (1.0 - smoothstep(abs(cD - d) / depthRange, 0.0, 1.0));\\n\\n weightAll += w;\\n sum += decodeHDR(texture2D(texture, coord)) * w;\\n }\\n\\n#ifdef BLEND\\n float aoFactor = 1.0;\\n #ifdef SSAOTEX_ENABLED\\n aoFactor = texture2D(ssaoTex, v_Texcoord).r;\\n #endif\\n gl_FragColor = encodeHDR(\\n sum / weightAll * aoFactor + decodeHDR(texture2D(sourceTexture, v_Texcoord))\\n );\\n#else\\n gl_FragColor = encodeHDR(sum / weightAll);\\n#endif\\n}\\n\\n@end\";","// Based on https://bl.ocks.org/mbostock/19168c663618b707158\nexport default [0.0, 0.0, -0.321585265978, -0.154972575841, 0.458126042375, 0.188473391593, 0.842080129861, 0.527766490688, 0.147304551086, -0.659453822776, -0.331943915203, -0.940619700594, 0.0479226680259, 0.54812163202, 0.701581552186, -0.709825561388, -0.295436780218, 0.940589268233, -0.901489676764, 0.237713156085, 0.973570876096, -0.109899459384, -0.866792314779, -0.451805525005, 0.330975007087, 0.800048655954, -0.344275183665, 0.381779221166, -0.386139432542, -0.437418421534, -0.576478634965, -0.0148463392551, 0.385798197415, -0.262426961053, -0.666302061145, 0.682427250835, -0.628010632582, -0.732836215494, 0.10163141741, -0.987658134403, 0.711995289051, -0.320024291314, 0.0296005138058, 0.950296523438, 0.0130612307608, -0.351024443122, -0.879596633704, -0.10478487883, 0.435712737232, 0.504254490347, 0.779203817497, 0.206477676721, 0.388264289969, -0.896736162545, -0.153106280781, -0.629203242522, -0.245517550697, 0.657969239148, 0.126830499058, 0.26862328493, -0.634888119007, -0.302301223431, 0.617074219636, 0.779817204925];","// NormalPass will generate normal and depth data.\n// TODO Animation\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Material from 'claygl/src/Material';\nimport Pass from 'claygl/src/compositor/Pass';\nimport textureUtil from 'claygl/src/util/texture';\nimport normalGLSL from '../util/shader/normal.glsl.js';\nShader.import(normalGLSL);\n\nfunction attachTextureToSlot(renderer, program, symbol, texture, slot) {\n  var gl = renderer.gl;\n  program.setUniform(gl, '1i', symbol, slot);\n  gl.activeTexture(gl.TEXTURE0 + slot); // Maybe texture is not loaded yet;\n\n  if (texture.isRenderable()) {\n    texture.bind(renderer);\n  } else {\n    // Bind texture to null\n    texture.unbind(renderer);\n  }\n} // TODO Use globalShader insteadof globalMaterial?\n\n\nfunction getBeforeRenderHook(renderer, defaultNormalMap, defaultBumpMap, defaultRoughnessMap, normalMaterial) {\n  var previousNormalMap;\n  var previousBumpMap;\n  var previousRoughnessMap;\n  var previousRenderable;\n  var gl = renderer.gl;\n  return function (renderable, normalMaterial, prevNormalMaterial) {\n    // Material not change\n    if (previousRenderable && previousRenderable.material === renderable.material) {\n      return;\n    }\n\n    var material = renderable.material;\n    var program = renderable.__program;\n    var roughness = material.get('roughness');\n\n    if (roughness == null) {\n      roughness = 1;\n    }\n\n    var normalMap = material.get('normalMap') || defaultNormalMap;\n    var roughnessMap = material.get('roughnessMap');\n    var bumpMap = material.get('bumpMap');\n    var uvRepeat = material.get('uvRepeat');\n    var uvOffset = material.get('uvOffset');\n    var detailUvRepeat = material.get('detailUvRepeat');\n    var detailUvOffset = material.get('detailUvOffset');\n    var useBumpMap = !!bumpMap && material.isTextureEnabled('bumpMap');\n    var useRoughnessMap = !!roughnessMap && material.isTextureEnabled('roughnessMap');\n    var doubleSide = material.isDefined('fragment', 'DOUBLE_SIDED');\n    bumpMap = bumpMap || defaultBumpMap;\n    roughnessMap = roughnessMap || defaultRoughnessMap;\n\n    if (prevNormalMaterial !== normalMaterial) {\n      normalMaterial.set('normalMap', normalMap);\n      normalMaterial.set('bumpMap', bumpMap);\n      normalMaterial.set('roughnessMap', roughnessMap);\n      normalMaterial.set('useBumpMap', useBumpMap);\n      normalMaterial.set('useRoughnessMap', useRoughnessMap);\n      normalMaterial.set('doubleSide', doubleSide);\n      uvRepeat != null && normalMaterial.set('uvRepeat', uvRepeat);\n      uvOffset != null && normalMaterial.set('uvOffset', uvOffset);\n      detailUvRepeat != null && normalMaterial.set('detailUvRepeat', detailUvRepeat);\n      detailUvOffset != null && normalMaterial.set('detailUvOffset', detailUvOffset);\n      normalMaterial.set('roughness', roughness);\n    } else {\n      program.setUniform(gl, '1f', 'roughness', roughness);\n\n      if (previousNormalMap !== normalMap) {\n        attachTextureToSlot(renderer, program, 'normalMap', normalMap, 0);\n      }\n\n      if (previousBumpMap !== bumpMap && bumpMap) {\n        attachTextureToSlot(renderer, program, 'bumpMap', bumpMap, 1);\n      }\n\n      if (previousRoughnessMap !== roughnessMap && roughnessMap) {\n        attachTextureToSlot(renderer, program, 'roughnessMap', roughnessMap, 2);\n      }\n\n      if (uvRepeat != null) {\n        program.setUniform(gl, '2f', 'uvRepeat', uvRepeat);\n      }\n\n      if (uvOffset != null) {\n        program.setUniform(gl, '2f', 'uvOffset', uvOffset);\n      }\n\n      if (detailUvRepeat != null) {\n        program.setUniform(gl, '2f', 'detailUvRepeat', detailUvRepeat);\n      }\n\n      if (detailUvOffset != null) {\n        program.setUniform(gl, '2f', 'detailUvOffset', detailUvOffset);\n      }\n\n      program.setUniform(gl, '1i', 'useBumpMap', +useBumpMap);\n      program.setUniform(gl, '1i', 'useRoughnessMap', +useRoughnessMap);\n      program.setUniform(gl, '1i', 'doubleSide', +doubleSide);\n    }\n\n    previousNormalMap = normalMap;\n    previousBumpMap = bumpMap;\n    previousRoughnessMap = roughnessMap;\n    previousRenderable = renderable;\n  };\n}\n\nfunction NormalPass(opt) {\n  opt = opt || {};\n  this._depthTex = new Texture2D({\n    format: Texture.DEPTH_COMPONENT,\n    type: Texture.UNSIGNED_INT\n  });\n  this._normalTex = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._framebuffer = new FrameBuffer();\n\n  this._framebuffer.attach(this._normalTex);\n\n  this._framebuffer.attach(this._depthTex, FrameBuffer.DEPTH_ATTACHMENT);\n\n  this._normalMaterial = new Material({\n    shader: new Shader(Shader.source('ecgl.normal.vertex'), Shader.source('ecgl.normal.fragment'))\n  });\n\n  this._normalMaterial.enableTexture(['normalMap', 'bumpMap', 'roughnessMap']);\n\n  this._defaultNormalMap = textureUtil.createBlank('#000');\n  this._defaultBumpMap = textureUtil.createBlank('#000');\n  this._defaultRoughessMap = textureUtil.createBlank('#000');\n  this._debugPass = new Pass({\n    fragment: Shader.source('clay.compositor.output')\n  });\n\n  this._debugPass.setUniform('texture', this._normalTex);\n\n  this._debugPass.material.undefine('fragment', 'OUTPUT_ALPHA');\n}\n\nNormalPass.prototype.getDepthTexture = function () {\n  return this._depthTex;\n};\n\nNormalPass.prototype.getNormalTexture = function () {\n  return this._normalTex;\n};\n\nNormalPass.prototype.update = function (renderer, scene, camera) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var depthTexture = this._depthTex;\n  var normalTexture = this._normalTex;\n  var normalMaterial = this._normalMaterial;\n  depthTexture.width = width;\n  depthTexture.height = height;\n  normalTexture.width = width;\n  normalTexture.height = height;\n  var opaqueList = scene.getRenderList(camera).opaque;\n\n  this._framebuffer.bind(renderer);\n\n  renderer.gl.clearColor(0, 0, 0, 0);\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT | renderer.gl.DEPTH_BUFFER_BIT);\n  renderer.gl.disable(renderer.gl.BLEND);\n  renderer.renderPass(opaqueList, camera, {\n    getMaterial: function () {\n      return normalMaterial;\n    },\n    ifRender: function (object) {\n      return object.renderNormal;\n    },\n    beforeRender: getBeforeRenderHook(renderer, this._defaultNormalMap, this._defaultBumpMap, this._defaultRoughessMap, this._normalMaterial),\n    sort: renderer.opaqueSortCompare\n  });\n\n  this._framebuffer.unbind(renderer);\n};\n\nNormalPass.prototype.renderDebug = function (renderer) {\n  this._debugPass.render(renderer);\n};\n\nNormalPass.prototype.dispose = function (renderer) {\n  this._depthTex.dispose(renderer);\n\n  this._normalTex.dispose(renderer);\n};\n\nexport default NormalPass;","export default \"@export ecgl.normal.vertex\\n\\n@import ecgl.common.transformUniforms\\n\\n@import ecgl.common.uv.header\\n\\n@import ecgl.common.attributes\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\n@import ecgl.common.normalMap.vertexHeader\\n\\n@import ecgl.common.vertexAnimation.header\\n\\nvoid main()\\n{\\n\\n @import ecgl.common.vertexAnimation.main\\n\\n @import ecgl.common.uv.main\\n\\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\\n\\n @import ecgl.common.normalMap.vertexMain\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n}\\n\\n\\n@end\\n\\n\\n@export ecgl.normal.fragment\\n\\n#define ROUGHNESS_CHANEL 0\\n\\nuniform bool useBumpMap;\\nuniform bool useRoughnessMap;\\nuniform bool doubleSide;\\nuniform float roughness;\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n@import ecgl.common.normalMap.fragmentHeader\\n@import ecgl.common.bumpMap.header\\n\\nuniform sampler2D roughnessMap;\\n\\nvoid main()\\n{\\n vec3 N = v_Normal;\\n \\n bool flipNormal = false;\\n if (doubleSide) {\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n\\n if (dot(N, V) < 0.0) {\\n flipNormal = true;\\n }\\n }\\n\\n @import ecgl.common.normalMap.fragmentMain\\n\\n if (useBumpMap) {\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n }\\n\\n float g = 1.0 - roughness;\\n\\n if (useRoughnessMap) {\\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\\n }\\n\\n if (flipNormal) {\\n N = -N;\\n }\\n\\n gl_FragColor.rgb = (N.xyz + 1.0) * 0.5;\\n gl_FragColor.a = g;\\n}\\n@end\";","import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\n\nfunction EdgePass(opt) {\n  opt = opt || {};\n  this._edgePass = new Pass({\n    fragment: Shader.source('ecgl.edge')\n  });\n\n  this._edgePass.setUniform('normalTexture', opt.normalTexture);\n\n  this._edgePass.setUniform('depthTexture', opt.depthTexture);\n\n  this._targetTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer();\n\n  this._frameBuffer.attach(this._targetTexture);\n}\n\nEdgePass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var texture = this._targetTexture;\n  texture.width = width;\n  texture.height = height;\n  var frameBuffer = this._frameBuffer;\n  frameBuffer.bind(renderer);\n\n  this._edgePass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n\n  this._edgePass.setUniform('textureSize', [width, height]);\n\n  this._edgePass.setUniform('texture', sourceTexture);\n\n  this._edgePass.render(renderer);\n\n  frameBuffer.unbind(renderer);\n};\n\nEdgePass.prototype.getTargetTexture = function () {\n  return this._targetTexture;\n};\n\nEdgePass.prototype.setParameter = function (name, val) {\n  this._edgePass.setUniform(name, val);\n};\n\nEdgePass.prototype.dispose = function (renderer) {\n  this._targetTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default EdgePass;","export default {\n  'type': 'compositor',\n  'nodes': [{\n    'name': 'source',\n    'type': 'texture',\n    'outputs': {\n      'color': {}\n    }\n  }, {\n    'name': 'source_half',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'source'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    }\n  }, {\n    'name': 'bright',\n    'shader': '#source(clay.compositor.bright)',\n    'inputs': {\n      'texture': 'source_half'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'threshold': 2,\n      'scale': 4,\n      'textureSize': 'expr([width * 1.0 / 2, height / 2])'\n    }\n  }, {\n    'name': 'bright_downsample_4',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 2, height / 2] )'\n    }\n  }, {\n    'name': 'bright_downsample_8',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright_downsample_4'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 4, height / 4] )'\n    }\n  }, {\n    'name': 'bright_downsample_16',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright_downsample_8'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 16)',\n          'height': 'expr(height * 1.0 / 16)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 8, height / 8] )'\n    }\n  }, {\n    'name': 'bright_downsample_32',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright_downsample_16'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 32)',\n          'height': 'expr(height * 1.0 / 32)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 16, height / 16] )'\n    }\n  }, {\n    'name': 'bright_upsample_16_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_32'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 16)',\n          'height': 'expr(height * 1.0 / 16)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 32, height / 32] )'\n    }\n  }, {\n    'name': 'bright_upsample_16_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_16_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 16)',\n          'height': 'expr(height * 1.0 / 16)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 16, height * 1.0 / 16] )'\n    }\n  }, {\n    'name': 'bright_upsample_8_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_16'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 16, height * 1.0 / 16] )'\n    }\n  }, {\n    'name': 'bright_upsample_8_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_8_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 8, height * 1.0 / 8] )'\n    }\n  }, {\n    'name': 'bright_upsample_8_blend',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_8_blur_v',\n      'texture2': 'bright_upsample_16_blur_v'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'bright_upsample_4_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_8'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 8, height * 1.0 / 8] )'\n    }\n  }, {\n    'name': 'bright_upsample_4_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_4_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 4, height * 1.0 / 4] )'\n    }\n  }, {\n    'name': 'bright_upsample_4_blend',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_4_blur_v',\n      'texture2': 'bright_upsample_8_blend'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'bright_upsample_2_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_4'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 4, height * 1.0 / 4] )'\n    }\n  }, {\n    'name': 'bright_upsample_2_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_2_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 2, height * 1.0 / 2] )'\n    }\n  }, {\n    'name': 'bright_upsample_2_blend',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_2_blur_v',\n      'texture2': 'bright_upsample_4_blend'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'bright_upsample_full_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 2, height * 1.0 / 2] )'\n    }\n  }, {\n    'name': 'bright_upsample_full_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_full_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    }\n  }, {\n    'name': 'bloom_composite',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_full_blur_v',\n      'texture2': 'bright_upsample_2_blend'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'coc',\n    'shader': '#source(ecgl.dof.coc)',\n    'outputs': {\n      'color': {\n        'parameters': {\n          'minFilter': 'NEAREST',\n          'magFilter': 'NEAREST',\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)'\n        }\n      }\n    },\n    'parameters': {\n      'focalDist': 50,\n      'focalRange': 30\n    }\n  }, {\n    'name': 'dof_far_blur',\n    'shader': '#source(ecgl.dof.diskBlur)',\n    'inputs': {\n      'texture': 'source',\n      'coc': 'coc'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    }\n  }, {\n    'name': 'dof_near_blur',\n    'shader': '#source(ecgl.dof.diskBlur)',\n    'inputs': {\n      'texture': 'source',\n      'coc': 'coc'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    },\n    'defines': {\n      'BLUR_NEARFIELD': null\n    }\n  }, {\n    'name': 'dof_coc_blur',\n    'shader': '#source(ecgl.dof.diskBlur)',\n    'inputs': {\n      'texture': 'coc'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'minFilter': 'NEAREST',\n          'magFilter': 'NEAREST',\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    },\n    'defines': {\n      'BLUR_COC': null\n    }\n  }, {\n    'name': 'dof_composite',\n    'shader': '#source(ecgl.dof.composite)',\n    'inputs': {\n      'original': 'source',\n      'blurred': 'dof_far_blur',\n      'nearfield': 'dof_near_blur',\n      'coc': 'coc',\n      'nearcoc': 'dof_coc_blur'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    }\n  }, {\n    'name': 'composite',\n    'shader': '#source(clay.compositor.hdr.composite)',\n    'inputs': {\n      'texture': 'source',\n      'bloom': 'bloom_composite'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)'\n        }\n      }\n    },\n    'defines': {// Images are all premultiplied alpha before composite because of blending.\n      // 'PREMULTIPLY_ALPHA': null,\n      // 'DEBUG': 2\n    }\n  }, {\n    'name': 'FXAA',\n    'shader': '#source(clay.compositor.fxaa)',\n    'inputs': {\n      'texture': 'composite'\n    }\n  }]\n};","export default \"@export ecgl.dof.coc\\n\\nuniform sampler2D depth;\\n\\nuniform float zNear: 0.1;\\nuniform float zFar: 2000;\\n\\nuniform float focalDistance: 3;\\nuniform float focalRange: 1;\\nuniform float focalLength: 30;\\nuniform float fstop: 2.8;\\n\\nvarying vec2 v_Texcoord;\\n\\n@import clay.util.encode_float\\n\\nvoid main()\\n{\\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\\n\\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\\n\\n float aperture = focalLength / fstop;\\n\\n float coc;\\n\\n float uppper = focalDistance + focalRange;\\n float lower = focalDistance - focalRange;\\n if (dist <= uppper && dist >= lower) {\\n coc = 0.5;\\n }\\n else {\\n float focalAdjusted = dist > uppper ? uppper : lower;\\n\\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\\n\\n if (dist < lower) {\\n coc = -coc;\\n }\\n coc = coc * 0.5 + 0.5;\\n }\\n\\n gl_FragColor = encodeFloat(coc);\\n}\\n@end\\n\\n\\n@export ecgl.dof.composite\\n\\n#define DEBUG 0\\n\\nuniform sampler2D original;\\nuniform sampler2D blurred;\\nuniform sampler2D nearfield;\\nuniform sampler2D coc;\\nuniform sampler2D nearcoc;\\nvarying vec2 v_Texcoord;\\n\\n@import clay.util.rgbm\\n@import clay.util.float\\n\\nvoid main()\\n{\\n vec4 blurredColor = texture2D(blurred, v_Texcoord);\\n vec4 originalColor = texture2D(original, v_Texcoord);\\n\\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\\n\\n fCoc = abs(fCoc * 2.0 - 1.0);\\n\\n float weight = smoothstep(0.0, 1.0, fCoc);\\n \\n#ifdef NEARFIELD_ENABLED\\n vec4 nearfieldColor = texture2D(nearfield, v_Texcoord);\\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\\n\\n gl_FragColor = encodeHDR(\\n mix(\\n nearfieldColor, mix(originalColor, blurredColor, weight),\\n pow(1.0 - fNearCoc, 4.0)\\n )\\n );\\n#else\\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\\n#endif\\n\\n}\\n\\n@end\\n\\n\\n\\n@export ecgl.dof.diskBlur\\n\\n#define POISSON_KERNEL_SIZE 16;\\n\\nuniform sampler2D texture;\\nuniform sampler2D coc;\\nvarying vec2 v_Texcoord;\\n\\nuniform float blurRadius : 10.0;\\nuniform vec2 textureSize : [512.0, 512.0];\\n\\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\\n\\nuniform float percent;\\n\\nfloat nrand(const in vec2 n) {\\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\n@import clay.util.rgbm\\n@import clay.util.float\\n\\n\\nvoid main()\\n{\\n vec2 offset = blurRadius / textureSize;\\n\\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\\n float cosa = cos(rnd);\\n float sina = sin(rnd);\\n vec4 basis = vec4(cosa, -sina, sina, cosa);\\n\\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\\n#endif\\n\\n#ifdef BLUR_COC\\n float cocSum = 0.0;\\n#else\\n vec4 color = vec4(0.0);\\n#endif\\n\\n\\n float weightSum = 0.0;\\n\\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\\n vec2 ofs = poissonKernel[i];\\n\\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\\n\\n vec2 uv = v_Texcoord + ofs * offset;\\n vec4 texel = texture2D(texture, uv);\\n\\n float w = 1.0;\\n#ifdef BLUR_COC\\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\\n#else\\n texel = texel;\\n #if !defined(BLUR_NEARFIELD)\\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\\n w *= abs(fCoc);\\n #endif\\n texel.rgb *= texel.a;\\n color += texel * w;\\n#endif\\n\\n weightSum += w;\\n }\\n\\n#ifdef BLUR_COC\\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\\n#else\\n color /= weightSum;\\n color.rgb /= (color.a + 0.0001);\\n gl_FragColor = color;\\n#endif\\n}\\n\\n@end\";","export default \"@export ecgl.edge\\n\\nuniform sampler2D texture;\\n\\nuniform sampler2D normalTexture;\\nuniform sampler2D depthTexture;\\n\\nuniform mat4 projectionInv;\\n\\nuniform vec2 textureSize;\\n\\nuniform vec4 edgeColor: [0,0,0,0.8];\\n\\nvarying vec2 v_Texcoord;\\n\\nvec3 packColor(vec2 coord) {\\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\\n vec4 p4 = projectionInv * p;\\n\\n return vec3(\\n texture2D(normalTexture, coord).rg,\\n -p4.z / p4.w / 5.0\\n );\\n}\\n\\nvoid main() {\\n vec2 cc = v_Texcoord;\\n vec3 center = packColor(cc);\\n\\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\\n float dx = size / textureSize.x;\\n float dy = size / textureSize.y;\\n\\n vec2 coord;\\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\\n vec3 top = packColor(cc+vec2(0.0, -dy));\\n vec3 topRight = packColor(cc+vec2(dx, -dy));\\n vec3 left = packColor(cc+vec2(-dx, 0.0));\\n vec3 right = packColor(cc+vec2(dx, 0.0));\\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\\n vec3 bottom = packColor(cc+vec2(0.0, dy));\\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\\n\\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\\n\\n float edge = sqrt(dot(h, h) + dot(v, v));\\n\\n edge = smoothstep(0.8, 1.0, edge);\\n\\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\\n}\\n@end\";","// Temporal Super Sample for static Scene\nimport halton from './halton';\nimport Pass from 'claygl/src/compositor/Pass';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Shader from 'claygl/src/Shader';\nimport Matrix4 from 'claygl/src/math/Matrix4';\n\nfunction TemporalSuperSampling(frames) {\n  var haltonSequence = [];\n\n  for (var i = 0; i < 30; i++) {\n    haltonSequence.push([halton(i, 2), halton(i, 3)]);\n  }\n\n  this._haltonSequence = haltonSequence;\n  this._frame = 0;\n  this._sourceTex = new Texture2D();\n  this._sourceFb = new FrameBuffer();\n\n  this._sourceFb.attach(this._sourceTex); // Frame texture before temporal supersampling\n\n\n  this._prevFrameTex = new Texture2D();\n  this._outputTex = new Texture2D();\n  var blendPass = this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n  blendPass.material.disableTexturesAll();\n  blendPass.material.enableTexture(['texture1', 'texture2']);\n  this._blendFb = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._outputPass = new Pass({\n    fragment: Shader.source('clay.compositor.output'),\n    // TODO, alpha is premultiplied?\n    blendWithPrevious: true\n  });\n\n  this._outputPass.material.define('fragment', 'OUTPUT_ALPHA');\n\n  this._outputPass.material.blend = function (_gl) {\n    // FIXME.\n    // Output is premultiplied alpha when BLEND is enabled ?\n    // http://stackoverflow.com/questions/2171085/opengl-blending-with-previous-contents-of-framebuffer\n    _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n\n    _gl.blendFuncSeparate(_gl.ONE, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n  };\n}\n\nTemporalSuperSampling.prototype = {\n  constructor: TemporalSuperSampling,\n\n  /**\n   * Jitter camera projectionMatrix\n   * @parma {clay.Renderer} renderer\n   * @param {clay.Camera} camera\n   */\n  jitterProjection: function (renderer, camera) {\n    var viewport = renderer.viewport;\n    var dpr = viewport.devicePixelRatio || renderer.getDevicePixelRatio();\n    var width = viewport.width * dpr;\n    var height = viewport.height * dpr;\n    var offset = this._haltonSequence[this._frame % this._haltonSequence.length];\n    var translationMat = new Matrix4();\n    translationMat.array[12] = (offset[0] * 2.0 - 1.0) / width;\n    translationMat.array[13] = (offset[1] * 2.0 - 1.0) / height;\n    Matrix4.mul(camera.projectionMatrix, translationMat, camera.projectionMatrix);\n    Matrix4.invert(camera.invProjectionMatrix, camera.projectionMatrix);\n  },\n\n  /**\n   * Reset accumulating frame\n   */\n  resetFrame: function () {\n    this._frame = 0;\n  },\n\n  /**\n   * Return current frame\n   */\n  getFrame: function () {\n    return this._frame;\n  },\n\n  /**\n   * Get source framebuffer for usage\n   */\n  getSourceFrameBuffer: function () {\n    return this._sourceFb;\n  },\n  getOutputTexture: function () {\n    return this._outputTex;\n  },\n  resize: function (width, height) {\n    this._prevFrameTex.width = width;\n    this._prevFrameTex.height = height;\n    this._outputTex.width = width;\n    this._outputTex.height = height;\n    this._sourceTex.width = width;\n    this._sourceTex.height = height;\n\n    this._prevFrameTex.dirty();\n\n    this._outputTex.dirty();\n\n    this._sourceTex.dirty();\n  },\n  isFinished: function () {\n    return this._frame >= this._haltonSequence.length;\n  },\n  render: function (renderer, sourceTex, notOutput) {\n    var blendPass = this._blendPass;\n\n    if (this._frame === 0) {\n      // Direct output\n      blendPass.setUniform('weight1', 0);\n      blendPass.setUniform('weight2', 1);\n    } else {\n      blendPass.setUniform('weight1', 0.9);\n      blendPass.setUniform('weight2', 0.1);\n    }\n\n    blendPass.setUniform('texture1', this._prevFrameTex);\n    blendPass.setUniform('texture2', sourceTex || this._sourceTex);\n\n    this._blendFb.attach(this._outputTex);\n\n    this._blendFb.bind(renderer);\n\n    blendPass.render(renderer);\n\n    this._blendFb.unbind(renderer);\n\n    if (!notOutput) {\n      this._outputPass.setUniform('texture', this._outputTex);\n\n      this._outputPass.render(renderer);\n    } // Swap texture\n\n\n    var tmp = this._prevFrameTex;\n    this._prevFrameTex = this._outputTex;\n    this._outputTex = tmp;\n    this._frame++;\n  },\n  dispose: function (renderer) {\n    this._sourceFb.dispose(renderer);\n\n    this._blendFb.dispose(renderer);\n\n    this._prevFrameTex.dispose(renderer);\n\n    this._outputTex.dispose(renderer);\n\n    this._sourceTex.dispose(renderer);\n\n    this._outputPass.dispose(renderer);\n\n    this._blendPass.dispose(renderer);\n  }\n};\nexport default TemporalSuperSampling;","import * as echarts from 'echarts/lib/echarts';\nvar Axis3DModel = echarts.ComponentModel.extend({\n  type: 'cartesian3DAxis',\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid3D',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\necharts.helper.mixinAxisModelCommonMethods(Axis3DModel);\nexport default Axis3DModel;","import * as echarts from 'echarts/lib/echarts';\nimport axisDefault from './axis3DDefault';\nimport OrdinalMeta from 'echarts/lib/data/OrdinalMeta';\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {} registers\n * @param {string} dim 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nexport default function (registers, dim, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  AXIS_TYPES.forEach(function (axisType) {\n    var AxisModel = BaseAxisModelClass.extend({\n      type: dim + 'Axis3D.' + axisType,\n\n      /**\n       * @type readOnly\n       */\n      __ordinalMeta: null,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var themeModel = ecModel.getTheme();\n        echarts.util.merge(option, themeModel.get(axisType + 'Axis3D'));\n        echarts.util.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(dim, option);\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n      getCategories: function () {\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: echarts.util.merge(echarts.util.clone(axisDefault[axisType + 'Axis3D']), extraDefaultOption || {}, true)\n    });\n    registers.registerComponentModel(AxisModel);\n  }); // TODO\n\n  registers.registerSubTypeDefaulter(dim + 'Axis3D', echarts.util.curry(axisTypeDefaulter, dim));\n}\n;","import * as echarts from 'echarts/lib/echarts';\nvar defaultOption = {\n  show: true,\n  grid3DIndex: 0,\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字\n  name: '',\n  // 坐标轴名字位置\n  nameLocation: 'middle',\n  nameTextStyle: {\n    fontSize: 16\n  },\n  // 文字与轴线距离\n  nameGap: 20,\n  axisPointer: {},\n  axisLine: {},\n  // 坐标轴小标记\n  axisTick: {},\n  axisLabel: {},\n  // 分隔区域\n  splitArea: {}\n};\nvar categoryAxis = echarts.util.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    // Default with axisTick\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  },\n  axisPointer: {\n    label: {\n      show: false\n    }\n  }\n}, defaultOption);\nvar valueAxis = echarts.util.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5,\n  // Minimum interval\n  // minInterval: null\n  axisPointer: {\n    label: {}\n  }\n}, defaultOption); // FIXME\n\nvar timeAxis = echarts.util.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, valueAxis);\nvar logAxis = echarts.util.defaults({\n  logBase: 10\n}, valueAxis);\nlogAxis.scale = true;\nexport default {\n  categoryAxis3D: categoryAxis,\n  valueAxis3D: valueAxis,\n  timeAxis3D: timeAxis,\n  logAxis3D: logAxis\n};"],"names":["$5Sbbl","parcelRequire","$eed04975928f37f7$var$bedMeshToSeries","mesh","meshSize","series","iy","length","row","ix","value","push","max_x","min_x","max_y","min_y","$eed04975928f37f7$export$2e2bcd8739ae039","_Math","ref5","rpc","$aKHyj","default","ref1","slicedToArray","$6cds3","useState","bedMesh","setBedMesh","ref2","bedSize","setBedSize","ref3","meshType","setMeshType","ref4","scale","setScale","chart","useRef","useEffect","call","objects","bed_mesh","toolhead","then","param","status","_status","axis_minimum","axis_maximum","$3BPdl","useRpcHandler","params","console","log","objectSpread","profiles","current","ref","profile_name","mesh_params","probed_matrix","type","data","mesh_matrix","getEchartsInstance","setOption","zAxis3D","min","max","$lBpE3","jsxs","jsx","className","$parcel$interopDefault","$kOpwP","style","width","height","reduce","a","b","Math","apply","toConsumableArray","step","onChange","evt","parseFloat","target","orient","writingMode","WebkitAppearance","name","checked","$jubMy","echarts","$caeCS","option","darkMode","textStyle","color","visualMap","show","dimension","inRange","xAxis3D","yAxis3D","grid3D","viewControl","use","$hhKUn","install","$2FvfF","$5RUSV","CanvasRenderer","$3fYuu","DatasetComponent","DataZoomComponent","DataZoomInsideComponent","DataZoomSliderComponent","GridComponent","LegendComponent","$5O9u4","LineChart","LinesChart","TitleComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","$c95869365a55bc87$export$4b3e715f166fdd78","registers","registerChartView","$ifUyd","registerSeriesModel","$f6tIR","registerLayout","ecModel","api","eachSeriesByType","surfaceModel","cartesian","coordinateSystem","getData","points","Float32Array","count","nanPoint","NaN","dims","dimensions","map","coordDim","coordDimToDataDim","each","x","y","z","idx","pt","hasValue","dataToPoint","setLayout","$2mCI3","$7599dda1ed67a642$var$EChartsGL","zr","this","_layers","_zr","prototype","update","getLayerGL","model","zlevel","setSleepAfterStill","get","layers","self","layerGL","$es2CV","painter","isSingleCanvas","virtual","img","graphic","Image","image","renderer","canvas","silent","__hostImage","add","insertLayer","setStyle","getWidth","getHeight","setSilent","groupGL","traverse","isRenderable","ignorePicking","$ignorePicking","getZr","zlevel1","removeViewsAll","eachComponent","componentType","componentModel","view","getViewOfComponentModel","coordSys","__ecgl__","viewGL","error","id","addView","afterRender","eachSeries","seriesModel","chartView","getViewOfSeriesModel","warn","registerPostInit","oldDispose","dispose","eachOtherLayer","layer","getRenderedCanvas","opts","findAndDrawOtherLayer","smaller","larger","intermediateLayer","zlevelList","_zlevelList","Infinity","i","__builtin__","renderToCanvas","ctx","save","restore","_singleCanvas","dom","document","createElement","dpr","pixelRatio","getContext","clearRect","backgroundColor","fillStyle","fillRect","displayList","storage","getDisplayList","scope","layer1","i1","el","_doPaintEl","registerPostUpdate","__egl","registerPreprocessor","$iAVYD","$93XkR","$6chPG","$8txHy","$7MplQ","installLabelLayout","$a855b7ded56854f4$var$LayerGL","$4qR5R","clearBit","devicePixelRatio","preserveDrawingBuffer","premultipliedAlpha","resize","e","cssText","innerHTML","onglobalout","bind","on","position","left","top","views","_picking","$34R2K","_viewsToDispose","_accumulatingId","_zrEventProxy","Rect","shape","__isGLToZRProxy","_backgroundColor","_disposed","$a855b7ded56854f4$var$removeFromZr","node","__zr","removeAnimatorsFromZr","setUnpainted","indexOf","splice","scene","addAnimatorsToZr","removeView","forEach","clear","gl","clearColor","depthMask","colorMask","DEPTH_BUFFER_BIT","COLOR_BUFFER_BIT","clearDepth","needsRefresh","refresh","bgColor","$hXFgV","parseColor","prepareRender","_doRender","_trackAndClean","_startAccumulating","drawImage","accumulating","saveViewport","render","restoreViewport","_stopAccumulating","clearTimeout","_accumulatingTimeout","$a855b7ded56854f4$var$accumulatingId","$a855b7ded56854f4$var$markUnused","resourceList","__used__","$a855b7ded56854f4$var$checkAndDispose","$a855b7ded56854f4$var$updateUsed","resource","list","$a855b7ded56854f4$var$collectResources","textureResourceList","geometryResourceList","prevMaterial","prevGeometry","renderable","geometry","material","textureUniforms","getTextureUniforms","u","uniformName","val","uniforms","$a8C5n","Array","k","k1","lights","cubemap","immediate","needsAccumulate","accumulate","isFinished","isAccumulateFinished","$13cuO","setTimeout","textureList","geometriesList","_textureList","_geometriesList","off","onmousedown","event","obj","pickObject","offsetX","offsetY","_dispatchEvent","_dispatchDataEvent","_downX","_downY","onmousemove","lastHovered","_hovered","relatedTarget","setCursorStyle","onmouseup","_upX","_upY","onclick","dblclick","dx","dy","sqrt","result","_clickToSetFocusPoint","setDOFFocusOnPoint","distance","oldViewport","viewport","hasDOF","containPoint","camera","pick","output","pickAll","sort","eveName","originalEvent","newEvent","cancelBubble","trigger","getParent","_dispatchToView","dataIndex","seriesIndex","eventData","elChangedInMouseMove","eventProxy","targetInfo","ecData","helper","getECData","_lastDataIndex","parseInt","_lastSeriesIndex","handler","dispatchToElement","_lastEventData","eventName","Object","assign","$kEeeR","$a855b7ded56854f4$export$2e2bcd8739ae039","$jyTYl","$iMlmw","$27XlO","$33a2c666b78fc9e8$var$mat4Create","$8iiON","create","$33a2c666b78fc9e8$var$errorShader","$33a2c666b78fc9e8$var$defaultGetMaterial","$33a2c666b78fc9e8$var$defaultGetUniform","symbol","$33a2c666b78fc9e8$var$defaultIsMaterialChanged","renderabled","prevRenderable","$33a2c666b78fc9e8$var$defaultIfRender","$33a2c666b78fc9e8$var$noop","$33a2c666b78fc9e8$var$attributeBufferTypeMap","float","$hN5o1","FLOAT","byte","BYTE","ubyte","UNSIGNED_BYTE","short","SHORT","ushort","UNSIGNED_SHORT","$33a2c666b78fc9e8$var$VertexArrayObject","availableAttributes","availableAttributeSymbols","indicesBuffer","vao","$33a2c666b78fc9e8$var$PlaceHolderTexture","renderer1","blankCanvas","webglTexture","$2ylUq","createCanvas","firstBind","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","unbind","$33a2c666b78fc9e8$var$Renderer","extend","_width","_height","window","alpha","depth","stencil","antialias","throwError","maxJointNumber","__currentFrameBuffer","_viewportStack","_clearStack","_sceneRendering","Error","_glinfo","$7SpEi","targetRenderer","_programMgr","$fqsC8","_placeholderTexture","setViewport","getViewportAspect","setDevicePixelRatio","getDevicePixelRatio","getGLExtension","getExtension","getGLParameter","getParameter","pop","saveClear","restoreClear","opt","bindSceneRendering","notUpdateScene","preZ","_gl","needsScissor","viewportDpr","enable","SCISSOR_TEST","scissor","disable","updateLights","getMainCamera","renderList","updateRenderList","opaqueList","opaque","transparentList","transparent","sceneMaterial","renderPreZ","depthFunc","LEQUAL","LESS","worldViewMat","posViewSpace","$cjVJX","multiplyAffine","viewMatrix","array","worldTransform","transformMat4","__depth","renderPass","getMaterial","sortCompare","opaqueSortCompare","transparentSortCompare","getProgram","renderMaterial","validateProgram","program","__error","errorMsg","__uid__","updatePrograms","passConfig","prevJointsLen","joints","lightGroup","__program","getUniform","isMaterialChanged","beforeRender","ifRenderObject","ifRender","vDpr","viewportUniform","windowDpr","windowSizeUniform","getTextureWidth","getTextureHeight","viewportSizeUniform","time","Date","now","copy","$33a2c666b78fc9e8$var$matrices","VIEW","PROJECTION","projectionMatrix","VIEWINVERSE","identity","multiply","VIEWPROJECTION","invert","PROJECTIONINVERSE","VIEWPROJECTIONINVERSE","prevProgram","depthTest","culling","cullFace","frontFace","drawID","currentVAO","materialTakesTextureSlot","vaoExt","worldM","isSceneNode","isSkinnedMesh","offsetMatrix","IDENTITY","shader","currentDrawID","drawIDChanged","WORLD","WORLDVIEWPROJECTION","WORLDVIEW","matrixSemantics","WORLDINVERSE","WORLDINVERSETRANSPOSE","WORLDVIEWINVERSE","WORLDVIEWINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE","programChanged","setUniformOfSemantic","near","far","setLightUniforms","DEPTH_TEST","BLEND","blend","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","_bindMaterial","matrixSemanticKeys","semantic","semanticInfo","matrix","isTranspose","matrixNoTranspose","semanticNoTranspose","transpose","setUniform","CULL_FACE","_updateSkeleton","_bindVAO","_renderObject","getMaxJointNumber","object","slot","skeleton","skinMatricesTexture","getSubSkinMatricesTexture","useTextureSlot","skinMatricesArray","getSubSkinMatrices","glDrawMode","mode","ext","isInstanced","isInstancedMesh","instancedAttrLocations","_bindInstancedAttributes","indicesType","indices","Uint32Array","UNSIGNED_INT","drawElementsInstancedANGLE","getInstanceCount","drawElements","drawArraysInstancedANGLE","vertexCount","drawArrays","disableVertexAttribArray","instancedBuffers","getInstancedAttributesBuffers","locations","bufferObj","location","getAttribLocation","glType","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","buffer","vertexAttribPointer","size","vertexAttribDivisorANGLE","divisor","getUniformValue","sameProgram","currentTextureSlot","enabledUniforms","getEnabledUniforms","placeholderTexture","uniformValue","uniformType","__slot","uniform","isTexture","prevUniformValue","takeCurrentTextureSlot","isArray","hasUniform","arr","texture","newSlot","resetTextureSlot","isStatic","dynamic","vaoId","__vaoCache","chunks","getBufferChunks","chunk","attributeBuffers","attributeBufferInfo","attributeSemantics","attributes","needsBindAttributes","createVertexArrayOES","bindVertexArrayOES","locationList","enableAttributes","isUseIndices","ELEMENT_ARRAY_BUFFER","preZPassMaterial","_prezMaterial","$aOOPs","source","ignorePreZ","matA","matB","depthMaterial","isDefined","disposeScene","disposeNode","root","disposeGeometry","disposeTexture","remove","disposedMap","disposeFrameBuffer","frameBuffer","screenToNDC","out","$ir2XP","renderOrder","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","STENCIL_BUFFER_BIT","$33a2c666b78fc9e8$export$2e2bcd8739ae039","$jnZcE","$e3dc9c3db5ecaaee$var$Base","$8aCwz","genGUID","__initializers__","$e3dc9c3db5ecaaee$export$2e2bcd8739ae039","$e1cfa3f2ab6045c3$var$derive","makeDefaultOpt","initialize","proto","propList","_super","Function","propName","hasOwnProperty","sub","options","arguments","$e1cfa3f2ab6045c3$var$extend","$e1cfa3f2ab6045c3$var$extendWithPropList","constructor","initializers","__super__","slice","Ctor","derive","$e1cfa3f2ab6045c3$export$2e2bcd8739ae039","$f082969430ea5ba6$var$Handler","action","context","$f082969430ea5ba6$var$notifier","__handlers__","hdls","l","args","handlers","has","once","wrapper","before","after","success","retains","$f082969430ea5ba6$export$2e2bcd8739ae039","$5f2d2405843f518c$var$guid","$5f2d2405843f518c$var$nativeForEach","$5f2d2405843f518c$var$util","relative2absolute","path","basePath","match","pathParts","split","basePathParts","item","shift","join","defaults","undefined","extendWithPropList","defaultsWithPropList","iterator","len","key","isObject","isArrayLike","clone","ret","$5f2d2405843f518c$export$2e2bcd8739ae039","$5bc178e851d8fd4b$var$EXTENSION_LIST","$5bc178e851d8fd4b$var$PARAMETER_NAMES","$5bc178e851d8fd4b$export$2e2bcd8739ae039","createExtension","extensions","parameters","name1","$cf3b30eb103a204b$export$2e2bcd8739ae039","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","ZERO","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","BLEND_DST_RGB","BLEND_SRC_RGB","BLEND_DST_ALPHA","BLEND_SRC_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND_COLOR","ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER_BINDING","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","BUFFER_SIZE","BUFFER_USAGE","CURRENT_VERTEX_ATTRIB","FRONT","BACK","FRONT_AND_BACK","DITHER","STENCIL_TEST","POLYGON_OFFSET_FILL","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","OUT_OF_MEMORY","CW","CCW","LINE_WIDTH","ALIASED_POINT_SIZE_RANGE","ALIASED_LINE_WIDTH_RANGE","CULL_FACE_MODE","FRONT_FACE","DEPTH_RANGE","DEPTH_WRITEMASK","DEPTH_CLEAR_VALUE","DEPTH_FUNC","STENCIL_CLEAR_VALUE","STENCIL_FUNC","STENCIL_FAIL","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STENCIL_BACK_FUNC","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","VIEWPORT","SCISSOR_BOX","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","UNPACK_ALIGNMENT","PACK_ALIGNMENT","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","SUBPIXEL_BITS","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS","POLYGON_OFFSET_UNITS","POLYGON_OFFSET_FACTOR","TEXTURE_BINDING_2D","SAMPLE_BUFFERS","SAMPLES","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","COMPRESSED_TEXTURE_FORMATS","DONT_CARE","FASTEST","NICEST","GENERATE_MIPMAP_HINT","INT","DEPTH_COMPONENT","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","FRAGMENT_SHADER","VERTEX_SHADER","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VARYING_VECTORS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","MAX_FRAGMENT_UNIFORM_VECTORS","SHADER_TYPE","DELETE_STATUS","LINK_STATUS","VALIDATE_STATUS","ATTACHED_SHADERS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","SHADING_LANGUAGE_VERSION","CURRENT_PROGRAM","NEVER","EQUAL","GREATER","NOTEQUAL","GEQUAL","ALWAYS","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","VENDOR","RENDERER","VERSION","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE","TEXTURE_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","MAX_CUBE_MAP_TEXTURE_SIZE","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","ACTIVE_TEXTURE","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","COMPILE_STATUS","LOW_FLOAT","MEDIUM_FLOAT","HIGH_FLOAT","LOW_INT","MEDIUM_INT","HIGH_INT","FRAMEBUFFER","RENDERBUFFER","RGBA4","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL","RENDERBUFFER_WIDTH","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","NONE","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_BINDING","RENDERBUFFER_BINDING","MAX_RENDERBUFFER_SIZE","INVALID_FRAMEBUFFER_OPERATION","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","CONTEXT_LOST_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","$1dbfc068dea820a3$var$supportWebGL","$5J4al","$1dbfc068dea820a3$var$vendor","Int8Array","Uint8Array","Uint16Array","Int16Array","Float64Array","$1dbfc068dea820a3$var$g","$parcel$global","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","func","createImage","request","addEventListener","useCapture","removeEventListener","$1dbfc068dea820a3$export$2e2bcd8739ae039","$42b462fd60d8741f$export$2e2bcd8739ae039","xhr","XMLHttpRequest","open","url","responseType","onprogress","lengthComputable","percent","loaded","total","onload","onerror","response","send","$7e06007c00c4e735$var$parseColor","parseToFloat","$7e06007c00c4e735$var$programKeyCache","$7e06007c00c4e735$var$getDefineCode","defines","defineKeys","keys","defineStr","toString","$7e06007c00c4e735$var$Material","autoUpdateTextureStatus","vertexDefines","fragmentDefines","_textureStatus","_enabledUniforms","attachShader","precision","enableTexture","disableTexture","setUniforms","isUniformEnabled","_textureUniforms","set","keepStatus","originalUniforms","createUniforms","filter","originalVertexDefines","originalFragmentDefines","textureStatus","textures","shaderType","enabled","_programKey","getEnabledTextures","define","undefine","getDefine","enableTexturesAll","disableTexturesAll","isTextureEnabled","enabledTextures","dirtyDefines","getProgramKey","$7e06007c00c4e735$var$getProgramKey","$7e06007c00c4e735$export$2e2bcd8739ae039","$7QS1Z","$a6c63ca657eeb5aa$var$colorUtil","$a6c63ca657eeb5aa$var$kCSSColorTable","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$a6c63ca657eeb5aa$var$clampCssByte","round","$a6c63ca657eeb5aa$var$clampCssFloat","f","$a6c63ca657eeb5aa$var$parseCssInt","str","charAt","$a6c63ca657eeb5aa$var$parseCssFloat","$a6c63ca657eeb5aa$var$cssHueToRgb","m1","m2","h","$a6c63ca657eeb5aa$var$lerpNumber","p","$a6c63ca657eeb5aa$var$setRgba","r","g","$a6c63ca657eeb5aa$var$copyRgba","$a6c63ca657eeb5aa$var$colorCache","$a6c63ca657eeb5aa$var$lastRemovedArr","$a6c63ca657eeb5aa$var$putToCache","colorStr","rgbaArr","put","$a6c63ca657eeb5aa$var$hsla2rgba","hsla","rgba","s","parse","cached","iv","replace","toLowerCase","substr","op","ep","fname","lift","level","colorArr","stringify","toHex","fastLerp","normalizedValue","colors","leftIndex","floor","rightIndex","ceil","leftColor","rightColor","dv","fastMapToColor","lerp","fullOutput","mapToColor","modifyHSL","H","S","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","$a6c63ca657eeb5aa$var$rgba2hsla","modifyAlpha","arrColor","$a6c63ca657eeb5aa$export$2e2bcd8739ae039","$1Shqf","$5b774d31dc20111a$var$LRU","maxSize","_list","_map","_maxSize","setMaxSize","leastUsedEntry","head","entry","insert","tail","insertEntry","$5b774d31dc20111a$export$2e2bcd8739ae039","$15d8595007e2e021$var$LinkedList","_length","Entry","insertAt","next","cursor","prev","insertBeforeEntry","removeAt","curr","getHead","getTail","getAt","isEmpty","cb","haveContext","$15d8595007e2e021$export$2e2bcd8739ae039","$JiEM6","$d6bd0c323fd55452$var$Vector2","fromValues","_dirty","setArray","cross","dist","div","divide","dot","t","mul","negate","normalize","random","scaleAndAdd","sqrDist","squaredDistance","sqrLen","squaredLength","subtract","transformMat2","m","transformMat2d","transformMat3","toArray","defineProperty","$d6bd0c323fd55452$var$proto","$d6bd0c323fd55452$export$2e2bcd8739ae039","vec","$6wSvL","$0882ace8558ea1d0$var$vec2","GLMAT_ARRAY_TYPE","inverse","ax","ay","GLMAT_RANDOM","PI","cos","sin","stride","offset","fn","arg","$0882ace8558ea1d0$export$2e2bcd8739ae039","$4c10041037145bcf$export$65acf2a8af52a190","$4c10041037145bcf$export$b215cfa6c73149fa","$4c10041037145bcf$export$45afeab892d5eb82","$Xe8vc","$b3af7adc6f294eed$var$loopRegex","$b3af7adc6f294eed$var$unrollLoop","shaderStr","lightsNumbers","lightNumberDefines","lightType","start","end","snippet","unroll","isNaN","toFixed","$b3af7adc6f294eed$var$getDefineCode","toUpperCase","$b3af7adc6f294eed$var$ProgramManager","_renderer","_cache","cache","shaderID","getLightsNumbers","extraDefineCode","skinDefines","SKINNING","JOINT_COUNT","USE_SKIN_MATRICES_TEXTURE","vertexDefineStr","fragmentDefineStr","vertexCode","vertex","fragmentCode","exts","extensionStr","$b3af7adc6f294eed$var$getExtensionCode","fragment","finalVertexCode","finalFragmentCode","uniformSemantics","buildProgram","$b3af7adc6f294eed$export$2e2bcd8739ae039","$0b2079f1d0a33402$var$enabledAttributeList","$0b2079f1d0a33402$var$addLineNumbers","string","il","$0b2079f1d0a33402$var$checkShaderErrorMsg","shaderString","getShaderParameter","getShaderInfoLog","$0b2079f1d0a33402$var$tmpFloat32Array16","$0b2079f1d0a33402$export$2e2bcd8739ae039","_locations","_textureSlot","_program","useProgram","activeTexture","textureSlot","uniformMatrix4fv","uniform2i","uniform2f","uniform3i","uniform3f","uniform4i","uniform4f","uniform1i","uniform1f","uniform1fv","uniform1iv","uniform2iv","uniform2fv","uniform3iv","uniform3fv","uniform4iv","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","j","attribList","enabledAttributeListInContext","locationMap","__enabledAttributeList","vertexShaderCode","fragmentShaderCode","vertexShader","createShader","createProgram","shaderSource","compileShader","fragmentShader","msg","bindAttribLocation","linkProgram","deleteShader","getProgramParameter","getProgramInfoLog","uniformSymbol","getUniformLocation","$dabd47cdb032a727$var$uniformRegex","$dabd47cdb032a727$var$attributeRegex","$dabd47cdb032a727$var$defineRegex","$dabd47cdb032a727$var$uniformTypeMap","bool","int","sampler2D","samplerCube","vec2","vec3","vec4","ivec2","ivec3","ivec4","mat2","mat3","mat4","$dabd47cdb032a727$var$createZeroArray","$dabd47cdb032a727$var$uniformValueConstructor","$dabd47cdb032a727$var$attributeSemantics","$dabd47cdb032a727$var$uniformSemantics","$dabd47cdb032a727$var$matrixSemantics","$dabd47cdb032a727$var$attributeSizeMap","$dabd47cdb032a727$var$shaderIDCache","$dabd47cdb032a727$var$shaderCodeCache","$dabd47cdb032a727$var$removeComment","code","$dabd47cdb032a727$var$logSyntaxError","$dabd47cdb032a727$var$parseDeclarations","line","addSymbol","arrResult","currentDeclaration","declarations","arraySize","speratorsRegexp","tokens","newTokens","opType","declarationValue","token","ignore","$dabd47cdb032a727$var$Shader","_shaderID","$dabd47cdb032a727$var$getShaderID","_vertexCode","parseImport","_fragmentCode","uniformTemplates","_parseAttributes","_parseUniforms","_parseDefines","uniformTpl","_parseImport","_addSemanticUniform","_addMaterialUniform","defaultValueFunc","materialUniforms","makeDefaultValueFunc","_uniformParser","content","declaredUniforms","uniformMainStr","uniformInfo","tmpStr","_uniformList","declaredAttributes","attributeMainStr","_defineParser","trim","$dabd47cdb032a727$var$importRegex","importSymbol","importName","$dabd47cdb032a727$var$exportRegex","exportSymbol","exportName","parts","codes","$dabd47cdb032a727$export$2e2bcd8739ae039","$18ca460b95a57ebb$export$2e2bcd8739ae039","$609e9a1bbee1b3ea$var$mat4","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","b0","b1","b2","b3","mulAffine","translate","v","rotate","rad","axis","c","b12","b20","b21","b22","abs","GLMAT_EPSILON","rotateX","rotateY","rotateZ","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","frustum","right","bottom","rl","tb","nf","perspective","fovy","aspect","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","frob","pow","$609e9a1bbee1b3ea$export$2e2bcd8739ae039","$8f840c64f2ea5cd6$var$vec3","az","bx","by","bz","zScale","transformQuat","qx","qy","qz","qw","iz","iw","angle","tempA","tempB","cosine","acos","$8f840c64f2ea5cd6$export$2e2bcd8739ae039","v1","v2","v3","ray","worldInverse","$23dae41a14dd126b$var$RayPicking","_ray","$4Xn9S","_ndc","forcePickAll","castRay","_intersectNode","_intersectionCompareFunc","$bvV2b","pickByRay","_intersectRenderable","_children","$4Fqkj","$35plL","applyTransform","bbox","boundingBox","intersectBoundingBox","point","cullBack","positionAttr","weightAttr","weight","jointAttr","joint","skinMatrices","pos","skinnedPos","tmp","skinnedPositionAttr","skinnedPosition","createAttribute","init","i2","i3","finalPosAttr","intersectTriangle","pointW","Intersection","origin","pointWorld","triangle","triangleIndex","$23dae41a14dd126b$export$2e2bcd8739ae039","eBA","eCA","AO","vCross","$39bea2dff81b9ddf$var$EPSILON","$39bea2dff81b9ddf$var$Ray","direction","intersectPlane","plane","pn","normal","d","ro","rd","divider","mirrorAgainstPlane","distanceToPoint","c2","lenSquared","intersectSphere","radius","d2","r2","t0","t1","tmin","tmax","tymin","tymax","tzmin","tzmax","dir","invdirx","invdiry","invdirz","singleSided","barycenteric","$39bea2dff81b9ddf$export$2e2bcd8739ae039","$365f69aeef79643c$var$Vector3","applyProjection","eulerFromQuat","order","eulerFromMat3","$365f69aeef79643c$var$defineProperty","$365f69aeef79643c$var$proto","$365f69aeef79643c$var$clamp","$365f69aeef79643c$var$atan2","atan2","$365f69aeef79643c$var$asin","asin","$365f69aeef79643c$var$abs","w2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","defineProperties","POSITIVE_X","NEGATIVE_X","POSITIVE_Y","NEGATIVE_Y","POSITIVE_Z","NEGATIVE_Z","UP","$365f69aeef79643c$export$2e2bcd8739ae039","m3","$23f580b48bb20754$var$Matrix4","_axisX","_axisY","_axisZ","adjoint","determinant","fromMat2d","m2d","mulLeft","multiplyLeft","decomposeMatrix","$lSeIS","rotation","sx","sy","sz","fromMat4","$hXF0e","fromMat3","$23f580b48bb20754$var$defineProperty","$23f580b48bb20754$var$proto","m4","$23f580b48bb20754$export$2e2bcd8739ae039","tmpvec3","xUnitVec3","yUnitVec3","matr","$d137c0aa5ac0614e$var$quat","rotationTo","setAxisAngle","setAxes","$f105f","aw","bw","calculateW","slerp","omega","cosom","sinom","scale0","scale1","a0","a1","a2","a3","invDot","conjugate","fRoot","fTrace","$d137c0aa5ac0614e$export$2e2bcd8739ae039","$aee7039de3f084c8$export$6dba2a1f0d609415","$aee7039de3f084c8$export$2e2bcd8739ae039","$feca0fc876d7ec2a$var$mat3","normalFromMat4","$feca0fc876d7ec2a$export$2e2bcd8739ae039","properties","$3qdU6","$861ed4c939cd4804$var$Renderable","_renderInfo","frustumCulling","receiveShadow","castShadow","ignoreGBuffer","invisible","renderStat","getBoundingBox","union","$861ed4c939cd4804$export$2e2bcd8739ae039","RTMatrix","defaultFilter","tmpBBox","tmpMat4","invWorldTransform","$27de95d5d1696859$var$nameId","$27de95d5d1696859$export$2e2bcd8739ae039","localTransform","autoUpdateLocalTransform","_parent","_scene","_needsUpdateWorldTransform","_inIterating","$fx0HC","setName","nodeRepository","_nodeRepository","originalParent","_addSelfToScene","children","_removeSelfFromScene","removeAll","getScene","descendant","removeFromScene","addToScene","isAncestor","parent","childAt","getChildByName","getDescendantByName","child","res","queryNode","pathArr","found","getPath","rootNode","callback","eachChild","setLocalTransform","decomposeLocalTransform","keepScale","setWorldTransform","decomposeWorldTransform","transformNeedsUpdate","updateLocalTransform","_updateWorldTransformTopDown","updateWorldTransform","rootNodeIsDirty","forceUpdateWorld","$354e1","getWorldPosition","rotateAround","$b4ea7b9bf5bb600c$var$Quaternion","fromEuler","$b4ea7b9bf5bb600c$var$defineProperty","$b4ea7b9bf5bb600c$var$proto","c1","c3","s1","s2","s3","$b4ea7b9bf5bb600c$export$2e2bcd8739ae039","xa","xb","ya","yb","za","zb","$23e51dc01a2dfb3a$var$vec3Set","$23e51dc01a2dfb3a$var$vec3Copy","$23e51dc01a2dfb3a$var$BoundingBox","vertices","updateFromVertices","minArr","maxArr","intersection","_min","_max","_min2","_max2","containBoundingBox","_p","isFinite","transformFrom","v10","v11","v12","v20","v21","v22","v30","v31","v32","updateVertices","$23e51dc01a2dfb3a$export$2e2bcd8739ae039","$761831bfd97da79e$var$Texture","format","wrapS","wrapT","minFilter","magFilter","useMipmap","anisotropic","flipY","sRGB","unpackAlignment","premultiplyAlpha","NPOT","__used","$edHR8","getWebGLTexture","miss","isDirty","fresh","dirty","dirtyAll","updateCommon","pixelStorei","sRGBExt","SRGB","SRGB_ALPHA","isPowerOfTwo","getAvailableWrapS","getAvailableWrapT","getAvailableMinFilter","getAvailableMagFilter","nextHighestPowerOfTwo","deleteTexture","deleteContext","HALF_FLOAT","UNSIGNED_INT_24_8_WEBGL","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","$761831bfd97da79e$export$2e2bcd8739ae039","$a5a44c7aab582f89$var$DIRTY_PREFIX","$a5a44c7aab582f89$var$Cache","_contextId","_caches","_context","contextId","documentSchema","caches","field","freshAll","delete","clearAll","eachContext","$a5a44c7aab582f89$export$2e2bcd8739ae039","$9JdHk","$d137f61a4202d050$var$isValueImage","HTMLCanvasElement","HTMLImageElement","$Y1GyU","import","$gWOup","$kUkWA","$h4vbt","$ehzYF","$gNYdA","$jE1O9","$lkp13","$d137f61a4202d050$var$oldAddToScene","$dZPTb","$d137f61a4202d050$var$oldRemoveFromScene","setTextureImage","textureName","imgValue","textureOpts","$d137f61a4202d050$var$graphicGL","loadTexture","Renderer","Node","Mesh","Shader","Material","Texture","Texture2D","$arWrr","Geometry","$d0TG8","SphereGeometry","$2A8f6","PlaneGeometry","$cwyzs","CubeGeometry","$6dF52","AmbientLight","$6JlVB","DirectionalLight","$aHYAj","PointLight","$2V7a3","SpotLight","$epuvq","PerspectiveCamera","$hWuVR","OrthographicCamera","$c7LnK","Vector2","Vector3","Vector4","$bLu2U","Quaternion","Matrix2","$e5Doy","Matrix2d","$gZN1p","Matrix3","$cnWAI","Matrix4","Plane","$dnowd","Ray","BoundingBox","Frustum","$c06uB","$d137f61a4202d050$var$blankImage","$d137f61a4202d050$var$nearestPowerOfTwo","LN2","$d137f61a4202d050$var$convertTextureToPowerOfTwo","cb1","prefix","textureCache","__textureCache","$6NAmI","__textureid__","textureObj","surface","setECharts","$baWrs","onupdate","getTexture","callbacks","$cxpdj","exposure","fileType","originalImage","crossOrigin","src","createBlank","createAmbientCubemap","textureUrl","$Ego3n","firstNotNull","ambientCubemap","$gsc40","intensity","specularIntensity","ambientSH","$lIAxK","diffuseIntensity","coefficients","prefilter","$fv0Pe","projectEnvironmentMap","lod","specular","diffuse","createBlankTexture","isImage","additiveBlend","blendEquation","blendFunc","directionFromAlphaBeta","beta","theta","phi","getShadowResolution","shadowQuality","shadowResolution","COMMON_SHADERS","vertexShaderStr","fragmentShaderStr","createMaterial","defineName","setMaterialFromModel","shading","materialModel","getModel","detailTexture","uvRepeat","uvOffset","repeatParam","textureOpt","roughness","metalness","normalTextureVal","detailUvRepeat","detailUvOffset","tams","updateVertexAnimation","mappingAttributes","previousMesh","currentMesh","enableAnimation","duration","easing","shadowDepthMaterial","__percent","stopAnimation","animate","when","during","done","$d137f61a4202d050$export$2e2bcd8739ae039","$7152f126c97cbce1$var$Mesh","$7152f126c97cbce1$export$2e2bcd8739ae039","$79b9c24e05ac3d6f$var$isPowerOfTwo","$79b9c24e05ac3d6f$var$nearestPowerOfTwo","$79b9c24e05ac3d6f$var$Texture2D","pixels","mipmaps","convertToPOT","textureType","glFormat","texParameteri","anisotropicExt","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","mipmap","_updateTextureData","generateMipmap","imgData","_potCanvas","$79b9c24e05ac3d6f$var$convertTextureToPowerOfTwo","compressedTexImage2D","load","$79b9c24e05ac3d6f$export$2e2bcd8739ae039","$a6afdb76f9a4db49$var$mathUtil","$a6afdb76f9a4db49$export$2e2bcd8739ae039","$97967708ab73ab6c$var$vec3Create","$97967708ab73ab6c$var$vec3Add","$97967708ab73ab6c$var$vec3Set","$97967708ab73ab6c$var$Attribute","$c74iu","Attribute","$97967708ab73ab6c$var$Geometry","texcoord0","texcoord1","tangent","barycentric","mainAttribute","updateBoundingBox","posArr","generateVertexNormals","positions","normals","p1","p2","p3","n","generateFaceNormals","isUniqueVertex","generateUniqueVertex","generateTangents","nVertex","texcoords","tangents","tan1","tan2","sdir","tdir","st1s","st2s","st3s","st1t","st2t","st3t","p1x","p2x","p3x","p1y","p2y","p3y","p1z","t2","nCrossT","attributeNameList","getEnabledAttributes","oldAttrValues","ii","generateBarycentric","inverseTransposeMatrix","vec3TransformMat4","vec3ForEach","attribs","deleteBuffer","deleteVertexArrayOES","AttributeBuffer","IndicesBuffer","$97967708ab73ab6c$export$2e2bcd8739ae039","$8d1978d2328740d2$var$getArrayCtorByType","$8d1978d2328740d2$var$makeAttrKey","attrName","$8d1978d2328740d2$var$Attribute","idx3","idx4","$8d1978d2328740d2$var$AttributeBuffer","needsRemove","$8d1978d2328740d2$var$IndicesBuffer","ArrayConstructor","fromArray","copyValue","$8d1978d2328740d2$var$GeometryBase","_enabledAttributes","_attributeList","enabledAttributes","dirtyAttribute","dirtyIndices","getTriangleIndices","triangleCount","setTriangleIndices","initIndicesFromArray","attrib","removeAttribute","attributeList","getAttribute","isAttributesDirty","isIndicesDirty","_updateBuffer","firstUpdate","attributeBufferMap","bufferInfo","attribute","createBuffer","bufferData","enumerable","$8d1978d2328740d2$export$2e2bcd8739ae039","cullingBoundingBox","cullingMatrix","$a30938eee627f670$var$IDENTITY","$a30938eee627f670$var$WORLDVIEW","$a30938eee627f670$var$programKeyCache","$a30938eee627f670$var$getProgramKey","lightNumbers","lightTypes","$a30938eee627f670$var$RenderList","_opaqueCount","_transparentCount","$a30938eee627f670$var$lightSortFunc","startCount","isTransparent","endCount","$a30938eee627f670$export$2e2bcd8739ae039","viewBoundingBoxLastFrame","shadowUniforms","_cameraList","_lightUniforms","_previousLightNumber","_lightNumber","_lightProgramKeys","_renderLists","$8ywbj","$aWN4K","getNode","setMainCamera","unshift","getLights","lightNumber","light","group","groupId","_updateLightUniforms","cloneNode","newNode","clonedNodesMap","buildNodesMap","sNode","tNode","newChild","updateSceneBoundingBox","sceneMaterialTransparent","_doUpdateRenderList","getRenderList","isFrustumCulled","geoBBox","lightUniforms","lu","getLightGroups","lightGroups","getNumberChangedLightGroups","isLightNumberChanged","prevLightNumber","currentLightNumber","texSlots","_opaqueList","_transparentList","$cQ1KZ","$7f856390455236d0$export$2e2bcd8739ae039","$958bb4390f978ec9$var$exportEnd","$958bb4390f978ec9$export$2e2bcd8739ae039","$958bb4390f978ec9$var$exportHeaderPrefix","$958bb4390f978ec9$var$uniformVec3Prefix","$958bb4390f978ec9$var$uniformFloatPrefix","$5418e28e87b2a3c8$export$2e2bcd8739ae039","v4","$63aa7647ac4f355b$export$2e2bcd8739ae039","invProjectionMatrix","force","updateProjectionMatrix","setFromProjection","setViewMatrix","decomposeProjectionMatrix","setProjectionMatrix","ndc","tmpVec3","$8bca8566a5b820cd$var$vec3Set","$8bca8566a5b820cd$var$vec3Copy","$8bca8566a5b820cd$var$vec3TranformMat4","$8bca8566a5b820cd$var$mathMin","$8bca8566a5b820cd$var$mathMax","$8bca8566a5b820cd$var$Frustum","planes","m0","m5","m6","m7","m8","m9","m10","m14","m15","zNear","zFar","farY","nearY","getTransformedBoundingBox","$8bca8566a5b820cd$export$2e2bcd8739ae039","inverseTranspose","normalv4","pointv4","$9bd07140d9101b35$var$Plane","projectPoint","invLen","intersectFrustum","coords","onPlane","intersectLine","d0","d1","$9bd07140d9101b35$export$2e2bcd8739ae039","$920c2000cbe4b14e$var$textureUtil","onsuccess","_fetchTexture","$hrqw8","parseRGBE","$hq5Q9","px","$fDh5T","loadPanorama","cubeMap","panoramaToCubeMap","panoramaMap","environmentMapPass","$50l5a","skydome","$dyElP","setEnvironmentMap","encodeRGBM","heightToNormal","checkBump","srcData","getImageData","dstData","createImageData","putImageData","isHeightImage","downScaleSize","threshold","createChessboard","unitSize","color1","color2","repeat","$920c2000cbe4b14e$export$2e2bcd8739ae039","$b617c214b9ab4b2f$var$isPowerOfTwo","$ejgMv","$b617c214b9ab4b2f$var$targetList","$b617c214b9ab4b2f$var$TextureCube","nx","py","ny","pz","nz","$b617c214b9ab4b2f$var$isImageRenderable","imageList","loading","$b617c214b9ab4b2f$export$2e2bcd8739ae039","$3a4d4e609db7fd95$var$targets","$3a4d4e609db7fd95$export$2e2bcd8739ae039","shadowMapPass","cameras","_cameras","fov","_frameBuffer","$9Oy8V","getCamera","atan","attach","$d0ffd8f0fad6e528$export$2e2bcd8739ae039","$725344a38b2704d6$var$KEY_FRAMEBUFFER","$725344a38b2704d6$var$KEY_RENDERBUFFER","$725344a38b2704d6$var$KEY_RENDERBUFFER_WIDTH","$725344a38b2704d6$var$KEY_RENDERBUFFER_HEIGHT","$725344a38b2704d6$var$KEY_RENDERBUFFER_ATTACHED","$725344a38b2704d6$var$KEY_DEPTHTEXTURE_ATTACHED","$725344a38b2704d6$var$GL_FRAMEBUFFER","$725344a38b2704d6$var$GL_RENDERBUFFER","$725344a38b2704d6$var$GL_DEPTH_ATTACHMENT","$725344a38b2704d6$var$GL_COLOR_ATTACHMENT0","$725344a38b2704d6$var$FrameBuffer","depthBuffer","_textures","_boundRenderer","bindFramebuffer","_getFrameBufferGL","hasTextureAttached","attachment","_doAttach","attachedTextures","_doDetach","createRenderbuffer","renderbuffer","bindRenderbuffer","renderbufferStorage","framebufferRenderbuffer","updateMipmap","checkStatus","checkFramebufferStatus","createFramebuffer","boundRenderer","previous","canAttach","deleteRenderbuffer","framebufferTexture2D","detach","renderBuffer","deleteFramebuffer","$725344a38b2704d6$export$2e2bcd8739ae039","$9dedc03a7139bfe9$export$2e2bcd8739ae039","$jQBcC","$bbd46d80c0558e94$export$2e2bcd8739ae039","skyboxShader","environmentMap","_dummyCamera","attachScene","detachScene","skybox","_beforeRenderScene","envMap","getEnvironmentMap","renderSkybox","dummyCamera","$4873d2a32e07b0a4$var$planeMatrix","$4873d2a32e07b0a4$var$createPlane","widthSegments","heightSegments","$4873d2a32e07b0a4$export$2e2bcd8739ae039","depthSegments","inside","build","attrList","vertexNumber","faceNumber","faceOffset","vertexOffset","attrArray","attrSize","isNormal","$91e34a426eab8a22$export$2e2bcd8739ae039","faces","$e72fbb48ee60e7ec$export$2e2bcd8739ae039","$cae96518289dc3ae$var$fourCCToInt32","charCodeAt","$cae96518289dc3ae$var$FOURCC_DXT1","$cae96518289dc3ae$var$FOURCC_DXT3","$cae96518289dc3ae$var$FOURCC_DXT5","$cae96518289dc3ae$export$2e2bcd8739ae039","arrayBuffer","header","Int32Array","blockBytes","internalFormat","fourCC","isCubeMap","hasMipmap","dataOffset","mipmapCount","dataLength","byteArray","$cb29870b219ff80a$var$toChar","String","fromCharCode","$cb29870b219ff80a$var$rgbe2float","rgbe","$cb29870b219ff80a$var$oldReadColors","scan","xmax","rshift","$cb29870b219ff80a$var$readColors","$cb29870b219ff80a$export$2e2bcd8739ae039","$cb29870b219ff80a$var$uint82string","_char","scanline","offset2","parseRGBEFromPNG","png","$822df63735a8c81a$var$events","$822df63735a8c81a$var$makeHandlerName","p0","uv0","uv1","uv2","uv","$822df63735a8c81a$var$EChartsSurface","_texture","eveObj","_meshes","dispatchEvent","_chart","getDom","oldRefreshImmediately","__oldRefreshImmediately","refreshImmediately","attachedMesh","geo","texcoord","dispatch","zrX","zrY","attachToMesh","detachFromMesh","$822df63735a8c81a$export$2e2bcd8739ae039","$bfa89e6cc8c1cc2d$export$2e2bcd8739ae039","_normalDistribution","_brdfLookup","$9i8cj","generateNormalDistribution","integrateBRDF","__prefiltered","prefilterEnvironmentMap","getBRDFLookup","ambientCubemapLightColor","instance","ambientCubemapLightCubemap","ambientCubemapLightBRDFLookup","$6c3c275758fe8d47$var$cubemapUtil","$6c3c275758fe8d47$var$targets","normalDistribution","brdfLookup","prefilteredCubeMap","mipmapNum","prefilterMaterial","$aSDtI","decodeRGBM","skyEnv","dummyScene","envCubemap","$g7Ors","envMapPass","renderTargetTmp","ArrayCtor","readPixels","maxMipmapLevel","framebuffer","pass","$80BTx","$hTHkE","attachOutput","roughnessLevels","sampleSize","cosTheta","sinTheta","$6c3c275758fe8d47$export$2e2bcd8739ae039","$6vvSV","$5d4bb7f22c0071f1$var$planeGeo","$5d4bb7f22c0071f1$var$mesh","$5d4bb7f22c0071f1$var$camera","$5d4bb7f22c0071f1$export$2e2bcd8739ae039","outputs","blendWithPrevious","detachOutput","bufs","drawBuffersEXT","cc","renderQuad","$8d3ae48eb78338b5$export$2e2bcd8739ae039","$4bce5efa5a444df4$export$2e2bcd8739ae039","$d0792f8bca59c9a8$export$2e2bcd8739ae039","$7ebd9212df118384$export$2e2bcd8739ae039","$fcfa0dc917cce873$export$2e2bcd8739ae039","_coefficientsTmpArr","ambientSHLightColor","ambientSHLightCoefficients","coefficientsTmpArr","$b48a6428abec4100$var$sh","$b48a6428abec4100$var$targets","$b48a6428abec4100$var$harmonics","index","$b48a6428abec4100$var$normalTransform","rgbmTexture","cubePixels","coeff","texel","fetchNormal","sideResult","transform","$b48a6428abec4100$var$projectEnvironmentMapCPU","$b48a6428abec4100$export$2e2bcd8739ae039","$51b92a7037a3b5c8$export$2e2bcd8739ae039","$079072a6915a39b6$var$retrieve","queryDataIndex","payload","dataIndexInside","util","indexOfRawIndex","indexOfName","$079072a6915a39b6$export$2e2bcd8739ae039","$1e15566585ecbe10$export$2e2bcd8739ae039","phiStart","phiLength","thetaStart","thetaLength","texcoordAttr","normalAttr","i4","IndicesCtor","$4e67f47b8972f6a3$export$2e2bcd8739ae039","ambientLightColor","$7cbcea5dc171ec78$export$2e2bcd8739ae039","shadowBias","shadowSlopeScale","shadowCascade","cascadeSplitLogFactor","directionalLightDirection","__dir","directionalLightColor","$220675b20d37e080$export$2e2bcd8739ae039","range","pointLightPosition","pointLightRange","pointLightColor","$a7db10549dce12c7$export$2e2bcd8739ae039","umbraAngle","penumbraAngle","falloffFactor","spotLightPosition","spotLightRange","spotLightUmbraAngleCosine","spotLightPenumbraAngleCosine","spotLightFalloffFactor","spotLightDirection","spotLightColor","$890b63fd480f28ea$var$Vector4","$890b63fd480f28ea$var$defineProperty","$890b63fd480f28ea$var$proto","$890b63fd480f28ea$export$2e2bcd8739ae039","$itbn8","$a4201756bd56f845$var$Matrix2","$a4201756bd56f845$export$2e2bcd8739ae039","$d723c1b4c5263ba6$var$mat2","v0","LDU","D","U","$d723c1b4c5263ba6$export$2e2bcd8739ae039","$a8tp9","$c5f85e8fc6049550$var$Matrix2d","$c5f85e8fc6049550$export$2e2bcd8739ae039","$761175e8cd134146$var$mat2d","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","$761175e8cd134146$export$2e2bcd8739ae039","$904514fb6b2e57f7$var$Matrix3","$904514fb6b2e57f7$export$2e2bcd8739ae039","$lgkDh","$0b46e969dd968f23$export$2e2bcd8739ae039","_animators","getAnimators","pathSplitted","prop","animators","animator","animation","addAnimator","forwardToLast","stop","removeAnimator","$c5693a478abd2cfb$export$2e2bcd8739ae039","$f38948a66138329f$export$2e2bcd8739ae039","$c6daffe4d7f86469$export$2e2bcd8739ae039","$a65e8f93f52230a0$export$2e2bcd8739ae039","$c3bfeefe8ccbe0b0$export$2e2bcd8739ae039","$e4d327bb3e818b4f$export$2e2bcd8739ae039","$f86edee30aa9a60d$export$2e2bcd8739ae039","$d8988fcc33a17fde$var$GL_SERIES","$d8988fcc33a17fde$var$convertNormalEmphasis","optType","emphasis","normalOpt","emphasisOpt","$d8988fcc33a17fde$var$removeTextStyleInAxis","axesOpt","axisOpt","axisLabel","labelOpt","$d8988fcc33a17fde$export$2e2bcd8739ae039","$d8988fcc33a17fde$var$convertNormalEmphasisForEach","mapbox3D","mapbox","geo3D","$02d66d4dbc0cc637$var$SurfaceSeries","SeriesModel","dependencies","visualStyleAccessPath","formatTooltip","$ekFH5","getInitialData","validateDimension","dimOpts","getPrecision","getPrecision1","number","getPrecisionSafe","parametric","parametricEquation","uOpts","vOpts","dim","uCount","vCount","uPrecision","vPrecision","u2","equation","xOpts","yOpts","xCount","yCount","xPrecision","yPrecision","$hasQe","defaultOption","grid3DIndex","wireframe","lineStyle","dataShape","itemStyle","animationDurationUpdate","merge","$83v1k","$02d66d4dbc0cc637$export$2e2bcd8739ae039","$0183765d2e004208$export$2e2bcd8739ae039","realisticMaterial","textureTiling","textureOffset","lambertMaterial","colorMaterial","hatchingMaterial","paperColor","$a6f346831cfad453$export$2e2bcd8739ae039","multipleSeries","value1","getRawValue","formattedValue","tooltipDims","otherDim","dataDim","dimName","dimItem","getDimensionInfo","dimIndex","otherDims","$a6f346831cfad453$var$otherDimToDataDim","setEachItem","dimIdx","dimInfo","tooltip","dimType","valStr","tooltipName","formatTime","addCommas","encodeHTML","formatArrayValue","getName","$cMBeg","getItemVisualColor","colorStops","colorEl","getTooltipMarker","seriesName","$94e6d8a8adcaaa6a$export$bc92a5a7848039f","getItemVisual","getVisual","$94e6d8a8adcaaa6a$export$f154d4dab8f4e8c0","opacity","$c7f9be2816ab2190$export$2e2bcd8739ae039","getSource","coordSysDimensions","getCoordinateSystemDimensions","createDimensions","dimensionsDefine","encodeDefine","coordDimensions","axis3DModel","getReferringComponents","models","ordinalMeta","getOrdinalMeta","stackCalculationInfo","dataStack","enableDataStack","byIndex","stackedCoordDimension","List","setCalculationInfo","initData","$d4a57e870df956c5$var$vec3","$lMbFx","$d4a57e870df956c5$export$2e2bcd8739ae039","ChartView","_prevSurfaceMesh","_surfaceMesh","_createSurfaceMesh","shadingPrefix","methodName","isLinearSpace","isParametric","_getDataShape","wireframeModel","wireframeLineWidth","showWireframe","_updateSurfaceMesh","_initHandler","_updateAnimation","sortTriangles","renderNormal","$cjBCF","surfaceMesh","lastDataIndex","nearestDist","nearestIdx","getNearestPointIdx","pointToData","minDist","dispatchAction","pointsArr","getLayout","invalidDataCount","needsSplitQuad","barycentricAttr","colorAttr","column","needsNormal","quadToTriangle","quadBarycentric","getQuadIndices","quadIndices","pts","getFromArray","vertexNormals","vertexColors","getItemVisualOpacity","farPoints","j1","invisibleQuad","k3","idx1","idx31","uvArr","prevX","rowCount","columnCount","mayInvalid","rowDim","dataCount","rows","$fda721ddf262e23d$export$2e2bcd8739ae039","$ff312ef29643aa28$export$2e2bcd8739ae039","mat2d","quat","$3AZWC","$8f74717b178feb01$var$vec3","$8f74717b178feb01$var$p0","$8f74717b178feb01$var$p1","$8f74717b178feb01$var$p2","$8f74717b178feb01$export$2e2bcd8739ae039","needsSortTriangles","needsSortTrianglesProgressively","doSortTriangles","cameraPos","frame","posAttr","_triangleZList","_sortedTriangleIndices","_indicesTmp","_triangleZListTmp","firstZ","zMax","sortedTriangleIndices","_simpleSort","_progressiveQuickSort","targetIndices","targetTriangleZList","faceZList","fromIdx3","toIdx3","useNativeQuickSort","compare","_quickSort","$29e4c8c7daefe798$var$swap","$29e4c8c7daefe798$var$partition","pivot","storeIndex","pivotValue","$29e4c8c7daefe798$var$quickSort","newPivot","$29e4c8c7daefe798$var$ProgressiveQuickSort","_parts","_sorted","_currentSortPartIdx","subdividedParts","$29e4c8c7daefe798$export$2e2bcd8739ae039","$1f17a710dbd947da$var$getAxisType","axisDim","$1f17a710dbd947da$export$4b3e715f166fdd78","registerComponentModel","$4HSVX","registerComponentView","$bJH5P","registerCoordinateSystem","$bOM0o","$fyHap","$jDJTa","AxisView","ComponentView","registerAction","mainType","query","setView","$36d5ca4eb2d8dc55$var$Grid3DModel","ComponentModel","environment","boxWidth","boxHeight","boxDepth","axisPointer","label","formatter","margin","fontSize","padding","borderRadius","axisLine","axisTick","splitLine","splitArea","areaStyle","main","ambient","autoRotate","minDistance","maxDistance","$1lpJ3","$6EVpr","$HWwsY","$36d5ca4eb2d8dc55$export$2e2bcd8739ae039","$0fabb53848c0d709$export$2e2bcd8739ae039","projection","autoRotateDirection","autoRotateSpeed","autoRotateAfterStill","damping","rotateSensitivity","zoomSensitivity","panSensitivity","panMouseButton","rotateMouseButton","orthographicSize","maxOrthographicSize","minOrthographicSize","minAlpha","maxAlpha","$4d9302d06836d6ff$export$2e2bcd8739ae039","postEffect","bloom","depthOfField","focalRange","focalDistance","blurRadius","fstop","quality","screenSpaceAmbientOcclusion","screenSpaceReflection","maxRoughness","colorCorrection","brightness","contrast","saturation","lookupTexture","edge","FXAA","temporalSuperSampling","$084169a56348fd6a$export$2e2bcd8739ae039","shadow","$88b553112d426468$var$firstNotNull","$7PVKH","$88b553112d426468$var$dimIndicesMap","$88b553112d426468$export$2e2bcd8739ae039","quadsMaterial","linesMaterial","_control","$7WOET","_faces","faceInfo","face","$2NvRi","_axes","$018oc","_axisLabelSurface","$3HZTh","_axisPointerLineMesh","$9OAFh","useNativeLine","_axisPointerLabelsSurface","_axisPointerLabelsMesh","$2ObE3","_lightRoot","_sceneHelper","$eJgiQ","initLight","grid3DModel","_model","_api","control","setViewGL","viewControlModel","setFromViewControlModel","_onCameraChange","setScene","updateLight","setPostEffect","setTemporalSuperSampling","_initMouseHandler","updateAmbientCubemap","updateSkybox","showAxisPointer","grid3dModel","_doShowAxisPointer","_updateAxisPointer","hideAxisPointer","_doHideAxisPointer","_updateAxisPointerOnMousePosition","nearestIntersectPoint","axis0","getAxis","axis1","idx0","contain","_updateFaceVisibility","_updateAxisLinePosition","getAlpha","getBeta","getDistance","getCenter","from","uid","grid3DId","viewSpacePos","depths","frontIndex","backFace","xAxis","yAxis","zAxis","getExtentMax","getExtentMin","xAxisNode","yAxisNode","zAxisNode","xAxisZOffset","xAxisYOffset","yAxisXOffset","yAxisYOffset","zAxisXOffset","zAxisZOffset","flipped","_updateAxisLabelAlign","axisInfo","lineCoords","axisLineCoords","labelsMesh","textAlign","verticalAlign","cx","cy","setSpriteAlign","ifShowAxisPointer","axisPointerParentModel","getAxisColorAndLineWidth","lineStyleModel","lineWidth","linesGeo","convertToDynamicArray","otherCoord","otherDimIdx","faceOtherDim","axis2","faceOtherAxis","faceOtherDimIdx","colorAndLineWidth","addLine","convertToTypedArray","_updateAxisPointerLabelsMesh","axisPointerLabelsMesh","axisPointerLabelsSurface","axisPointerModel","labelModel","lineColor","text","getLabel","getTicks","labelColor","textEl","Text","$7Lqrt","createTextStyle","fill","align","rect","getBoundingRect","dataToCoord","addSprite","textVerticalAlign","getCoordsScale","$5c953eed80f84bbb$var$firstNotNull","$5c953eed80f84bbb$var$MOUSE_BUTTON_KEY_MAP","middle","$5c953eed80f84bbb$var$convertToArray","$5c953eed80f84bbb$var$OrbitControl","_center","minBeta","maxBeta","_mode","_camera","_needsUpdate","_rotating","_phi","_theta","_mouseX","_mouseY","_rotateVelocity","_panVelocity","_distance","_zoomSpeed","_stillTimeout","hdlName","_mouseDownHandler","_mouseUpHandler","_mouseWheelHandler","_pinchHandler","_update","_contextMenuHandler","_mouseMoveHandler","stopAllAnimation","setDistance","getOrthographicSize","_orthoSize","setOrthographicSize","setAlpha","setBeta","setCenter","centerArr","extraOpts","baseDistance","baseOrthoSize","_projection","setProjection","targetDistance","targetOrthographicSize","animationOpts","_notFirst","animateTo","animationEasingUpdate","_validateProperties","_addAnimator","_isAnimating","deltaTime","radian","_updateDistanceOrSize","_updatePan","_updateRotate","_updateTransform","velocity","_vectorDamping","_setDistance","_setOrthoSize","cameraHeight","cameraWidth","_startCountingStill","speed","_decomposeTransform","forward","targetTouches","button","preventDefault","wheelDelta","detail","_zoomHandler","pinchScale","_isRightMouseButtonUsed","_autoRotate","$5c953eed80f84bbb$export$2e2bcd8739ae039","$725539754c7d369f$var$vec3","$725539754c7d369f$var$sampleLinePoints","$725539754c7d369f$var$LinesGeometry","segmentScale","positionPrev","positionNext","prevPositionPrev","prevPosition","prevPositionNext","resetOffset","_vertexOffset","_triangleOffset","_itemVertexOffsets","setVertexCount","setTriangleCount","nTriangle","_getCubicCurveApproxStep","getCubicCurveVertexCount","segCount","getCubicCurveTriangleCount","getLineVertexCount","getPolylineVertexCount","getLineTriangleCount","getPolylineTriangleCount","pointsLen","addCubicCurve","x3","y3","z3","step2","step3","pre1","pre2","pre4","pre5","tmp1x","tmp1y","tmp1z","tmp2x","tmp2y","tmp2z","fx","fy","fz","dfx","dfy","dfz","ddfx","ddfy","ddfz","dddfx","dddfy","dddfz","addPolyline","startOffset","pointsCount","is2DArray","pointColor","notSharingColor","positionPrevAttr","positionNextAttr","offsetAttr","k4","setItemColor","endOffset","currentTriangleOffset","currentVertexOffset","$7Me7G","$725539754c7d369f$export$2e2bcd8739ae039","$5a97f8a39d3e7f68$export$2e2bcd8739ae039","$2b35656e947c4f5c$var$ZRTextureAtlasSurfaceNode","gap","_x","_y","_rowHeight","$2b35656e947c4f5c$var$ZRTextureAtlasSurface","_canvas","zrender","_dpr","_coords","_gap","_textureAtlasNodes","_nodeWidth","_nodeHeight","_currentNodeIdx","_fitElement","canvasWidth","canvasHeight","coordsOffset","spriteWidth","spriteHeight","scaleX","scaleY","_getCurrentNode","_expand","nodeLen","getCoords","$2b35656e947c4f5c$export$2e2bcd8739ae039","$ab91ea1a4b42afe4$var$SceneHelper","_skybox","mainLight","ambientLight","lightModel","mainLightModel","ambientLightModel","ambientCubemapModel","_cubemapLightsCache","_isSkyboxFromAmbientCubemap","_currentCubemapLights","environmentUrl","innerDrawElementOnCanvas","srgbDefineMethod","$ab91ea1a4b42afe4$export$2e2bcd8739ae039","$2098ded2e70826fe$var$firstNotNull","$2098ded2e70826fe$var$dimIndicesMap","$2098ded2e70826fe$var$Grid3DFace","linesMesh","quadsMesh","$a6jUB","axes","lineGeometry","quadsGeometry","_updateSplitLines","_udpateSplitAreas","otherAxis","coord","$2098ded2e70826fe$var$updateFacePlane","axisModel","otherExtent","getExtent","isBlank","splitLineModel","lineColors","ticksCoords","getTicksCoords","tickModel","tickCoord","splitAreaModel","areaStyleModel","clamp","prevP0","prevP1","addQuad","$2098ded2e70826fe$export$2e2bcd8739ae039","$75a9e90782879cfe$var$vec3","$75a9e90782879cfe$var$QuadsGeometry","_faceOffset","setQuadCount","nQuad","getQuadVertexCount","getQuadTriangleCount","$75a9e90782879cfe$export$2e2bcd8739ae039","$00369a116882ac48$var$firstNotNull","$00369a116882ac48$var$dimIndicesMap","$00369a116882ac48$var$Grid3DAxis","axisLabelsMesh","labelElements","$00369a116882ac48$var$otherDim","axisLabelSurface","labelsGeo","extent","axisLineModel","axisTickModel","axisLabelModel","axisLineColor","axisLineStyleModel","tickLength","otherIdx","categoryData","labelMargin","labels","getViewLabels","tickValue","formattedLabel","rawLabel","itemTextStyleModel","Model","textColor","nameTextStyleModel","strokeColor","stroke","__idx","nameLabelElement","labelGeo","nameLabelEl","$00369a116882ac48$export$2e2bcd8739ae039","$l5lG3","$20b948bbcbdea13e$export$2e2bcd8739ae039","$e6dA9","$a43c29591f646b34$var$squareTriangles","$a43c29591f646b34$var$SpritesGeometry","setSpriteCount","spriteCount","_spriteCount","spriteOffset","leftOffset","topOffset","rightOffset","bottomOffset","screenMargin","setSprite","$a43c29591f646b34$export$2e2bcd8739ae039","$f59ae149e4db14e5$export$2e2bcd8739ae039","$5b4a1838556b4f0c$export$2e2bcd8739ae039","$3tEJu","$89a99a15d7dee451$var$resizeCartesian3D","boxLayoutOption","getBoxLayoutParams","$1x4Qd","getLayoutRect","setExtent","$89a99a15d7dee451$var$updateCartesian3D","dataExtents","mapDimensionsAll","getDataExtent","axisType","cartesian3D","createScale","$hPzSi","isCategory","onBand","getLabelModel","getTickModel","addAxis","$89a99a15d7dee451$export$2e2bcd8739ae039","ecModel1","cartesian3DList","__viewGL","$iW3a8","axesTypes","firstGridModel","axesModels","getComponent","findAxesModels","getCoordSysModel","$2883ad2dd70ff25e$var$Cartesian3D","$csFmQ","containData","coordToData","inherits","$2883ad2dd70ff25e$export$2e2bcd8739ae039","$cfb3070d3dc1c775$var$Axis3D","Axis","_extent","calculateCategoryInterval","$cfb3070d3dc1c775$export$2e2bcd8739ae039","$dc9018c58f2b419c$var$ViewGL","_compositor","$eY0SJ","_temporalSS","$65suf","_shadowMapPass","$1Ni4J","pcfKernels","pcfKernel","$7ZVXB","_pcfKernels","needsTemporalSS","jitterProjection","oldCamera","$dc9018c58f2b419c$var$ndc","_needsSortProgressively","needsSortVerticesProgressively","_frame","resetFrame","enableTemporalSS","_enableTemporalSS","_enablePostEffect","_enableDOF","accumFrame","_updateTransparent","kernelPCF","_updateShadowPCFKernel","updateNormal","getFrame","_updateSSAO","getSourceFrameBuffer","composite","cameraWorldPosition","needsSortVertices","doSortVertices","ifEnableSSAO","_enableSSAO","updateSSAO","getSSAOTexture","postEffectModel","compositor","bloomModel","edgeModel","dofModel","ssaoModel","ssrModel","fxaaModel","colorCorrModel","enableBloom","disableBloom","enableDOF","disableDOF","enableSSR","disableSSR","enableColorCorrection","disableColorCorrection","enableEdge","disableEdge","enableFXAA","disableFXAA","enableSSAO","disableSSAO","setBloomIntensity","setEdgeColor","setColorLookupTexture","setExposure","setSSAOParameter","setSSRParameter","setDOFParameter","setColorCorrection","temporalSuperSamplingModel","setRootNode","node3D","$dc9018c58f2b419c$export$2e2bcd8739ae039","$14e8636e10ab55a4$var$targets","$14e8636e10ab55a4$var$getDepthMaterialUniform","$14e8636e10ab55a4$var$isDepthMaterialChanged","$eGyD7","splitFrustum","splitProjMatrix","cropBBox","cropMatrix","lightViewMatrix","lightViewProjMatrix","lightProjMatrix","$14e8636e10ab55a4$var$ShadowMapPass","softShadow","PCF","shadowBlur","lightFrustumBias","_lastRenderNotCastShadow","_shadowMapNumber","POINT_LIGHT","DIRECTIONAL_LIGHT","SPOT_LIGHT","_depthMaterials","_distanceMaterials","_receivers","_lightsCastShadow","_lightCameras","_lightMaterials","_texturePool","$1yxqy","_gaussianPassH","_gaussianPassV","_outputDepthPass","sceneCamera","_renderShadowPass","renderDebug","VSM","_updateReceivers","getSize","dirLightHasCascade","spotLightShadowMaps","spotLightMatrices","directionalLightShadowMaps","directionalLightMatrices","shadowCascadeClips","pointLightShadowMaps","renderDirectionalLightShadow","renderSpotLightShadow","renderPointLightShadow","directionalLightShadowMapSizes","shadowCascadeClipsNear","shadowCascadeClipsFar","reverse","spotLightShadowMapSizes","defaultShadowMaterial","_getDepthMaterial","clippedFar","clippedNear","lightCamera","_getDirectionalLightCamera","lvpMat4Arr","clipPlanes","isPerspective","scaleZ","offsetZ","clog","cuni","_getTexture","nearPlane","farPlane","shadowSize","_gaussianFilter","_getSpotLightCamera","renderListEachSide","lightWorldPosition","lightBBox","targetsNeedRender","vtx","absx","absy","absz","_getPointLightCamera","shadowMaterial","isPointLight","shaderPrefix","parameter","tmpTexture","cascade","resolution","sceneViewBoundingBox","lightViewBBox","directional","spot","_meshMaterials","$14e8636e10ab55a4$export$2e2bcd8739ae039","$1222e56360fe0242$var$TexturePool","_pool","_allocatedTextures","$1222e56360fe0242$var$generateKey","$1222e56360fe0242$var$defaultParams","$1222e56360fe0242$var$defaultParamPropList","IPOT","$1222e56360fe0242$var$fallBack","$1222e56360fe0242$export$2e2bcd8739ae039","$ab0fd9b2a0b082da$export$2e2bcd8739ae039","$ae575a5f1e1cd1ef$var$makeCommonOutputs","$hvPeE","$2ka6y","$jvQVN","$h20aE","$6eQkJ","$5yFVj","$5NU8s","$k9L1c","$arFAW","$9oPhG","$klH9T","$ae575a5f1e1cd1ef$var$FINAL_NODES_CHAIN","$ae575a5f1e1cd1ef$var$EffectCompositor","_sourceTexture","_depthTexture","_framebuffer","_normalPass","$ftLDK","$eiWX4","$3ssiD","sourceNode","getNodeByName","cocNode","_sourceNode","_cocNode","_compositeNode","_fxaaNode","_dofBlurNodes","_dofBlurKernel","_dofBlurKernelSize","_finalNodesChain","gBufferObj","normalTexture","getNormalTexture","depthTexture","getDepthTexture","_ssaoPass","$4smzT","_ssrPass","$2yatu","_edgePass","$1ajQv","wrapCallback","oldFunc","__original","rendererMock","sourceTexture","nodes","outKey","paramKey","_ifRenderNormalPass","_enableEdge","_enableSSR","_getPrevNode","prevNode","_getNextNode","nextNode","_addChainNode","inputs","addNode","_removeChainNode","removeNode","getTargetTexture","getSourceTexture","_enableColorCorrection","setParameter","kernelSize","low","medium","high","ultra","maxIteration","pixelStride","setPhysicallyCorrectSSR","physical","setPhysicallyCorrect","isSSREnabled","targetTexture","setSSAOTexture","blurKernel","blurKernelSize","kernelOffset","$h28S3","$ae575a5f1e1cd1ef$export$2e2bcd8739ae039","$a6a079b57409493c$export$2e2bcd8739ae039","$57e8822ca689c1c3$var$shaderSourceReg","$57e8822ca689c1c3$var$createNode","nodeInfo","lib","shaderExp","exec","shaders","pin","outputInfo","keepLastFrame","outputLastFrame","$57e8822ca689c1c3$var$convertParameter","$1gdcW","$6RI4g","$lMQ4K","$57e8822ca689c1c3$var$createSizeSetHandler","$57e8822ca689c1c3$var$tryConvertExpr","$57e8822ca689c1c3$var$defaultWidthFunc","$57e8822ca689c1c3$var$defaultHeightFunc","paramInfo","sizeScale","exprFunc","exprRes","$57e8822ca689c1c3$export$2e2bcd8739ae039","json","$6OXY7","cbd","textureRootPath","textureInfo","$57e8822ca689c1c3$var$loadTextures","textureLib","shaderLib","afterLoad","$afUbV","$4f75ee1f7cac0be0$export$2e2bcd8739ae039","_outputs","beforeFrame","updateReference","afterFrame","allocateTexture","releaseTexture","getFrameBuffer","$7776e4856e68cfde$export$2e2bcd8739ae039","inputName","fromPinInfo","fromPin","findPin","link","input","$gznvE","inputPin","$c10226b7845123af$export$2e2bcd8739ae039","inputLinks","outputLinks","_prevOutputTextures","_outputTextures","_outputReferences","_rendering","_rendered","updateParameter","outputName","parametersCopy","_parametersCopy","setParameters","getOutput","removeReference","inputPinName","fromNode","fromPinName","$0eb187d697fff64b$export$2e2bcd8739ae039","autoUpdateScene","renderInfo","$4ff9e0470afa256e$export$2e2bcd8739ae039","$fdc679cda06e2ccd$export$2e2bcd8739ae039","inputTexture","$kT8cs","$6699b751b461c572$export$2e2bcd8739ae039","$jdCFu","$acu4z","$8Cetc","$f34f4e0c53ef5114$export$2e2bcd8739ae039","$cbfd1329a8c5cbf9$export$2e2bcd8739ae039","$dfdd39ebb0a23272$export$2e2bcd8739ae039","$1b154998eccbb82d$export$2e2bcd8739ae039","$76d25a300dee8164$export$2e2bcd8739ae039","$e349f89c1b4a3392$export$2e2bcd8739ae039","$c662c182292316b0$export$2e2bcd8739ae039","$48aca5306a9e6c67$export$2e2bcd8739ae039","$40c0a5dca16dbf03$export$2e2bcd8739ae039","$439d12ad2d8e5800$export$2e2bcd8739ae039","$645d18c0f4f0e68e$export$2e2bcd8739ae039","$eac91ec3e1aa33e6$export$2e2bcd8739ae039","$79acb0df6a06a2ac$export$2e2bcd8739ae039","$33eb4a77b23a44c0$var$generateNoiseData","$33eb4a77b23a44c0$var$generateNoiseTexture","$33eb4a77b23a44c0$var$generateKernel","hemisphere","kernel","$33eb4a77b23a44c0$var$SSAOPass","_blurPass","_ssaoTexture","_blurTexture","_blurTexture2","_depthTex","_normalTex","setNoiseSize","setKernelSize","power","$fM761","setDepthTexture","depthTex","setNormalTexture","normalTex","_kernelSize","ssaoPass","blurPass","_kernels","viewInverseTranspose","ssaoTexture","blurTexture","blurTexture2","$33eb4a77b23a44c0$export$2e2bcd8739ae039","$5d2b30a1722d37c1$export$2e2bcd8739ae039","base","$b7c0d7ddc5bd8c29$export$2e2bcd8739ae039","$1db6e1cde653ef2c$var$SSRPass","_blurPass1","_blurPass2","_blendPass","_ssrTexture","_texture2","_texture3","_prevTexture","_currentTexture","_totalSamples","_samplePerFrame","_downScale","$3O6pp","setAmbientCubemap","specularCubemap","enableSpecularMap","ssrTexture","texture2","texture3","ssrPass","blurPass1","blurPass2","blendPass","toViewSpace","toWorldSpace","_physicallyCorrect","weight1","weight2","isPhysicallyCorrect","$1db6e1cde653ef2c$export$2e2bcd8739ae039","$2c5b0340fefc5fe2$export$2e2bcd8739ae039","$c66981211071b561$export$2e2bcd8739ae039","$b44e84c87f96899c$var$attachTextureToSlot","$b44e84c87f96899c$var$getBeforeRenderHook","defaultNormalMap","defaultBumpMap","defaultRoughnessMap","normalMaterial1","previousNormalMap","previousBumpMap","previousRoughnessMap","previousRenderable","normalMaterial","prevNormalMaterial","normalMap","roughnessMap","bumpMap","useBumpMap","useRoughnessMap","doubleSide","$b44e84c87f96899c$var$NormalPass","_normalMaterial","_defaultNormalMap","_defaultBumpMap","_defaultRoughessMap","_debugPass","$6VB4H","$b44e84c87f96899c$export$2e2bcd8739ae039","$50b4d33631a49692$export$2e2bcd8739ae039","$0d961e9492463bbe$var$EdgePass","_targetTexture","$0d961e9492463bbe$export$2e2bcd8739ae039","$2849f059d056df9e$export$2e2bcd8739ae039","textureSize","blurSize","blurDir","texture1","focalDist","coc","BLUR_NEARFIELD","BLUR_COC","original","blurred","nearfield","nearcoc","$6d7e22eabf8de7d7$export$2e2bcd8739ae039","$ed073f36036b568f$export$2e2bcd8739ae039","$46e94e9af0e3548b$var$TemporalSuperSampling","frames","haltonSequence","_haltonSequence","_sourceTex","_sourceFb","_prevFrameTex","_outputTex","_blendFb","_outputPass","translationMat","getOutputTexture","sourceTex","notOutput","$46e94e9af0e3548b$export$2e2bcd8739ae039","$e4c541688db4121b$var$Axis3DModel","queryComponents","gridIndex","gridId","mixinAxisModelCommonMethods","$e4c541688db4121b$export$2e2bcd8739ae039","$b53b840cdc22a0cd$var$AXIS_TYPES","$b53b840cdc22a0cd$export$2e2bcd8739ae039","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AxisModel","__ordinalMeta","mergeDefaultAndTheme","themeModel","getTheme","getDefaultOption","optionUpdated","$dVtdQ","createByAxisModel","getCategories","categories","$38eGc","registerSubTypeDefaulter","curry","$247d817f476a2993$var$defaultOption","nameLocation","nameTextStyle","nameGap","$247d817f476a2993$var$categoryAxis","boundaryGap","alignWithLabel","interval","$247d817f476a2993$var$valueAxis","splitNumber","$247d817f476a2993$var$timeAxis","$247d817f476a2993$var$logAxis","logBase","$247d817f476a2993$export$2e2bcd8739ae039","categoryAxis3D","valueAxis3D","timeAxis3D","logAxis3D"],"version":3,"file":"BedMesh.9935a80f.js.map"}